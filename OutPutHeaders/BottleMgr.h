/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MMService.h"
#import "WeChat-Structs.h"
#import "MessageObserverDelegate.h"
#import "MMService.h"
#import "NotifyFromMainCtrlDelegate.h"

@class NSMutableArray, NSMutableData, CBottleSetting, NSRecursiveLock, CMMDB, NSString, NSMutableDictionary, CBottleExtendCode;

@interface BottleMgr : MMService <MMService, NotifyFromMainCtrlDelegate, MessageObserverDelegate> {
	CBottleExtendCode* m_oCode;
	CMMDB* m_oMMDB;
	NSRecursiveLock* m_oLock;
	unsigned long m_uiThrowCount;
	unsigned long m_uiFishCount;
	NSMutableData* m_dtThumbBuffer;
	NSMutableData* m_dtContentBuffer;
	NSMutableDictionary* m_dicThrow;
	NSMutableDictionary* m_dicOpen;
	NSMutableArray* m_arrWording;
	CBottleSetting* m_oSetting;
	BOOL m_bBan;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) NSMutableArray* m_arrWording;
@property(retain, nonatomic) CBottleSetting* m_oSetting;
-(void).cxx_destruct;
-(void)onServiceReloadData;
-(void)dealloc;
-(void)MessageReturn:(unsigned long)aReturn MessageInfo:(id)info Event:(unsigned long)event;
-(void)NotifyFromMainCtrl:(unsigned long)mainCtrl MessageInfo:(id)info Event:(unsigned long)event;
-(void)SafeCallThrowAndFishNumChanged;
-(void)handleOpenBottleOK:(id)ok;
-(void)handleFishBottleOK:(id)ok;
-(void)handleThrowBottleOK:(id)ok;
-(unsigned long)GetFishCount;
-(unsigned long)GetThrowCount;
-(void)GetThrowAndFishCount;
-(void)FishBottle;
-(void)FishThenOpenBottle:(unsigned long)bottle;
-(void)createOpenBottleEvent:(unsigned long)event;
-(void)OpenBottle:(unsigned long)bottle;
-(void)setVoiceMsgReadByLocalID:(unsigned long)anId andMsgWrap:(id)wrap;
-(id)getThrowBottleWording;
-(void)throwBack:(id)back;
-(unsigned long)throwBottle:(id)bottle MsgWrap:(id)wrap;
-(void)createThrowBottleEvent:(unsigned long)event;
-(void)AddMsg:(id)msg MsgWrap:(id)wrap;
-(void)DeleteBottleByLocalID:(unsigned long)anId backed:(BOOL)backed;
-(BOOL)DeleteBottle:(id)bottle backed:(BOOL)backed;
-(void)DeleteBottle:(id)bottle;
-(void)setBottle:(id)bottle fromDBBottle:(id)dbbottle;
-(void)fillBottleQueryProperty:(vector<WCDBConditionBase, std::__1::allocator<WCDBConditionBase> >*)property;
-(void)callOnUpdateBottle:(id)bottle;
-(void)updateBottle:(id)bottle;
-(unsigned long)AddBottleToDB:(id)db;
-(void)checkBottle:(id)bottle;
-(id)GetAllBottles;
-(id)GetBottleByLocalID:(unsigned long)anId;
-(unsigned long)GetSvrIDByLocalID:(unsigned long)anId;
-(id)getSvrUsrNameByLocalUsrName:(id)name;
-(id)getLocalUsrNameBySvrUsrName:(id)name;
-(void)setBottleUsrInfo:(id)info;
-(void)spliteSvrUsrName:(id)name encryptUsrName:(id*)name2 bottleID:(id*)anId;
-(id)getSvrUsrNameByLocalID:(unsigned long)anId;
-(unsigned long)getMsgTypeByBottleDataType:(unsigned long)type;
-(unsigned long)getMsgTypeByDataType:(unsigned long)type;
-(BOOL)isBeBanned;
-(void)initDB:(id)db withLock:(id)lock;
-(void)onServiceInit;
-(id)init;
-(id)GetBottleIDFromContactName:(id)contactName;
-(void)SaveSetting;
-(id)GetSetting;
-(void)LoadSetting;
-(void)GenTestData;
-(void)testThrow;
@end

