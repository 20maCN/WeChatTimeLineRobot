/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MMService.h"
#import "MMKernelExt.h"
#import "MMService.h"
#import "PBMessageObserverDelegate.h"
#import "IAUAudioDeviceExt.h"
#import "IRemoteControlCheckExt.h"
#import "CNetworkStatusExt.h"
#import "IMMNewSessionMgrComparerExt.h"
#import "AUAudioDataSource.h"
#import "IContactMgrExt.h"
#import "AVAudioPlayerDelegate.h"
#import "IMMNewSessionMgrExt.h"
#import "WeChat-Structs.h"
#import "IWXTalkPresentExt.h"

@class WXTalkieComponent, MMTimer, WXTalkStatusReportHelper, NSString, WXTalkDNSController, WXTalkRoomData, NSData, AVAudioPlayer, NSRecursiveLock;

@interface WXTalkMgr : MMService <AUAudioDataSource, IRemoteControlCheckExt, AVAudioPlayerDelegate, CNetworkStatusExt, IAUAudioDeviceExt, MMService, PBMessageObserverDelegate, IWXTalkPresentExt, AVAudioPlayerDelegate, IContactMgrExt, IMMNewSessionMgrExt, IMMNewSessionMgrComparerExt, MMKernelExt> {
	BOOL _isInTalkRoom;
	BOOL _isRealInTalkRoom;
	MMTimer* _regetMicTimer;
	BOOL _isPause;
	BOOL _isPlayingBeginSound;
	BOOL _isGettingRoomMember;
	BOOL _isRecording;
	NSData* _giveupMicSound;
	BOOL _hasPlayGetMicSound;
	BOOL _isWantToTalk;
	unsigned _scene;
	AVAudioPlayer* _player;
	WXTalkStatusReportHelper* _reportHelper;
	WXTalkRoomData* roomData;
	WXTalkieComponent* component;
	WXTalkDNSController* wxTalkDNSController;
	NSRecursiveLock* audioEncLock;
	NSRecursiveLock* audioDecLock;
	MMTimer* wxTalkTimer;
	FILE* recordDumpFile;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) unsigned scene;
@property(assign, nonatomic) FILE* recordDumpFile;
@property(retain, nonatomic) MMTimer* wxTalkTimer;
@property(retain, nonatomic) NSRecursiveLock* audioDecLock;
@property(retain, nonatomic) NSRecursiveLock* audioEncLock;
@property(retain, nonatomic) WXTalkDNSController* wxTalkDNSController;
@property(retain, nonatomic) WXTalkieComponent* component;
@property(retain, nonatomic) WXTalkRoomData* roomData;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
-(void).cxx_destruct;
-(void)onPreQuit;
-(void)onKickQuit;
-(void)getComparer:(id*)comparer ForSelector:(int)selector;
-(int)compareSessionInfo:(id)info toInfo:(id)info2;
-(void)onModifyContact:(id)contact;
-(void)OnRoomMemberChange:(id)change withNewMemberList:(id)newMemberList;
-(void)TellOthersAllMembersExitRoom;
-(void)TellOthersWhoEnterOrExitRoom:(id)room;
-(void)reOpenWXTalkMode:(id)mode;
-(BOOL)checkIfOfflineAndNeedReEnter:(id)enter;
-(void)MessageReturn:(id)aReturn Event:(unsigned long)event;
-(void)handleHeartBeatResponse:(id)response;
-(void)handleGetTalkRoomMemberResponse:(id)response;
-(void)SendGiveupMicrophoneRequest;
-(void)SendRegetMicrophoneRequest;
-(void)handleGetMicrophoneResponse:(id)response;
-(void)SendGetMicrophoneRequest;
-(void)handleExitTalkRoomResponse:(id)response;
-(void)SendExitTalkRoomRequest;
-(void)handleEnterTalkRoomResponse:(id)response;
-(int)retToErrType:(int)errType;
-(void)SendEnterTalkRoomRequest;
-(void)stopRegetMicLogic;
-(void)startRegetMicLogic;
-(void)GiveupMicrophone;
-(void)sendGiveupMicrophoneSound;
-(void)GetMicrophone;
-(void)CloseWXTalkModeAndNotifyUI:(BOOL)ui;
-(void)CloseWXTalkMode:(BOOL)mode;
-(BOOL)IsRealInTalkRoom;
-(BOOL)OpenWXTalkMode:(id)mode;
-(BOOL)CanEnterThisRoom:(id)room;
-(BOOL)IsOpenAnyWXTalkMode;
-(BOOL)IsOpenWXTalkMode:(id)mode;
-(void)audioPlayerBeginInterruption:(id)interruption;
-(void)audioPlayerDidFinishPlaying:(id)audioPlayer successfully:(BOOL)successfully;
-(void)playSound:(id)sound OfType:(id)type numberOfLoops:(int)loops;
-(void)stopPlaySound;
-(void)resetData;
-(void)onServiceClearData;
-(void)onServiceInit;
-(void)dealloc;
-(void)UnInitAll;
-(void)InitAll;
-(void)iRemoteControlCheckShouldFinishRecord;
-(void)iRemoteControlCheckShouldBeginRecord;
-(int)AudioDevGetData:(char*)data length:(unsigned long)length;
-(int)AudioDevPutData:(char*)data length:(unsigned long)length;
-(BOOL)isGetDataReady;
-(void)DumpToRecordFile:(char*)recordFile withDataLen:(unsigned)dataLen;
-(void)NotifyMainThreadCurrentSpeakingStatus:(id)status;
-(void)NotifyMainThreadHasTalkingData;
-(void)NotifyMainThreadNoTalkingData;
-(void)PlayBeginSound;
-(void)StopReportNobodyTalking;
-(void)ReportNobodyTalking;
-(void)SetCurrentSpeakingMember:(id)member;
-(void)GetUnknowMemberByMemberId:(unsigned long)anId;
-(void)StopRecord;
-(void)StartPlay;
-(void)StartRecord;
-(void)StopTalk;
-(void)StartTalk;
-(void)audioDeviceRestart:(id)restart;
-(void)audioDeviceResetCallback:(id)callback;
-(void)Restart;
-(void)audioDevicePause:(id)pause;
-(void)Pause;
-(void)audioDeviceForceStop:(id)stop;
-(void)ForceStop;
-(void)ReachabilityChange:(unsigned long)change;
-(void)OnEngineError:(int)error;
-(void)OnOpenEngineSuccess;
-(void)NotifyMainThreadEngineError;
-(void)NotifyMainThreadEnterRoomOK;
-(void)handleEndInterruption;
-(void)handleBeginInterruption;
-(void)StopSession;
-(void)StartSession;
-(void)CloseRecordDumpFile;
-(void)CreateRecordDumpFile;
-(void)TimerCheck;
-(void)SendHeartBeatRequest;
@end

