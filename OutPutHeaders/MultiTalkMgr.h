/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AVVideoDeviceSessionDelegate.h"
#import "MultiTalkCgiDelegate.h"
#import "MultiTalkMainViewControllerDelegate.h"
#import "MultitalkMinimizeWindowDelegate.h"
#import "AVVideoDataSource.h"
#import "AVVideoDeviceSetupSessionDelegate.h"
#import "MonoServiceMsgDelegate.h"
#import "ISysCallCheckExt.h"
#import "MMKernelExt.h"
#import "MMService.h"
#import "WeChat-Structs.h"
#import "VoIPPushKitExt.h"
#import "MMService.h"
#import "IMsgExt.h"
#import "MonoServiceMsgLogicDelegate.h"
#import "CNetworkStatusExt.h"
#import "AVVideoDeviceDelegate.h"
#import "WXCMultiTalkApiDelegate.h"
#import "WXCAssistHelperDelegate.h"

@class MultiTalkWindow, MMTimer, SafeMutableDictionary, MultitalkMinimizeWindow, NSString, NSMutableArray, AVVideoDevice, AVAudioPlayer;

@interface MultiTalkMgr : MMService <MMKernelExt, WXCMultiTalkApiDelegate, WXCAssistHelperDelegate, MultiTalkCgiDelegate, IMsgExt, MultiTalkMainViewControllerDelegate, MultitalkMinimizeWindowDelegate, AVVideoDeviceSessionDelegate, AVVideoDeviceDelegate, AVVideoDataSource, AVVideoDeviceSetupSessionDelegate, CNetworkStatusExt, ISysCallCheckExt, MonoServiceMsgLogicDelegate, MonoServiceMsgDelegate, VoIPPushKitExt, MMService> {
	BOOL _m_videoDeviceRunning;
	BOOL _m_multiTalkReady;
	BOOL _m_blockDisplayVideo;
	BOOL _m_useLowQualityVideo;
	NSMutableArray* m_cgiList;
	MultiTalkWindow* m_mainWindow;
	MultitalkMinimizeWindow* m_statusWindow;
	SafeMutableDictionary* _m_renderDic;
	SafeMutableDictionary* _m_videoInfoDic;
	AVVideoDevice* _m_videoDevice;
	AVAudioPlayer* _m_audioPlayer;
	unsigned _currentMessageId;
	unsigned _m_uploadFpsCount;
	MMTimer* _m_uploadFpsTimer;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) BOOL m_useLowQualityVideo;
@property(assign, nonatomic) BOOL m_blockDisplayVideo;
@property(retain, nonatomic) MMTimer* m_uploadFpsTimer;
@property(assign, nonatomic) unsigned m_uploadFpsCount;
@property(assign, nonatomic) BOOL m_multiTalkReady;
@property(assign, nonatomic) unsigned currentMessageId;
@property(retain, nonatomic) AVAudioPlayer* m_audioPlayer;
@property(assign, nonatomic) BOOL m_videoDeviceRunning;
@property(retain, nonatomic) AVVideoDevice* m_videoDevice;
@property(retain, nonatomic) SafeMutableDictionary* m_videoInfoDic;
@property(retain, nonatomic) SafeMutableDictionary* m_renderDic;
@property(retain, nonatomic) MultitalkMinimizeWindow* m_statusWindow;
@property(retain, nonatomic) MultiTalkWindow* m_mainWindow;
@property(retain, nonatomic) NSMutableArray* m_cgiList;
-(void).cxx_destruct;
-(void)onReceiveVoIPPushInfo:(id)info;
-(BOOL)onMonoServiceMsgCancelWithMsg:(id)msg;
-(BOOL)onMonoServiceMsgRejectWithMsg:(id)msg;
-(void)onMonoServiceMsgStartWithMsg:(id)msg;
-(BOOL)isMonoServiceCheckingServer;
-(BOOL)isMonoServiceUIWorking;
-(BOOL)isMonoServiceUIExist;
-(void)InputIsAvailableChanged:(BOOL)changed;
-(void)EndInterruption;
-(void)BeginInterruption;
-(void)onSimCardNetTypeChange;
-(void)ReachabilityChange:(unsigned long)change;
-(void)updateNetworkTacticsWithNotify:(BOOL)notify;
-(BOOL)checkLowNetworkWithNotify:(BOOL)notify;
-(BOOL)checkHighWWanWithNotify:(BOOL)notify;
-(BOOL)checkWiFiWithNotify:(BOOL)notify;
-(BOOL)checkUnReachableWithNotify:(BOOL)notify;
-(BOOL)isLowNetwork;
-(void)checkLowPerformanceWithNotify;
-(BOOL)isLowPerformanceDevice;
-(void)DidCapturedImage:(id);
-(int)VideoDevPutData:(char*)data imageWidth:(unsigned long)width imageHeight:(unsigned long)height;
-(void)videoDevice:(id)device didFailWithError:(id)error;
-(void)videoDeviceSessionFinished:(id)finished;
-(void)videoDeviceSessionBegan:(id)began;
-(void)videoDeviceCameraBack:(id)back;
-(void)videoDeviceCameraFront:(id)front;
-(void)onVideoSessionSetupComplete;
-(void)onVideoSessionChangeCameraComplete;
-(void)onVideoSessionStopComplete;
-(void)onVideoSessionStartComplete;
-(void)onMultiTalkMainViewControllerHoldMultiTalkAudio;
-(void)onMultiTalkMainViewControllerResumeMultiTalkAudio;
-(void)onMultiTalkMainViewControllerRecoverVideoOn:(BOOL)on;
-(void)onMultiTalkMainViewControllerCloseVideoSendAndRecv;
-(void)onMultiTalkMainViewControllerFlipCamera;
-(BOOL)onMultiTalkMainViewControllerShouldBlockReceiveVideo;
-(BOOL)onMultiTalkMainViewControllerRequestLocalVideoDeviceStatus;
-(void)onMultiTalkMainViewControllerAddNewMemberArray:(id)array withGroup:(id)group;
-(void)onMultiTalkMainViewControllerVideoSelected:(BOOL)selected;
-(void)onMultiTalkMainViewControllerClickedCollapseButton;
-(void)onMultiTalkMainViewControllerMicButtonSeclect:(BOOL)seclect;
-(void)onMultiTalkMainViewControllerSpeakerButtonSeclect:(BOOL)seclect;
-(void)onMultiTalkMainViewControllerCancelJoinWithGroup:(id)group;
-(void)onMultiTalkMainViewControllerReceiveTimeOutWithGroup:(id)group;
-(void)onMultiTalkMainViewControllerRejectWithGroup:(id)group;
-(void)onMultiTalkMainViewControllerAcceptWithGroup:(id)group;
-(void)onMultiTalkMainViewControllerHangupWithGroup:(id)group;
-(void)onMultiTalkMainViewControllerReceiveCancelCall:(id)call;
-(void)onMultiTalkMainViewControllerUpdateMessageWith:(id)with duration:(unsigned long)duration messageId:(unsigned)anId;
-(void)onMultitalkMinimizeWindowClicked;
-(void)onMultiTalkMainViewControllerExtendFromCollapseAnimationDidEnd;
-(void)onMultiTalkMainViewControllerCollapseAnimationWillStart;
-(void)onMultiTalkMainViewControllerExtendFromCollapseAnimationWillStart;
-(void)onMultiTalkMainViewControllerCollapseAnimationDidEnd;
-(void)clearMultiTalkStatus;
-(void)onMultiTalkMainViewControllerQuitAnimationDidEnd;
-(void)onMultiTalkMainViewControllerQuitAnimationWillStart;
-(CGRect)onMultiTalkMainViewControllerRequestMinimizeFrame;
-(const char*)notifyDataString;
-(id)subTypeString;
-(void)OnGetNewXmlMsg:(id)msg Type:(id)type MsgWrap:(id)wrap;
-(void)onRespBuffer:(id)buffer functionId:(unsigned)anId seq:(unsigned)seq retCode:(int)code;
-(void)onMultiTalkRedirectOk;
-(void)onVideoData:(unsigned long)data Bgra:(char*)bgra Width:(unsigned long)width Height:(unsigned long)height frontCamera:(BOOL)camera;
-(void)OnVideoStateChange:(BOOL)change VideoOn:(BOOL)on;
-(void)onMultiTalkAudioDeviceUnPlugin;
-(void)onMultiTalkAudioDevicePlugin;
-(void)onReceiveVideoMemberChangeMsg:(id)msg extArray:(id)array;
-(void)onReceiveReawakeOrPokerMsg:(id)msg extData:(id)data;
-(void)onReawakeFriendOrSendPokerToFriendResult:(BOOL)friendResult;
-(void)onRespActiveGroupBriefInfoList:(id)list isSuccess:(BOOL)success;
-(void)onMultiTalkDeviceLauchSuccess;
-(void)onReceiveMutilTalkPokerMsg;
-(void)OnSysCallNotifyInterrupt:(int)interrupt;
-(void)onAddMultiTalkMemberResult:(BOOL)result groupInfo:(id)info;
-(void)onErr:(int)err;
-(void)onSpeakerStateChange:(BOOL)change;
-(void)onMuteStateChange:(BOOL)change;
-(void)onMultiTalkReady;
-(void)onMemberChange:(id)change;
-(void)onReceiveMissMultiTalk:(id)talk;
-(void)onEnterMultiTalk:(id)talk;
-(void)onCreateMultiTalk:(id)talk;
-(void)onCancelCreateMultiTalk:(id)talk;
-(void)onInviteMultiTalk:(id)talk;
-(int)inviteUserType:(id)type;
-(void)stopRingSound;
-(void)playRingSoundWithVibration:(BOOL)vibration;
-(void)rejectCall:(id)call;
-(void)sendMultiTalkRequset:(int)requset reqData:(id)data cgiType:(int)type;
-(void)writeLog:(int)log tag:(id)tag content:(id)content;
-(void)onPreQuit;
-(void)onAuthOK;
-(void)createMultiTalkWithContacts:(id)contacts withChatroomUsername:(id)chatroomUsername;
-(void)enterMultiTalkWithGroup:(id)group;
-(void)alertHangup;
-(id)getTalkIngMember:(id)member;
-(id)getRenderForUsername:(id)username;
-(id)getRenderForMemberId:(unsigned)memberId;
-(BOOL)isPhoneCalling;
-(BOOL)isMultiTalkActive;
-(BOOL)canStartANewCall;
-(void)startCgiWithFunctionId:(unsigned)functionId buffer:(id)buffer seq:(unsigned)seq;
-(void)uploadFpsCountCheck;
-(void)stopVideoDevice;
-(void)startVideoDevice;
-(void)resetVideoDevice;
-(void)clearVideoDevice;
-(void)onServiceInit;
-(void)dealloc;
-(id)init;
@end

