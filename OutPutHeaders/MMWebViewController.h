/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "UIScrollViewDelegate.h"
#import "IUiUtilExt.h"
#import "UIAlertViewDelegate.h"
#import "MMExposeViewControllerDelegate.h"
#import "WeChat-Structs.h"
#import "WCActionSheetDelegate.h"
#import "IJSSpeedyMgrExt.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIWebViewDelegate.h"
#import "MMScrollActionSheetDelegate.h"
#import "EnterpriseBrandContactSelectViewControllerDelegate.h"
#import "WebViewURLCheckLogicDelegate.h"
#import "MMWebViewFontFloatViewDelegate.h"
#import "MMIconActionSheetDelegate.h"
#import "WebViewA8KeyLogicDelegate.h"
#import "WebViewJSLogicDelegate.h"
#import "MMUIViewController.h"
#import "MMJSApiVerifyMgrDelegate.h"
#import "WCForceTouchPopProtocol.h"

@class NSMutableArray, JSConsoleViewController, WebViewMenuCustomizeLogic, MMWebViewPluginScheduler, MMWebViewController_SwipeGestureGoBackHistory, NSString, WebViewA8KeyLogicImpl, MMAnimationTipView, UIImageView, WCDeepLinkHandler, MMJSApiVerifyMgr, NSURLConnection, WebViewJSLogicImpl, MMScrollActionSheet, UIViewController, UIView, UIWebView, WebViewURLCheckLogic, NSCache, UIActivityIndicatorView, NSMutableSet, MMWebProgressBar, UILabel, UIButton, CContact, NSMutableDictionary, WXGesture, UILongPressGestureRecognizer, BrandActionReportLogicController, MMURLHandler;
@protocol MMWebViewDelegate;

@interface MMWebViewController : MMUIViewController <MMScrollActionSheetDelegate, EnterpriseBrandContactSelectViewControllerDelegate, MMExposeViewControllerDelegate, WCForceTouchPopProtocol, UIGestureRecognizerDelegate, WebViewURLCheckLogicDelegate, IUiUtilExt, WCActionSheetDelegate, UIWebViewDelegate, UIAlertViewDelegate, MMWebViewFontFloatViewDelegate, MMIconActionSheetDelegate, WebViewA8KeyLogicDelegate, WebViewJSLogicDelegate, UIScrollViewDelegate, IJSSpeedyMgrExt, MMJSApiVerifyMgrDelegate> {
	UIWebView* webView;
	UILabel* m_deeplinkRedirecting;
	UIImageView* m_addressBarView;
	UILabel* m_addressLabel;
	UIButton* m_addressBarBtn;
	UIActivityIndicatorView* m_activityView;
	MMURLHandler* m_urlHandler;
	WXGesture* m_gesture;
	NSString* m_initUrl;
	WebViewA8KeyLogicImpl* m_a8KeyLogicImpl;
	JSConsoleViewController* m_consoleViewController;
	WebViewJSLogicImpl* m_jsLogicImpl;
	WebViewURLCheckLogic* m_urlCheckLogic;
	unsigned long m_uiBackCount;
	BOOL m_isPageDidLoaded;
	UIButton* m_loadFailView;
	NSMutableArray* m_actionSheetRow1;
	NSMutableArray* m_actionSheetRow2;
	MMScrollActionSheet* m_scrollActionSheet;
	WebViewMenuCustomizeLogic* m_menuCustomizeLogic;
	NSMutableDictionary* m_jsInitInfo;
	WCDeepLinkHandler* m_deepLinkHandler;
	BOOL m_bDeepLink;
	BOOL m_isScrollMenuScroll;
	MMJSApiVerifyMgr* m_apiVerifyMgr;
	BOOL m_bNewYearShakeSpecialWebview;
	BOOL _bIsDisablePullDown;
	BOOL _bIsDisablePullUp;
	id _OnInitReadyNotifyBlock;
	BOOL _bIsHideShareMenuByJsApi;
	UILabel* m_previewTopBar;
	UIView* m_previewTopBarBg;
	BOOL m_isPreviewing;
	BOOL m_isFinishLoaded;
	UIView* _previewSourceView;
	UIViewController* _previewFromController;
	BOOL _bIsStatusBarBlack;
	BOOL _bUseColorfulNavBar;
	BOOL _bUseTransparentNaviBar;
	id<MMWebViewDelegate> m_delegate;
	BOOL m_bAutoSetTitle;
	NSMutableSet* m_jsTempAllowApiCalls;
	BOOL m_isDisableShareMenu;
	BOOL m_disalbeStartLoadGetA8Key;
	unsigned long m_addScence;
	UIView* m_customLoadingView;
	BOOL m_bShouldForcedRotationToPortrait;
	unsigned long m_stat_enterTime;
	int m_loadingCount;
	UILongPressGestureRecognizer* m_longPressGestureRecognizer;
	MMWebViewController_SwipeGestureGoBackHistory* swipeGoBackLogic;
	BOOL m_openAllPermission;
	BOOL m_isPageLoading;
	NSString* m_jump;
	BOOL m_viewDidAppear;
	double m_startLoadTime;
	NSString* m_oLoadingUrl;
	BOOL m_isPageLoadFail;
	BOOL m_bPresentModal;
	BOOL m_bLoadFromLocalServer;
	vector<STIDKeyInfo, std::__1::allocator<STIDKeyInfo> > _pIDKeyList;
	BOOL m_bHasAnimated;
	BOOL m_bOfflinePage;
	BOOL m_bIsRefreshOfflinePageAction;
	BOOL m_bIFrame;
	BrandActionReportLogicController* m_brandActionReport;
	NSString* _httpHeadReferer;
	BOOL _bIsDraggingScroll;
	float _fLastStartOffsetY;
	BOOL m_isLanscape;
	BOOL _m_canCache;
	BOOL _m_bUserHasClickLink;
	BOOL _m_bIsDelayPushWebView;
	NSMutableDictionary* m_extraInfo;
	NSCache* m_urlCheckResultCache;
	NSString* m_nsJSFitContent;
	float m_fTabBarHeight;
	MMWebViewPluginScheduler* _pluginScheduler;
	CContact* _brandContact;
	MMWebProgressBar* _m_progressBar;
	UIView* _m_navBarView;
	int _m_webviewType;
	MMAnimationTipView* _m_animationTipView;
	NSURLConnection* _m_connection;
	NSString* _m_lastCheckCpKey;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) NSCache* m_urlCheckResultCache;
@property(retain, nonatomic) NSString* m_lastCheckCpKey;
@property(retain, nonatomic) NSURLConnection* m_connection;
@property(retain, nonatomic) UIView* m_customLoadingView;
@property(retain, nonatomic) MMAnimationTipView* m_animationTipView;
@property(retain, nonatomic) NSMutableDictionary* m_extraInfo;
@property(assign, nonatomic) float m_fTabBarHeight;
@property(assign, nonatomic) int m_webviewType;
@property(assign, nonatomic) BOOL m_isLanscape;
@property(assign, nonatomic) BOOL m_bIsDelayPushWebView;
@property(assign, nonatomic) BOOL m_bIsHideShareMenuByJsApi;
@property(readonly, assign, nonatomic) BOOL m_isPreviewing;
@property(retain, nonatomic) UIImageView* m_addressBarView;
@property(retain, nonatomic) UILabel* m_addressLabel;
@property(retain, nonatomic) UIView* m_navBarView;
@property(retain, nonatomic) MMWebProgressBar* m_progressBar;
@property(assign, nonatomic) BOOL m_bUserHasClickLink;
@property(retain, nonatomic) CContact* brandContact;
@property(retain, nonatomic) NSString* m_nsJSFitContent;
@property(assign, nonatomic) BOOL m_bDeepLink;
@property(readonly, assign, nonatomic) NSString* m_initUrl;
@property(assign, nonatomic) BOOL m_canCache;
@property(readonly, assign, nonatomic) WebViewA8KeyLogicImpl* m_a8KeyLogicImpl;
@property(readonly, assign, nonatomic) WebViewJSLogicImpl* m_jsLogicImpl;
@property(assign, nonatomic) __weak id<MMWebViewDelegate> m_delegate;
@property(retain, nonatomic) MMWebViewPluginScheduler* pluginScheduler;
@property(assign, nonatomic) BOOL m_bUseTransparentNaviBar;
@property(assign, nonatomic) BOOL m_bUseColorfulNavBar;
@property(assign, nonatomic) BOOL m_bIsStatusBarBlack;
@property(retain, nonatomic) UIWebView* webView;
@property(assign, nonatomic) __weak UIView* previewSourceView;
@property(assign, nonatomic) __weak UIViewController* previewFromController;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)setDelayLoadActionBlock:(id)block;
-(void)changeBarButtonShowStyleForNewYear:(id)newYear;
-(void)drawNewYearNavigationBar;
-(id)getNewYearTitleView:(id)view;
-(void)setNewYearTitle:(id)title;
-(BOOL)isAllowNewYearOuterOpenUrl;
-(void)restoreToDefaultNavBar;
-(void)setNavBarBgColor:(id)color;
-(id)getWebviewBannerTitle;
-(id)getLeftBarButton;
-(void)setFullScreenNavAlpha:(id)alpha;
-(void)enableFullScreen;
-(void)onClickFailView:(id)view;
-(void)hideLoadFailView;
-(void)relayoutLoadFailView;
-(void)showLoadFailView:(unsigned long)view;
-(void)onPreverifyFinished;
-(id)getJSFunctionDef:(id)def;
-(void)onWebViewRequestFinished;
-(BOOL)isGetingA8Key;
-(void)onFinishedHandleJSApi;
-(id)getCurrentWebviewViewController;
-(BOOL)canAccessJSApi:(id)api;
-(id)getAuthorizedMonitorEvents:(id)events;
-(void)tryStartOutlinkDetect;
-(unsigned char)getJSApiPermission:(id)permission;
-(BOOL)isShowMenuItem:(id)item;
-(unsigned char)getPermissionWithName:(id)name;
-(void)processJSAPICall:(id)call funcDef:(id)def funcBlock:(id)block failHandleBlock:(id)block4 apiPermission:(unsigned char)permission;
-(void)url:(id)url DidCheckReturnContentAttribute:(unsigned long);
-(void)onJumpToEmoticonDetailViewController:(id)emoticonDetailViewController;
-(void)onJumpToViewController:(id)viewController;
-(void)onJumpToSafariWithUrl:(id)url;
-(void)onUpdatedPermisson;
-(void)onGetA8Key:(BOOL)key Reason:(int)reason;
-(void)saveJSAPIPermissionsInOfflineCache:(id)offlineCache url:(id)url;
-(void)saveJSAPIPermissions:(id)permissions url:(id)url;
-(void)saveJSAPIAuthInfo:(id)info;
-(void)sendGetA8KeyUrlEvent;
-(void)kvReportJSCall:(id)call withParam:(id)param;
-(id)sendEventToJSBridge:(id)jsbridge Param:(id)param;
-(void)doJsApiInitEvent;
-(void)showWXPayTip;
-(void)updateRightBarButtonWithURL:(id)url;
-(void)setCurrentUrl:(id)url;
-(unsigned long)getCurrentScene;
-(BOOL)isContentOriginal;
-(BOOL)isCanShowAllMenus;
-(BOOL)isPageDidLoad;
-(id)getCurrentUrl;
-(void)stopForcedRotationToPortrait;
-(void)startForcedRotationToPortrait;
-(void)keyboardDidShow:(id)keyboard;
-(void)removeNotificationObservers;
-(void)initNotificationObservers;
-(id)webviewController;
-(void)permitTempAccessOfJSApi:(id)jsapi;
-(BOOL)isTempAccessOfJSApiPermitted:(id)jsapiPermitted;
-(BOOL)isAccessPermitttedByPermissionBitSet:(id)set;
-(void)onPageNotifyFinishedLoading:(id)loading;
-(void)onDomReady:(id)ready;
-(BOOL)shareToFB;
-(void)immediateDismissWebViewController;
-(void)dismissWebViewController;
-(void)setDisableWebAlertView:(BOOL)view;
-(BOOL)isMenuAction:(id)action;
-(id)getRequestingOrCurrentUrl;
-(void)onSelectFont:(unsigned long)font;
-(BOOL)shoudDelaySetFont;
-(void)dealloc;
-(void)OnClose;
-(void)backToAppIfNeed;
-(void)OnReturn;
-(void)cleanJSAPIDelegate;
-(BOOL)isSvrErrorTipForbidden;
-(void)willDisappear;
-(BOOL)useBlackStatusbar;
-(BOOL)useCustomNavibar;
-(BOOL)useTransparentNavibar;
-(void)viewDidLoad;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)willRotateToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)didRotateFromInterfaceOrientation:(int)interfaceOrientation;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
-(void)setCustomLoadingView:(id)view;
-(void)webView:(id)view didFailLoadWithError:(id)error;
-(void)removeCustomLoadingView;
-(void)delaySetFontsWithSize:(id)size;
-(void)webViewDidFinishLoad:(id)webView;
-(void)webViewDidStartLoad:(id)webView;
-(void)handleJumpProfileUrl:(id)url profileRange:(NSRange)range;
-(void)delayHandleUrl:(id)url;
-(BOOL)isPhoneNumberUrl:(id)url;
-(BOOL)webView:(id)view shouldStartLoadWithRequest:(id)request navigationType:(int)type;
-(void)markNeedCheckUrlAndRemoveLastCheckedUrl:(id)url;
-(void)delayPopForAppStore;
-(id)getUrlPermission:(id)permission;
-(BOOL)hasUrlPermission:(id)permission;
-(id)getLastUrl;
-(void)goToURL:(id)url;
-(void)goForward;
-(void)goBack;
-(void)stop;
-(void)cleanWebCacheFromReloadMenuAction;
-(void)reload;
-(void)initGestureRecognizer;
-(void)onInfoBarButtonClick:(id)click;
-(void)onSessionBarButtonClick:(id)click;
-(void)createBrandActionReport;
-(void)setShareBarItem:(id)item;
-(unsigned long)GetGeneralBitSetForUrl:(id)url;
-(BOOL)IsBitsetSet:(unsigned long)set forUrl:(id)url;
-(BOOL)allowScanQRCodeByImage;
-(unsigned long)GetPermissionBitSet3;
-(unsigned long)GetPermissionBitSet2;
-(unsigned long)GetPermissionBitSet;
-(unsigned long long)GetDeepLinkBitSet;
-(void)done:(id)done;
-(void)adjustSubviewRects;
-(void)willDismissAndShow;
-(void)viewWillBeDismissed:(BOOL)view;
-(void)viewDidBePoped:(BOOL)view;
-(void)viewWillBePoped:(BOOL)view;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)didAppear;
-(void)willAppear;
-(void)viewDidAppear:(BOOL)view;
-(void)notifyToJSBridgeVisibilityChanged:(BOOL)jsbridgeVisibilityChanged;
-(void)loadHTMLString:(id)string baseURL:(id)url;
-(id)extraInfo;
-(void)doDNS;
-(void)StartLoadWeb;
-(void)setExtraInfoValue:(id)value forKey:(id)key;
-(void)setIsHideShareMenuByJsApi:(BOOL)api;
-(void)setDisableShareMenu:(BOOL)menu;
-(void)setAddFriendScene:(unsigned long)scene;
-(void)setAutoSetTitle:(BOOL)title;
-(void)setWebviewType:(int)type;
-(id)getOperationButtonImageNameWithURL:(id)url;
-(void)onLongPressOnWebview:(id)webview;
-(void)enableLongPressDetect;
-(BOOL)gestureRecognizer:(id)recognizer shouldRequireFailureOfGestureRecognizer:(id)gestureRecognizer;
-(BOOL)gestureRecognizer:(id)recognizer shouldBeRequiredToFailByGestureRecognizer:(id)failByGestureRecognizer;
-(BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;
-(BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(void)shouldShowGoBackBtn;
-(id)initWithURL:(id)url presentModal:(BOOL)modal extraInfo:(id)info;
-(id)initWithURL:(id)url presentModal:(BOOL)modal extraInfo:(id)info referer:(id)referer;
-(id)initWithNewyearShakeUrl:(id)newyearShakeUrl presentModal:(BOOL)modal extraInfo:(id)info;
-(void)internalInitWithUrl:(id)url presentModal:(BOOL)modal extraInfo:(id)info;
-(void)scrollViewDidEndScrollingAnimation:(id)scrollView;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)scrollViewWillBeginDecelerating:(id)scrollView;
-(void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)resetWebviewInsetOrY;
-(void)restoreAddressBar;
-(void)initAddressBarView;
-(void)initDeeplinkRedirectingView;
-(void)initDeepLinkConfig;
-(id)getVCWithDeepLinkName:(id)deepLinkName;
-(id)getAddressBarHostText:(id)text;
-(void)initNavigationBarItem;
-(void)initProgressView;
-(id)getInitUrl;
-(id)getShareUrl;
-(void)setPayTitle:(id)title;
-(id)getCurrentAppId;
-(void)setPublisher:(id)publisher;
-(void)setTitle:(id)title;
-(void)setRightBarButtonItemEnabled:(BOOL)enabled;
-(void)accessDeepLink:(id)link Url:(id)url;
-(void)jumpDeepLink:(id)link;
-(BOOL)canAccessDeepLink:(id)link Url:(id)url;
-(void)hideAllNonBaseMenuItem;
-(void)showAllNonBaseMenuItem;
-(void)showMenuitemBatch:(id)batch;
-(void)hideMenuitemBatch:(id)batch;
-(void)modifyPermissionValue:(id)value permissionValue:(unsigned char)value2;
-(void)startupPreVerifyJSAPI:(id)jsapi failHandleBlock:(id)block;
-(void)doCleanCookiesForUrl:(id)url;
-(void)cleanCookiesIfNeed;
-(void)stopPullDownRefreshAnimation;
-(void)startPullDownRefreshAnimation;
-(void)disablePullDownRefreshMode;
-(void)setEnablePullDownRefreshMode;
-(void)setCustomBackgroundColorFromHtmlBgColor;
-(void)setDisableWebViewScrollViewPullUp;
-(void)setDisableWebViewScrollViewPullDown;
-(void)setDisableWebViewScrollViewBounces;
-(id)colorWithHtmlRGBAString:(id)htmlRGBAString;
-(void)showJSLog:(id)log;
-(void)promptForAuthInfo:(id)authInfo;
-(void)checkApiAuthorization:(id)authorization;
-(void)reportIDKeyForLoadFinish:(long long)loadFinish;
-(void)reportIDKeyForSystemError:(int)systemError;
-(void)reportIDKeyForAllRequest;
-(void)logFeature11576WithOpType:(unsigned long)opType;
-(void)onExposeComplete;
-(void)sendAppMsgToBrandContact:(id)brandContact;
-(void)onEnterpriseSelectBrandContact:(id)contact viewController:(id)controller;
-(void)onWebViewEditTag;
-(void)onWebViewDelete;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
-(void)scrollActionSheetWillDismiss:(id)scrollActionSheet;
-(void)scrollActionSheetDidScroll:(id)scrollActionSheet;
-(void)logFeature11577WithOpType:(unsigned)opType;
-(void)scrollActionSheet:(id)sheet didSelecteItem:(id)item;
-(void)setupRow1;
-(void)setupRow2;
-(void)setupIconActionSheetCells;
-(void)setupPreShowIconActionSheet;
-(void)AddMemuData:(id)data toRow:(id)row;
-(void)setupCustomMenuForJD;
-(void)addJSCustomMenuData:(id)data;
-(void)showCustomActionSheet:(id)sheet;
-(void)onOperate:(id)operate;
-(void)addViewBrandContactButtonWithArrary:(id)arrary;
-(void)addReturnBackToNewMainFrameButtonWithArrary:(id)arrary;
-(void)addQQBrowserButtonWithArrary:(id)arrary;
-(void)addShareToQZoneButtonWithArray:(id)array;
-(void)addShareToQQButtonWithArray:(id)array;
-(void)addExposeButtonWithArray:(id)array;
-(void)addAdjustFontButtonWithArray:(id)array;
-(void)addFavouriteButtonWithArray:(id)array;
-(void)addCopyToPasteboardButtonWithArray:(id)array;
-(void)addOpenInSafariButtonWithArray:(id)array;
-(void)addRefreshButtonWithArray:(id)array;
-(void)addSupportBrandToMenuAtEndOf:(id)of;
-(id)AddNewActionSheetCell2Array:(id)array WithText:(id)text WithImage:(id)image;
-(void)readMode;
-(void)hideChangeFont;
-(void)exposeArticle;
-(void)showChangeFont:(unsigned long)font;
-(void)copyToPasteBoard;
-(void)openWithQQBrowser;
-(void)openWithSafari;
-(void)jumpToInstallUrl:(id)installUrl;
-(BOOL)shareWithAppMessage:(id)appMessage;
-(BOOL)shareWithEmail;
-(BOOL)shareToQZone;
-(BOOL)shareToWeibo;
-(BOOL)shareToQQ;
-(BOOL)shareToFaceBook;
-(BOOL)shareToTimeline;
-(void)setFontWithSize:(int)size;
-(void)internalShowJSLog:(id)log;
-(void)log3DTouchWebViewActionFeatureWithOpType:(id)opType;
-(id)previewActionItems;
-(id)initForPreviewWithURL:(id)url presentModal:(BOOL)modal extraInfo:(id)info;
-(void)commitViewController;
-(BOOL)canPop;
@end

