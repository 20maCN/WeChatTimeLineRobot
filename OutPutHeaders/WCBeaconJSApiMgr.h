/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MMService.h"
#import "CLLocationManagerDelegate.h"
#import "MMService.h"
#import "PBMessageObserverDelegate.h"
#import "CBCentralManagerDelegate.h"

@class NSMutableArray, NSString, CLLocationManager, NSMutableDictionary, CBCentralManager, MMWebViewController;

@interface WCBeaconJSApiMgr : MMService <MMService, PBMessageObserverDelegate, CBCentralManagerDelegate, CLLocationManagerDelegate> {
	MMWebViewController* m_currentWebViewController;
	NSString* m_ticket;
	CBCentralManager* m_bleMgr;
	CLLocationManager* m_locationMgr;
	NSMutableArray* m_aryUUID;
	NSMutableDictionary* m_canRegionDic;
	NSMutableArray* m_hadGetBeacons;
	NSMutableArray* m_getBeaconsInfoWatingQueue;
	NSMutableArray* m_getBeaconsInfoRunningQueue;
	unsigned m_verifyReqResult;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
-(void).cxx_destruct;
-(void)locationManager:(id)manager didRangeBeacons:(id)beacons inRegion:(id)region;
-(void)locationManager:(id)manager rangingBeaconsDidFailForRegion:(id)rangingBeacons withError:(id)error;
-(void)centralManagerDidUpdateState:(id)centralManager;
-(void)MessageReturn:(id)aReturn Event:(unsigned long)event;
-(void)reportUsageForRange;
-(void)handleVerifyBeaconJSPermissionResponse:(id)response;
-(void)sendVerifyBeaconJSPermissionRequest;
-(void)handleGetBeaconsInGroupResponse:(id)groupResponse;
-(void)checkGetBeaconsInfoWaitingQueue;
-(void)addGetBeaconsInfoQueue:(id)queue;
-(BOOL)hadRequested:(id)requested;
-(void)notifyInRangeBeacons:(id)rangeBeacons;
-(id)getRangeMajorKeyWithGroup:(id)group;
-(id)getRangeMajorKeyWithBeacon:(id)beacon;
-(void)notifyStartMonitoringFailByRangeFailedWithErrorMsg:(id)errorMsg;
-(void)notifyStartMonitoringFailByBLEPowerOffWithErrorMsg:(id)errorMsg;
-(void)notifyStartMonitoringFailWithErrorMsg:(id)errorMsg;
-(void)detectBluetoothState;
-(void)startRanging:(id)ranging;
-(void)finishCauseOf:(unsigned)of;
-(void)stopMonitoring;
-(unsigned)startMonitorBeacon:(id)beacon ticket:(id)ticket;
-(void)dealloc;
@end

