/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "IRecordPermissionCheckExt.h"
#import "WeChat-Structs.h"
#import "UIViewControllerTransitioningDelegate.h"
#import "MMUIViewController.h"
#import "MultiTalkMgrExt.h"
#import "MMNewMultiSelectContactsViewControllerDelegate.h"
#import "MultiTalkContactsCollectionViewDelegate.h"
#import "MultiTalkBeforeTalkingOperateViewDelegate.h"
#import "MultiTalkTalkingOperateViewDelegate.h"
#import "MultiTalkTalkingOperateViewLayoutDelegate.h"
#import "MultitalkSecondOperateViewDelegate.h"
#import "MultiTalkMainWindowDelegate.h"

@class NSDictionary, WXCGroupMember, WXCMultiTalkGroup, UIImageView, MultitalkSecondOperateView, WCUIAlertView, MMTimer, MultiTalkBeforeTalkingOperateView, NSArray, CContact, MultiTalkTalkingOperateView, MultiTalkContactsCollectionView, NSString;
@protocol MultiTalkMainViewControllerDelegate;

@interface MultiTalkMainViewController : MMUIViewController <MultiTalkMgrExt, MMNewMultiSelectContactsViewControllerDelegate, MultiTalkContactsCollectionViewDelegate, UIViewControllerTransitioningDelegate, MultiTalkBeforeTalkingOperateViewDelegate, MultiTalkTalkingOperateViewDelegate, MultiTalkTalkingOperateViewLayoutDelegate, MultitalkSecondOperateViewDelegate, IRecordPermissionCheckExt, MultiTalkMainWindowDelegate> {
	BOOL _m_isCaller;
	BOOL _m_hasClickAcceptButton;
	BOOL _m_hasClickHangupButton;
	BOOL _m_hasStartTimerView;
	BOOL _m_talkReady;
	BOOL _m_deviceLaunchSuccess;
	BOOL _m_hasBlurBackground;
	BOOL _m_isMinimizeMode;
	BOOL _m_hasCreateOk;
	BOOL _m_connect_onePersonLeft;
	BOOL _m_connect_timeOut;
	BOOL _m_connect_netWorkError;
	BOOL _m_connect_hangup;
	BOOL _m_connect_beCanceled;
	BOOL _m_connect_interruptByCall;
	id<MultiTalkMainViewControllerDelegate> _m_mainWindowDelegate;
	MultiTalkContactsCollectionView* _m_contactView;
	MultiTalkBeforeTalkingOperateView* _m_beforeTalkingView;
	MultiTalkTalkingOperateView* _m_talkingView;
	MultitalkSecondOperateView* _m_secondTalkingView;
	UIImageView* _m_backgroundView;
	int _m_layoutType;
	MMTimer* _m_checkTalkingTimer;
	MMTimer* _m_updateMessageTimer;
	WXCMultiTalkGroup* _m_group;
	CContact* _m_contactInviteMe;
	unsigned _m_messageId;
	NSDictionary* _m_videoMemberInfo;
	NSArray* _m_memberTalkArray;
	NSDictionary* _m_memberTalkingDic;
	NSArray* _m_memberWaitList;
	NSArray* _m_memberDisplayBigHeadList;
	NSArray* _m_contactWaitList;
	NSArray* _m_contactArrayOther;
	MMTimer* _m_timeOutTimer;
	MMTimer* _m_onePersonCheckFroMinimizeTimer;
	WXCGroupMember* _m_selfMember;
	int _m_networkStatus;
	WCUIAlertView* _currentAlertView;
	unsigned _m_audio_duration;
	unsigned _m_video_start_time;
	unsigned _m_minimizeClickCount;
	unsigned _m_muteClickCount;
	unsigned _m_speakerClickCount;
	unsigned _m_videoClickCount;
	unsigned _m_addMemberClickCount;
	unsigned long long _m_connect_startTime;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) unsigned m_addMemberClickCount;
@property(assign, nonatomic) unsigned m_videoClickCount;
@property(assign, nonatomic) unsigned m_speakerClickCount;
@property(assign, nonatomic) unsigned m_muteClickCount;
@property(assign, nonatomic) unsigned m_minimizeClickCount;
@property(assign, nonatomic) unsigned m_video_start_time;
@property(assign, nonatomic) unsigned m_audio_duration;
@property(assign, nonatomic) unsigned long long m_connect_startTime;
@property(assign, nonatomic) BOOL m_connect_interruptByCall;
@property(assign, nonatomic) BOOL m_connect_beCanceled;
@property(assign, nonatomic) BOOL m_connect_hangup;
@property(assign, nonatomic) BOOL m_connect_netWorkError;
@property(assign, nonatomic) BOOL m_connect_timeOut;
@property(assign, nonatomic) BOOL m_connect_onePersonLeft;
@property(assign, nonatomic) BOOL m_hasCreateOk;
@property(assign, nonatomic) __weak WCUIAlertView* currentAlertView;
@property(assign, nonatomic) int m_networkStatus;
@property(retain, nonatomic) WXCGroupMember* m_selfMember;
@property(retain, nonatomic) MMTimer* m_onePersonCheckFroMinimizeTimer;
@property(retain, nonatomic) MMTimer* m_timeOutTimer;
@property(retain, nonatomic) NSArray* m_contactArrayOther;
@property(retain, nonatomic) NSArray* m_contactWaitList;
@property(retain, nonatomic) NSArray* m_memberDisplayBigHeadList;
@property(retain, nonatomic) NSArray* m_memberWaitList;
@property(retain, nonatomic) NSDictionary* m_memberTalkingDic;
@property(retain, nonatomic) NSArray* m_memberTalkArray;
@property(retain, nonatomic) NSDictionary* m_videoMemberInfo;
@property(assign, nonatomic) unsigned m_messageId;
@property(retain, nonatomic) CContact* m_contactInviteMe;
@property(retain, nonatomic) WXCMultiTalkGroup* m_group;
@property(retain, nonatomic) MMTimer* m_updateMessageTimer;
@property(retain, nonatomic) MMTimer* m_checkTalkingTimer;
@property(assign, nonatomic) BOOL m_isMinimizeMode;
@property(assign, nonatomic) BOOL m_hasBlurBackground;
@property(assign, nonatomic) BOOL m_deviceLaunchSuccess;
@property(assign, nonatomic) BOOL m_talkReady;
@property(assign, nonatomic) BOOL m_hasStartTimerView;
@property(assign, nonatomic) BOOL m_hasClickHangupButton;
@property(assign, nonatomic) BOOL m_hasClickAcceptButton;
@property(assign, nonatomic) int m_layoutType;
@property(retain, nonatomic) UIImageView* m_backgroundView;
@property(retain, nonatomic) MultitalkSecondOperateView* m_secondTalkingView;
@property(retain, nonatomic) MultiTalkTalkingOperateView* m_talkingView;
@property(retain, nonatomic) MultiTalkBeforeTalkingOperateView* m_beforeTalkingView;
@property(retain, nonatomic) MultiTalkContactsCollectionView* m_contactView;
@property(assign, nonatomic) __weak id<MultiTalkMainViewControllerDelegate> m_mainWindowDelegate;
@property(assign, nonatomic) BOOL m_isCaller;
-(void).cxx_destruct;
-(void)adjustViewAndNavBarRect;
-(void)OnRecordDenied;
-(void)OnRecordPermissioned;
-(CGRect)onMultiTalkMainWindowRequestMinimizeFrame;
-(void)onMultiTalkMainWindowExtendFromCollapseAnimationDidEnd;
-(void)onMultiTalkMainWindowCollapseAnimationWillStart;
-(void)onMultiTalkMainWindowCollapseAnimationDidEnd;
-(void)onMultiTalkMainWindowExtendFromCollapseAnimationWillStart;
-(void)onMultiTalkMainWindowQuitAnimationDidEnd;
-(void)onMultiTalkMainWindowQuitAnimationWillStart;
-(void)onMultiTalkMainWindowExtendAnimationDidEnd;
-(void)clearBlurMode;
-(void)showBlurMode;
-(void)onMultitalkSecondOperateViewMinimizeButtonClick;
-(void)onMultitalkSecondOperateViewAddMember;
-(float)onRetriveMemberCellBottom;
-(void)onMultiTalkTalkingOperateViewHangup;
-(void)onMultiTalkTalkingOperateViewSpeakerOff;
-(void)onMultiTalkTalkingOperateViewSpeakerOn;
-(void)onMultiTalkTalkingOperateViewMuteOff;
-(void)onMultiTalkTalkingOperateViewMuteOn;
-(void)onMultiTalkTalkingOperateViewVideoClose;
-(void)onMultiTalkTalkingOperateViewVideoOpen;
-(void)onMultiTalkTalkingOperateViewMinimizeButtonClick;
-(void)onMultiTalkTalkingOperateViewAddMember;
-(void)onMultiTalkContactsCollectionViewTapToPreviewWithUserName:(id)userName;
-(void)onMultiTalkContactsCollectionViewTapToFlipCamera;
-(id)onMultiTalkBeforeTalkingOperateViewContactThatInviteMe;
-(void)onMultiTalkBeforeTalkingOperateViewEnterCall;
-(void)onMultiTalkBeforeTalkingOperateViewHanup;
-(void)callAcceptDelegate;
-(void)callHangupDelegate;
-(void)realCallHangupDelegate;
-(id)onMultiTalkContactsCollectionViewMemberThatInviteMeBeforeTalking;
-(unsigned)onMultiTalkContactsCollectionViewMemberCountBeforeTalking;
-(id)onMultiTalkContactsCollectionViewMemberBeforeTalkingAtIndex:(unsigned)index;
-(void)onMultiTalkContactsCollectionViewAnimateToOnePerson;
-(id)onMultiTalkContactsCollectionViewMemberAtIndex:(unsigned)index;
-(unsigned)onMultiTalkContactsCollectionViewTotalMemberCount;
-(id)onMultiTalkContactsCollectionViewRequestRenderForUsername:(id)username;
-(BOOL)onMultiTalkContactsCollectionViewIsVideoUserName:(id)name;
-(void)onMultiTalkContactsCollectionViewTapToInviteUser:(id)inviteUser;
-(void)onMultiSelectContactsDidDismiss;
-(void)onMultiSelectContactsEndWithReportSelectedCount:(unsigned)reportSelectedCount hasReachLimit:(BOOL)limit clickCount:(unsigned)count;
-(void)onSingleSelectContactDidFinishSelect:(id)onSingleSelectContact;
-(void)onMultiSelectContactsDidFinishSelect:(id)onMultiSelectContacts;
-(void)onMultiTalkSysInterruptEnd;
-(void)onMultiTalkSysInterrupt;
-(void)onMultiTalkMgrBeginToCleanStatus;
-(void)recoverVideoOn:(BOOL)on;
-(void)closeVideoSendAndRecv;
-(void)changeVideoModeBaseOnNetwork;
-(void)onMultiTalkRedirectOk;
-(void)onMultiTalkMgrChangeToLowNetwork;
-(void)onMultiTalkMgrChangeToHighWWan;
-(void)onMultiTalkMgrChangeToWiFi;
-(void)onMultiTalkMgrChangeToUnReachable;
-(void)onMultiTalkMgrNetworkChange;
-(void)delayCheckUnReachable;
-(void)onMultiTalkMgrLowformanceDevice;
-(void)onMultiTalkMgrVideoDeviceAuthFailed;
-(void)onMultiTalkMgrChangeVideoFailed;
-(void)onMultiTalkMgrVideoSessionStopComplete;
-(void)onMultiTalkMgrVideoSessionStartComplete;
-(void)onReceiveVideoMemberChangeMsg:(id)msg extDic:(id)dic;
-(void)OnVideoStateChange:(BOOL)change VideoOn:(BOOL)on;
-(void)onMultiTalkAudioDeviceUnPlugin;
-(void)onAddMultiTalkMemberResult:(BOOL)result groupInfo:(id)info;
-(void)onAlertError;
-(void)onErr:(int)err;
-(void)onSpeakerStateChange:(BOOL)change;
-(void)onMuteStateChange:(BOOL)change;
-(void)onMultiTalkDeviceLauchSuccess;
-(void)onMultiTalkReady;
-(void)tryStartTimerView;
-(void)onMemberChange:(id)change;
-(void)onReceiveMissMultiTalk:(id)talk;
-(void)onEnterMultiTalk:(id)talk;
-(void)onCancelCreateMultiTalk:(id)talk;
-(void)onCreateMultiTalk:(id)talk;
-(void)onInviteMultiTalk:(id)talk;
-(void)changeToTalkingLayout;
-(void)changeToJoinACallLayout;
-(void)changeToReceiveACallLayout;
-(BOOL)isIgnoreSpeakerButtonDevice;
-(BOOL)isUsingEarDevice;
-(void)onClickAddMemberButton;
-(void)initBeforeTalkingView;
-(void)initSecondTalkingView;
-(void)initTalkingView;
-(void)initContactView;
-(void)updateBackgroundViewBlur;
-(void)initBackgroundView;
-(void)checkTalkMember;
-(void)initCheckTalkingTimer;
-(void)updateMessageDuration;
-(void)initUpdateMessageTimer;
-(void)timeOutLogic;
-(void)initTimeOutTimer;
-(void)onePersonCheckForMinimize;
-(void)initOnePersonCheckForMinimizeTimer;
-(void)updateVideoMemberInfo;
-(void)updateMemberDisplayBigHeadList;
-(void)updateMemberWaitList;
-(void)updateContactWaitList;
-(void)updateContactOtherList;
-(void)updateMemberTalkingList;
-(void)checkIfOnePerson;
-(BOOL)isMemberReachLimit;
-(BOOL)isTheSameWithGroup:(id)group;
-(void)updateGroupInfo:(id)info;
-(void)updateMessageId:(unsigned)anId;
-(id)groupInfo;
-(void)viewDidLayoutSubviews;
-(void)viewDidAppear:(BOOL)view;
-(void)viewDidTransitionToNewSize;
-(void)didReceiveMemoryWarning;
-(void)viewWillDisappear:(BOOL)view;
-(BOOL)useTransparentNavibar;
-(void)viewDidLoad;
-(void)functionReport;
-(void)videoDurationReport;
-(void)durationReport;
-(void)connectReportFailed;
-(void)connectReportSuccess;
-(void)callReport;
-(void)whenGoingToResign;
-(void)dealloc;
-(id)init;
@end

