/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MMMusicLyricsRtnExt.h"
#import "MMMusicAlbumRtnExt.h"
#import "MMService.h"
#import "MMMusicPlayerExt.h"
#import "ISysCallCheckExt.h"
#import "MMMusicListExt.h"
#import "MMService.h"

@class NSMutableArray, MMMusicLyricResolver, NSString, MMMusicInfo, MMMusicListMgr, NSDate, MusicLogInfo;

@interface MMMusicPlayerMgr : MMService <MMService, MMMusicPlayerExt, MMMusicLyricsRtnExt, MMMusicAlbumRtnExt, MMMusicListExt, ISysCallCheckExt> {
	NSMutableArray* m_arrMusicItems;
	MMMusicInfo* m_prevMusicInfo;
	MMMusicInfo* m_curMusicInfo;
	MMMusicInfo* m_nextMusicInfo;
	int m_playMode;
	int m_playState;
	int m_playDirection;
	MMMusicListMgr* m_musicListMgr;
	MMMusicLyricResolver* m_musicLyricResolver;
	unsigned long m_uiCurMusicIndex;
	float m_musicOffset;
	NSDate* m_musicStartTime;
	BOOL m_bforceStop;
	MusicLogInfo* m_musicLogInfo;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) MusicLogInfo* m_musicLogInfo;
@property(retain, nonatomic) MMMusicListMgr* m_musicListMgr;
@property(retain, nonatomic) NSDate* m_musicStartTime;
@property(retain, nonatomic) MMMusicInfo* m_nextMusicInfo;
@property(retain, nonatomic) MMMusicInfo* m_prevMusicInfo;
@property(retain, nonatomic) MMMusicInfo* m_curMusicInfo;
-(void).cxx_destruct;
-(void)EndInterruption;
-(void)setMusicPlayDirection:(int)direction;
-(id)getMusicInfoByMusicKey:(id)key;
-(BOOL)isMusicItemsContainsMusicKey:(id)key;
-(id)getCurTimeList;
-(void)onPlayPreviousMusic;
-(void)onPlayNextMusic;
-(id)getCurLyricsList;
-(void)onMusicListArrayChange;
-(void)OnGetSongAlbumUrl:(id)url AlbumUrl:(id)url2;
-(void)OnGetLyrics:(id)lyrics Lyrics:(id)lyrics2;
-(void)onForceStopMusic;
-(void)onLevelMeterPeak:(float)peak;
-(void)onMusicPlayStatusChanged;
-(id)getNextMusicInfo;
-(id)getPreviousMusicInfo;
-(unsigned)indexOfMusic:(id)music;
-(BOOL)isLyricValid;
-(void)updateMPNowPlayingInfo;
-(void)playWithMusicInfo:(id)musicInfo;
-(BOOL)isValidLowBandUrl:(id)url;
-(id)getMusicUrlWithMusicInfo:(id)musicInfo;
-(id)getArrMusicItems;
-(float)getMusicOffsetWhenPaused;
-(float)getMusicOffsetWithoutConsiderPlayState;
-(float)getMusicOffset;
-(int)getMusicPlayState;
-(id)getMusicTitle;
-(id)getCurMusicInfo;
-(BOOL)stopWithMusicKey:(id)musicKey;
-(void)updateMusicLogInfo;
-(void)logMusicStat;
-(void)stopPlay;
-(void)pausePlay;
-(void)playNextMusic;
-(void)playPreviousMusic;
-(void)playWithMusicKey:(id)musicKey;
-(void)setMusicItemList:(id)list;
-(void)setAndPlayMusicItem:(id)item;
-(void)updateMusicListBySource:(int)source;
-(int)getMusicListSource;
-(void)setPlayMode:(int)mode;
-(int)getMusicPlayMode;
-(void)dealloc;
-(void)updateArrMusicItems;
-(id)init;
@end

