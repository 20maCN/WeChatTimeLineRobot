/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WCAudioSessionExt.h"
#import "MMService.h"
#import "MMMusicPlayerNotifyExt.h"
#import "IRemoteControlMusicPlayerExt.h"
#import "MMAudioDataWriteStreamDelegate.h"
#import "MMService.h"
#import "NSURLConnectionDelegate.h"

@class MMAudioStreamPlayer, MMTimer, MMAudioDataPipe, NSURLConnection, NSString, MMMusicInfo, NSObject;

@interface MMMusicPlayer : MMService <MMMusicPlayerNotifyExt, WCAudioSessionExt, IRemoteControlMusicPlayerExt, MMService, NSURLConnectionDelegate, MMAudioDataWriteStreamDelegate> {
	MMAudioStreamPlayer* m_audioPlayer;
	MMAudioDataPipe* m_dataPipe;
	BOOL m_isLocalPlay;
	BOOL m_isQQMusicWifiPlay;
	BOOL m_isCyclePlay;
	BOOL m_isNeedRestartByOthers;
	MMMusicInfo* m_musicInfo;
	MMTimer* m_levelTimer;
	NSObject* m_clientInfo;
	NSString* m_title;
	NSString* m_photoUrl;
	NSURLConnection* m_dlConn;
	NSString* m_url;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) MMMusicInfo* m_musicInfo;
@property(retain, nonatomic) NSURLConnection* m_dlConn;
@property(retain, nonatomic) NSString* m_url;
@property(retain, nonatomic) NSString* m_photoUrl;
@property(retain, nonatomic) NSString* m_title;
@property(retain, nonatomic) NSObject* m_clientInfo;
-(void).cxx_destruct;
-(void)onSetNeedRestartMusicByOthers:(BOOL)others;
-(void)onPlayPreviousMusic;
-(void)onPlayNextMusic;
-(void)onWCAudioSessionOverride;
-(void)onWCAudioSessionCategoryChange:(unsigned)change;
-(void)onWCAudioSessionOldDeviceUnavailable;
-(void)onWCAudioSessionNewDeviceAvailable;
-(void)notifyMusicPlayerRestartMusic;
-(void)notifyMusicPlayerPauseMusic;
-(double)tryToGetDuaration;
-(BOOL)isNeedRestartByOthers;
-(void)setNeedRestartByOthers:(BOOL)others;
-(int)status;
-(BOOL)isIdle;
-(BOOL)isPaused;
-(BOOL)isPlaying;
-(BOOL)isWaiting;
-(void)pause;
-(void)tryStopClientId:(id)anId;
-(void)forceStopMusic;
-(void)stopcycle;
-(void)stop;
-(void)start;
-(void)TimerCheckMeter;
-(void)playWithUrl:(id)url MusicID:(id)anId;
-(id)bcdStringFromUrl_WechatMusicUrl:(id)url_WechatMusicUrl;
-(id)bcdStringFromUrl_QQMusic:(id)url_QQMusic;
-(void)ignoreCurrentMusicItem;
-(void)addMusicItem:(id)item;
-(void)playbackStateChanged:(id)changed;
-(void)destroyStreamer;
-(void)dealloc;
-(void)onServiceInit;
-(id)init;
-(void)startDownloadMusicFromUrl:(id)url;
-(void)connection:(id)connection didFailWithError:(id)error;
-(void)connectionDidFinishLoading:(id)connection;
-(void)connection:(id)connection didReceiveData:(id)data;
-(void)connection:(id)connection didReceiveResponse:(id)response;
-(void)reportDownloadStart;
-(void)reportDownloadFailed;
-(void)onHandleWriteEventfromStream:(id)stream eventType:(unsigned long)type;
-(id)downloadTempPathForMusicFromUrl:(id)url;
-(id)cachePathForMusicFromUrl:(id)url;
-(id)getUrlPathExt:(id)ext;
-(id)hashForUrl:(id)url;
-(id)cacheRootPath;
@end

