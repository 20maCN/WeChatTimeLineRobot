/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MMObject.h"
#import "IFTSContactMgrExt.h"
#import "ContactsDataLogicDelegate.h"

@class NSMutableArray, CContact, MMDelegateProxy, NSArray, NSString, NSMutableDictionary, FTSContactMgr;
@protocol MMNewMultiSelectContactsLogicDelegate;

@interface MMNewMultiSelectContactsLogicController : MMObject <IFTSContactMgrExt, ContactsDataLogicDelegate> {
	MMDelegateProxy<MMNewMultiSelectContactsLogicDelegate>* _delegate;
	NSMutableArray* _contactsKeyArray;
	NSMutableDictionary* _contactsDict;
	NSArray* _chatroomMemberList;
	unsigned _dataMode;
	NSMutableArray* _existContactList;
	FTSContactMgr* _ftsContactMgr;
	CContact* _chatroomContact;
	NSMutableArray* _searchContactList;
	NSString* _searchKeyword;
	NSMutableArray* _strangerContactList;
	NSMutableArray* _selectedContacts;
	unsigned _multiSelectLimitCount;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) unsigned multiSelectLimitCount;
@property(retain, nonatomic) NSMutableArray* selectedContacts;
@property(retain, nonatomic) NSMutableArray* strangerContactList;
@property(retain, nonatomic) NSString* searchKeyword;
@property(retain, nonatomic) NSMutableArray* searchContactList;
@property(retain, nonatomic) CContact* chatroomContact;
@property(retain, nonatomic) FTSContactMgr* ftsContactMgr;
@property(retain, nonatomic) NSMutableArray* existContactList;
@property(assign, nonatomic) unsigned dataMode;
@property(retain, nonatomic) NSArray* chatroomMemberList;
@property(retain, nonatomic) NSMutableDictionary* contactsDict;
@property(retain, nonatomic) NSMutableArray* contactsKeyArray;
@property(assign, nonatomic) __weak MMDelegateProxy<MMNewMultiSelectContactsLogicDelegate>* delegate;
-(void).cxx_destruct;
-(id)doChatRoomSearch:(id)search;
-(void)handleContactSearchChatRoomMemberListExit;
-(void)searchContactInChatRoomMemberListWithKeyword:(id)keyword;
-(void)handleContactSearchInChatRoomMemberListBegin;
-(void)onFTSContactSearchResultChanged:(BOOL)changed;
-(void)delaySearch:(id)search;
-(void)handleContactSearchInAllFriendsExit;
-(void)searchContactInAllFriendsWithKeyword:(id)keyword;
-(void)handleContactSearchInAllFriendsBegin;
-(void)sortContacts;
-(id)addSectionKey:(id)key;
-(void)addContact:(id)contact;
-(void)removeSelectContact:(id)contact;
-(void)onContactsDataChange;
-(BOOL)onFilterContactCandidate:(id)candidate;
-(void)handleUnSelectWithContact:(id)contact;
-(BOOL)hasSelectedContact;
-(unsigned)getCurrentSelectedContactCount;
-(id)getAllSelectedContacts;
-(void)handleContactsTableViewSelectWithIndexPath:(id)indexPath isSearching:(BOOL)searching;
-(void)handleContactSearchDidExit;
-(void)handleContactSearchWithKeyword:(id)keyword;
-(void)handleContactSearchDidBegin;
-(id)getContactWithIndexPath:(id)indexPath isSearching:(BOOL)searching;
-(id)getAllSearchResult;
-(id)getAllChatRoomContact;
-(id)getAllContactsWithKey:(id)key;
-(id)getContactKeyArray;
-(BOOL)isContactSelected:(id)selected;
-(BOOL)isContactExist:(id)exist;
-(id)getAllExistContact;
-(void)setExistCotnactArray:(id)array;
-(void)setLimitCount:(unsigned)count;
-(void)initDatasWithAllFriendContactsAndChatroomContact;
-(void)initDatasWithChatRoomContact:(id)chatRoomContact;
-(void)initDatasWithAllFriendContacts;
-(void)commonInit;
-(id)initWithAllFriendContactsAndChatRoomContact:(id)allFriendContactsAndChatRoomContact;
-(id)initWithChatRoomContact:(id)chatRoomContact;
-(id)initWithAllFriendContacts;
-(void)dealloc;
@end

