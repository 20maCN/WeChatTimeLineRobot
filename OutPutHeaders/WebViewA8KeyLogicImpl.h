/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "IJumpEmoticonDetailCgiDelegate.h"
#import "MMObject.h"
#import "WeChat-Structs.h"
#import "PBMessageObserverDelegate.h"

@class JumpEmoticonDetailCgi, NSURL, WebviewAskAuthorizationLogic, NSString, UIWebView, NSMutableDictionary, NSMutableSet;
@protocol WebViewA8KeyLogicDelegate;

@interface WebViewA8KeyLogicImpl : MMObject <IJumpEmoticonDetailCgiDelegate, PBMessageObserverDelegate> {
	unsigned long _firstGetA8KeyOpCode;
	NSString* _firstGetA8KeyAppId;
	NSString* _firstGetA8KeyScope;
	NSString* _firstGetA8KeyState;
	unsigned long _getA8KeyScene;
	timeval _getA8KeyStartTime;
	NSString* _bundleId;
	NSString* _getA8KeyUsrname;
	unsigned long _getA8KeyEventId;
	NSMutableDictionary* _dicUrlPermission;
	NSMutableDictionary* _dicShareUrlForMainUrl;
	WebviewAskAuthorizationLogic* _authorizationLogic;
	BOOL _alwaysAllowJumpUrl;
	NSMutableSet* _disableGetA8KeyUrlList;
	id<WebViewA8KeyLogicDelegate> _delegate;
	NSURL* _currentUrl;
	BOOL m_hasSetFontPermission;
	unsigned long m_fontScale;
	UIWebView* _webView;
	vector<STIDKeyInfo, std::__1::allocator<STIDKeyInfo> > _pIDKeyList;
	NSString* _currentShareUrl;
	unsigned long _firstGetA8KeyOpcode;
	JumpEmoticonDetailCgi* m_jumpEmoticonDetailCgi;
	NSString* _offlineA8KeyFullUrl;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) JumpEmoticonDetailCgi* m_jumpEmoticonDetailCgi;
@property(retain, nonatomic) NSString* offlineA8KeyFullUrl;
@property(readonly, assign, nonatomic) unsigned long m_fontScale;
@property(readonly, assign, nonatomic) BOOL m_hasSetFontPermission;
@property(readonly, assign, nonatomic) BOOL alwaysAllowJumpUrl;
@property(retain, nonatomic) UIWebView* webView;
@property(retain, nonatomic) NSURL* currentUrl;
@property(assign, nonatomic) __weak id<WebViewA8KeyLogicDelegate> delegate;
@property(retain, nonatomic) NSString* getA8KeyUsrname;
@property(retain, nonatomic) NSString* bundleId;
@property(assign, nonatomic) unsigned long getA8KeyScene;
@property(retain, nonatomic) NSString* firstGetA8KeyState;
@property(retain, nonatomic) NSString* firstGetA8KeyScope;
@property(retain, nonatomic) NSString* firstGetA8KeyAppId;
@property(assign, nonatomic) unsigned long firstGetA8KeyOpcode;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)onJumpEmoticonDetailCgiFailed:(id)failed;
-(void)onJumpEmoticonDetailCgiOkWithPackageId:(id)packageId;
-(void)MessageReturn:(id)aReturn Event:(unsigned long)event;
-(void)reportGetA8KeyFailForReason:(int)reason;
-(void)reportGetA8KeyForceRedirect;
-(void)reportGetA8KeyRequest;
-(void)handleGetA8KeyResp:(id)resp EventID:(unsigned long)anId;
-(void)handleOnGetA8KeyOK:(id)ok reason:(int)reason req:(id)req;
-(void)handleOnGetA8KeyOK:(id)ok reason:(int)reason;
-(void)goToURL:(id)url;
-(void)setUrlPermission:(id)permission GeneralCtrl:(id)ctrl DeepLink:(id)link forURL:(id)url;
-(BOOL)isDisableGetA8KeyForUrl:(id)url;
-(id)getUrlPermission:(id)permission;
-(BOOL)hasUrlPermission:(id)permission;
-(unsigned long)getGeneralBitSetForUrl:(id)url;
-(unsigned long)getGeneralBitSet;
-(unsigned long)getPermissionBitSet3;
-(unsigned long)getPermissionBitSet2;
-(unsigned long)getPermissionBitSet;
-(unsigned long long)getDeepLinkBitSet;
-(id)GetDefaultPermisson;
-(id)getShareUrl;
-(void)changeCurrentShareUrlForMainUrl:(id)mainUrl;
-(id)getShareUrlForMain:(id)main;
-(void)setShareUrl:(id)url forMain:(id)main;
-(void)setPermission:(id)permission ForUrl:(id)url;
-(id)getPermissionForUrl:(id)url;
-(id)GetMainDocumentURL;
-(id)getRequestingOrCurrentUrl;
-(void)checkApiAuthorization:(id)authorization;
-(void)updateGetA8KeySceneBySourceType:(int)type;
-(BOOL)isGettingA8Key;
-(void)getA8Key:(id)key Reason:(int)reason;
-(void)dealloc;
-(id)init;
@end

