/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "IAPExt.h"
#import "IMMLanguageMgrExt.h"
#import "ICdnComMgrExt.h"
#import "MMService.h"
#import "MMService.h"
#import "PBMessageObserverDelegate.h"

@class NSData, NSString, NSMutableDictionary, EmoticonStoreSession, NSMutableSet;

@interface EmoticonStoreMgr : MMService <MMService, PBMessageObserverDelegate, IAPExt, ICdnComMgrExt, IMMLanguageMgrExt> {
	NSMutableSet* m_requestDetailForPids;
	NSMutableDictionary* m_getListEventIdDic;
	EmoticonStoreSession* m_session;
	NSMutableDictionary* m_skProducts;
	unsigned m_boughtListEventID;
	NSData* m_broughtBuff;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) NSMutableDictionary* m_getListEventIdDic;
@property(retain, nonatomic) NSMutableSet* m_requestDetailForPids;
@property(retain, nonatomic) EmoticonStoreSession* m_session;
@property(retain, nonatomic) NSData* m_broughtBuff;
@property(retain, nonatomic) NSMutableDictionary* m_skProducts;
+(unsigned)getIdKeyDownloadFailed;
+(unsigned)getIdKeyIdEmoticon;
-(void).cxx_destruct;
-(void)onLanguageChange;
-(void)setBoughtListCacheWithItemList:(id)itemList;
-(id)getBoughtListCache;
-(id)pathForBoughtListCache;
-(void)beginPersonalEmotionSession:(unsigned long)session withReqType:(unsigned long)reqType;
-(void)setStoreListCacheWithItemList:(id)itemList Advertisment:(id)advertisment collCellArray:(id)array withReqType:(unsigned long)reqType withTopNum:(unsigned long)topNum;
-(void)setStoreListCacheWithItemList:(id)itemList Advertisment:(id)advertisment collCellArray:(id)array withReqType:(unsigned long)reqType;
-(id)getStoreListCacheWithReqType:(unsigned long)reqType;
-(id)pathForStoreListCacheWithReqType:(unsigned long)reqType;
-(id)rootPathForStoreListCache;
-(void)notifyDownloadErrorWithItem:(id)item;
-(id)findEmoticonItemByProductID:(id)anId;
-(void)updateBoughtListTailFromServer;
-(void)startBoughtListSession;
-(id)emoticonItemInCacheWithProductID:(id)productID;
-(id)updateItemDetailWithProductID:(id)productID Scence:(unsigned long)scence;
-(BOOL)updateTailForSessionScence:(unsigned long)sessionScence withReqType:(unsigned long)reqType;
-(id)getStoreAdvertismentForSession:(unsigned long)session;
-(id)getStoreCollectionCellListForReqType:(unsigned long)reqType;
-(void)MessageReturn:(id)aReturn Event:(unsigned long)event;
-(void)onGetBroughtItemList:(id)list;
-(unsigned long)getBoughtListFromServer;
-(void)removeItemFromDownloadingQueueByClientID:(id)downloadingQueueByClientID;
-(void)tryInstallEmoticonPackage:(id)package;
-(void)OnCdnDownload:(id)download;
-(id)findDownloadingEmoticonItemByProductID:(id)anId;
-(id)findDownloadingEmoticonItemByClientDownloadID:(id)anId;
-(void)OnCdnDownloadProgress:(id)progress;
-(void)OnSetCdnDnsInfo;
-(BOOL)IsCdnEmoticonPackageDownlaodFromClientID:(id)clientID;
-(id)mediaInfoForEmoticonItem:(id)emoticonItem;
-(BOOL)cancelDownloadAndInstallEmoticonItem:(id)item;
-(BOOL)reDownloadAndInstallEmoticonItem:(id)item isAutomatic:(BOOL)automatic;
-(BOOL)downloadAndInstallEmoticonItem:(id)item;
-(void)OnExchangeEmoticonPack:(id)pack;
-(BOOL)exchangeEmoticonItemForDownloadUrl:(id)downloadUrl Scence:(int)scence isAutomatic:(BOOL)automatic;
-(void)onRestoreFail;
-(void)onRestoreSuccessForProduct:(id)product;
-(void)onPurchaseCancelForProduct:(id)product;
-(void)onPurchaseFailForProduct:(id)product ErrCode:(unsigned long)code;
-(void)onPurchaseSuccessForProduct:(id)product ErrCode:(unsigned long)code;
-(int)buyEmoticonItem:(id)item;
-(void)onGetProduct:(id)product invalidProductID:(id)anId;
-(void)updateListFromAppleForSKProduct;
-(void)updateItemFromAppleForSKProduct:(id)skproduct;
-(BOOL)updateItemProductFromCache:(id)cache;
-(void)updateItemInSession:(id)session;
-(void)OnGetStoreEmoticonItemDetail:(id)detail;
-(BOOL)GetEmotionDetailWithProductID:(id)productID Scence:(unsigned long)scence;
-(void)OnGetStoreEmoticonList:(id)list withReqType:(unsigned long)reqType;
-(id)updateSKProductForItemList:(id)itemList;
-(BOOL)GetEmotionListFromStore:(unsigned long)store withReqType:(unsigned long)reqType;
-(void)endStoreSession:(unsigned long)session;
-(id)beginStoreSessionWithItem:(id)item;
-(void)beginStoreSession:(unsigned long)session withReqType:(unsigned long)reqType;
-(id)getBufForReqType:(unsigned long)reqType;
-(void)dealloc;
-(void)onServiceReloadData;
-(void)onServiceInit;
@end

