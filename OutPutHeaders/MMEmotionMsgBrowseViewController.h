/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "IStoreEmotionDesignerInfoMgrExt.h"
#import "UIAlertViewDelegate.h"
#import "IEmoticonDownloadExt.h"
#import "UICollectionViewDelegate.h"
#import "UICollectionViewDataSource.h"
#import "WCActionSheetDelegate.h"
#import "WeChat-Structs.h"
#import "UIGestureRecognizerDelegate.h"
#import "EmoticonStoreCellDelegate.h"
#import "EmoticonStoreMgrExt.h"
#import "IMsgRevokeExt.h"
#import "EmoticonDescMgrExt.h"
#import "EmoticonCustomManageAddLogicDelegate.h"
#import "MMUIViewController.h"
#import "EmoticonStoreItemExt.h"

@class MMStoreEmotionAllCell, WCActionSheet, EmoticonCustomManageAddLogic, CEmoticonWrap, CMessageWrap, EmoticonStoreItem, MMImageBrowseView, UICollectionView, EmotionStoreDetailDesignerContainerView, NSString, NSMutableArray, UIView;

@interface MMEmotionMsgBrowseViewController : MMUIViewController <EmoticonCustomManageAddLogicDelegate, UICollectionViewDataSource, UICollectionViewDelegate, EmoticonStoreMgrExt, EmoticonStoreCellDelegate, UIGestureRecognizerDelegate, IStoreEmotionDesignerInfoMgrExt, WCActionSheetDelegate, EmoticonStoreItemExt, EmoticonDescMgrExt, IEmoticonDownloadExt, IMsgRevokeExt, UIAlertViewDelegate> {
	MMImageBrowseView* m_imageView;
	CMessageWrap* m_wrapMsg;
	CEmoticonWrap* m_wrapEmoticon;
	EmoticonStoreItem* m_item;
	WCActionSheet* m_actionSheet;
	UIView* _containerView;
	UICollectionView* _recommendedCollectionView;
	NSMutableArray* _recommendedArray;
	BOOL _isLoadedFromCache;
	MMStoreEmotionAllCell* _emotionCell;
	UIView* _lineView;
	EmotionStoreDetailDesignerContainerView* m_designerContainerView;
	EmoticonCustomManageAddLogic* m_addEmoticonLogic;
	NSMutableArray* m_operationTitles;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) EmoticonStoreItem* m_item;
-(void).cxx_destruct;
-(BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(void)OnShowAlertWithIKnow:(id)iknow;
-(void)OnShowAlertWithOK:(id)ok;
-(void)OnStopLoading;
-(void)OnStartLoadingAndShowStringBlocked:(id)blocked;
-(void)OnStopLoadingAndShowError:(id)error;
-(void)OnStopLoadingAndShowOK:(id)ok;
-(void)OnStartLoadingAndShowString:(id)string;
-(void)collectionView:(id)view didSelectItemAtIndexPath:(id)indexPath;
-(void)OnStoreListChanged:(id)changed withRet:(int)ret withReqType:(unsigned long)reqType;
-(CGSize)collectionView:(id)view layout:(id)layout sizeForItemAtIndexPath:(id)indexPath;
-(id)collectionView:(id)view viewForSupplementaryElementOfKind:(id)kind atIndexPath:(id)indexPath;
-(id)collectionView:(id)view cellForItemAtIndexPath:(id)indexPath;
-(int)collectionView:(id)view numberOfItemsInSection:(int)section;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)OnMsgRevoked:(id)revoked n64MsgId:(long long)anId SysMsg:(id)msg;
-(void)OnEmoticonDownload:(unsigned long)download withMsgWrap:(id)msgWrap;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
-(void)OnEmoticonStoreItemChanged:(id)changed;
-(void)onGetEmoticonClickFlag:(unsigned long)flag downloadFlag:(unsigned long)flag2 pid:(id)pid;
-(void)onGetEmoticonClickFlag:(unsigned long)flag pid:(id)pid;
-(void)onDesignerInfoUpdated:(id)updated;
-(void)onGetDesignerForDesignerId:(id)designerId AndDesigner:(id)designer;
-(void)clickDesignerCell;
-(void)onPurchase:(id)purchase;
-(void)onSaveEmoticon:(id)emoticon;
-(void)jumpToEmotionPage;
-(void)onOperate:(id)operate;
-(void)popViewController;
-(void)setupBackBarItem;
-(void)setupRecommendedView;
-(void)onClickEmotionCell:(id)cell;
-(void)setupEmotionCell;
-(void)setupStoreEmotionView;
-(void)initDesignerContainerView;
-(void)setupImageView;
-(void)initImageViewWithFrame:(CGRect)frame;
-(void)reloadData;
-(void)configOperationTitles;
-(void)initRightBarButtonItem;
-(void)initView;
-(void)initPersonalDesignerData;
-(void)initData;
-(void)viewWillAppear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewDidLoad;
-(id)initWithMsgWrap:(id)msgWrap;
-(void)dealloc;
@end

