/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "NSCoding.h"
#import "WeChat-Structs.h"
#import "UIGestureRecognizerDelegate.h"
#import "CLLocationManagerDelegate.h"
#import "QMapAnimationContainerDelegate.h"

@class UILongPressGestureRecognizer, UIImageView, QScaleView, QViewRecycler, QOverlayFloor, NSArray, UIPinchGestureRecognizer, CLLocationManager, QAnnotationFloor, QMapAnimationContainer, QUserLocation, NSOperationQueue, QCircle, NSString, UITapGestureRecognizer, NSMutableArray, QBaseView;
@protocol QMapViewDelegate, QMapViewDataSource;

__attribute__((visibility("hidden")))
@interface QMapView : XXUnknownSuperclass <QMapAnimationContainerDelegate, UIGestureRecognizerDelegate, CLLocationManagerDelegate, NSCoding> {
	NSOperationQueue* _changeRegionDelegateQueue;
	BOOL _isChangeZoomEvent;
	BOOL _isChangeMoveEvent;
	BOOL _showsUserLocation;
	BOOL _showsScale;
	BOOL _showTraffic;
	BOOL _scrollEnabled;
	BOOL _zoomEnabled;
	BOOL _magicEnabled;
	BOOL _forceUpdatingHeading;
	BOOL _snapshotting;
	BOOL _userLocationViewIsCustomized;
	BOOL _allowAutomaticChangeDataSource;
	BOOL _lockDataSource;
	int _userTrackingMode;
	int _internalScaleMode;
	id<QMapViewDelegate> _delegate;
	QUserLocation* _userLocation;
	QBaseView* _baseView;
	QMapAnimationContainer* _renderContainer;
	UITapGestureRecognizer* _zoomInGestureRecognizer;
	UILongPressGestureRecognizer* _oneFingerZoomGestureRecognizer;
	UITapGestureRecognizer* _zoomOutGestureRecognizer;
	UITapGestureRecognizer* _tapGestureRecognizer;
	UIPinchGestureRecognizer* _zoomPinchGestureRecognizer;
	NSMutableArray* _overlayArray;
	QOverlayFloor* _overlayFloor;
	NSMutableArray* _annotationArray;
	QAnnotationFloor* _annotationFloor;
	QViewRecycler* _recycler;
	CLLocationManager* _locationManager;
	QCircle* _userLocationCircle;
	UIImageView* _logoImageView;
	QScaleView* _scaleView;
	id<QMapViewDataSource> _mapSource;
	CGSize _lastBoundsSize;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) BOOL lockDataSource;
@property(assign, nonatomic) CGSize lastBoundsSize;
@property(assign, nonatomic) __weak id<QMapViewDataSource> mapSource;
@property(assign, nonatomic) BOOL allowAutomaticChangeDataSource;
@property(assign, nonatomic) int internalScaleMode;
@property(retain, nonatomic) QScaleView* scaleView;
@property(retain, nonatomic) UIImageView* logoImageView;
@property(assign, nonatomic) BOOL userLocationViewIsCustomized;
@property(retain, nonatomic) QCircle* userLocationCircle;
@property(retain, nonatomic) CLLocationManager* locationManager;
@property(retain, nonatomic) QViewRecycler* recycler;
@property(retain, nonatomic) QAnnotationFloor* annotationFloor;
@property(retain, nonatomic) NSMutableArray* annotationArray;
@property(retain, nonatomic) QOverlayFloor* overlayFloor;
@property(retain, nonatomic) NSMutableArray* overlayArray;
@property(retain, nonatomic) UIPinchGestureRecognizer* zoomPinchGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer* tapGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer* zoomOutGestureRecognizer;
@property(retain, nonatomic) UILongPressGestureRecognizer* oneFingerZoomGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer* zoomInGestureRecognizer;
@property(assign) BOOL snapshotting;
@property(retain, nonatomic) QMapAnimationContainer* renderContainer;
@property(retain, nonatomic) QBaseView* baseView;
@property(readonly, assign, nonatomic, getter=isUserLocationVisible) BOOL userLocationVisible;
@property(assign, nonatomic) int userTrackingMode;
@property(assign, nonatomic) BOOL forceUpdatingHeading;
@property(retain, nonatomic) QUserLocation* userLocation;
@property(assign, nonatomic, getter=isShowsUserLocation) BOOL showsUserLocation;
@property(copy, nonatomic) NSArray* selectedAnnotations;
@property(readonly, assign, nonatomic) CGRect annotationVisibleRect;
@property(readonly, assign, nonatomic) NSArray* annotations;
@property(readonly, assign, nonatomic) double maxZoomLevel;
@property(readonly, assign, nonatomic) double minZoomLevel;
@property(assign, nonatomic) double zoomLevel;
@property(assign, nonatomic) XXStruct_Yvvv9D visibleMapRect;
@property(assign, nonatomic) XXStruct_Yvvv9D region;
@property(assign, nonatomic) XXStruct_gLbvpC centerCoordinate;
@property(assign, nonatomic) BOOL showsScale;
@property(assign, nonatomic, getter=isMagicEnabled) BOOL magicEnabled;
@property(assign, nonatomic, getter=isZoomEnabled) BOOL zoomEnabled;
@property(assign, nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
@property(assign, nonatomic, getter=isShowTraffic) BOOL showTraffic;
@property(assign, nonatomic) unsigned mapType;
@property(assign, nonatomic) __weak id<QMapViewDelegate> delegate;
@property(assign, nonatomic) int scaleMode;
@property(assign, nonatomic) __weak id<QMapViewDataSource> dataSource;
@property(assign, nonatomic) BOOL automaticChangeDataSource;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic) NSArray* overlays;
-(void).cxx_destruct;
-(void)dealloc;
-(id)initWithFrame:(CGRect)frame;
-(void)handleLoadingErrorNotification:(id)notification;
-(void)setupDataSourceRestriction;
-(void)setupNotification;
-(void)setupDefaultMapRect;
-(void)setupScaleView;
-(void)setupLogo;
-(id)cropImage:(id)image;
-(void)setupUserLocationSystem;
-(void)setupAnnotationSystem;
-(void)setupOverlaySystem;
-(void)setupRegionChangeQueue;
-(void)setupGestureRecognizers;
-(void)setupRenderContainer;
-(void)setupBaseView;
-(void)setupSelf;
-(void)setBounds:(CGRect)bounds;
-(void)setFrame:(CGRect)frame;
-(void)sendingStatisticsInformation;
-(void)dealAutomaticChangeDataSource;
-(void)updateMapSourceType:(unsigned)type;
-(BOOL)chinaContainsCoordinate:(XXStruct_gLbvpC)coordinate;
-(void)setUserTrackingMode:(int)mode animated:(BOOL)animated;
-(void)notifyDelegateUpdateUserLocation:(id)location updatingLocation:(BOOL)location2;
-(void)diveFitsTracking;
-(void)addUserLocationInterface;
-(void)updateUserLocationInterface;
-(BOOL)userLocationInterfaceExisted;
-(void)removeAngleIndicator;
-(void)removeUserLocationView;
-(void)resetUserLocationHeading;
-(void)decreaseUserTrackingMode;
-(id)correctLocation:(id)location;
-(BOOL)isAuthorizedToUseLocationServices;
-(void)locationManager:(id)manager didFailWithError:(id)error;
-(void)locationManager:(id)manager didUpdateHeading:(id)heading;
-(void)locationManager:(id)manager didUpdateToLocation:(id)location fromLocation:(id)location3;
-(void)showAnnotations:(id)annotations animated:(BOOL)animated;
-(void)deselectAnnotation:(id)annotation animated:(BOOL)animated;
-(void)selectAnnotation:(id)annotation animated:(BOOL)animated;
-(id)dequeueReusableAnnotationViewWithIdentifier:(id)identifier;
-(id)annotationsInMapRect:(XXStruct_Yvvv9D)mapRect;
-(id)viewForAnnotation:(id)annotation;
-(void)removeAnnotations:(id)annotations;
-(void)removeAnnotation:(id)annotation;
-(void)addAnnotations:(id)annotations;
-(void)addAnnotation:(id)annotation;
-(void)updateReusingPool;
-(id)doAddAnnotation:(id)annotation;
-(id)defaultUserLocationCircleView;
-(id)defaultUserLocationView;
-(id)defaultAnnotationViewWithAnnotation:(id)annotation;
-(BOOL)isVisibleForAnnotation:(id)annotation;
-(CGRect)annotationValidRect;
-(void)handlePinchGesture:(id)gesture;
-(void)handleTap:(id)tap;
-(void)handleOneFingerZoom:(id)zoom;
-(void)handleZoomOut:(id)anOut;
-(void)handleZoomIn:(id)anIn;
-(BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;
-(BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(void)makeSickEnabled:(BOOL)enabled;
-(void)setCenterCoordinate:(XXStruct_gLbvpC)coordinate zoomLevel:(double)level animated:(BOOL)animated;
-(void)setZoomLevel:(double)level animated:(BOOL)animated;
-(void)internalSetZoomLevel:(double)level animated:(BOOL)animated;
-(float)priorZoomLevel;
-(float)nextZoomLevel;
-(void)setCenterCoordinate:(XXStruct_gLbvpC)coordinate animated:(BOOL)animated;
-(void)internalSetMapPoint:(XXStruct_gLbvpC)point animated:(BOOL)animated;
-(void)zoomToRect:(CGRect)rect animated:(BOOL)animated;
-(void)setContentOffset:(CGPoint)offset animated:(BOOL)animated;
-(void)setZoomScale:(float)scale animated:(BOOL)animated;
-(float)zoomScale;
-(void)setVisibleMapRect:(XXStruct_Yvvv9D)rect animated:(BOOL)animated;
-(void)setVisibleMapRect:(XXStruct_Yvvv9D)rect edgePadding:(UIEdgeInsets)padding animated:(BOOL)animated;
-(void)internalSetVisibleMapRect:(XXStruct_Yvvv9D)rect edgePadding:(UIEdgeInsets)padding animated:(BOOL)animated;
-(XXStruct_Yvvv9D)mapRectThatFits:(XXStruct_Yvvv9D)fits edgePadding:(UIEdgeInsets)padding;
-(XXStruct_Yvvv9D)mapRectThatFits:(XXStruct_Yvvv9D)fits;
-(XXStruct_Yvvv9D)regionThatFits:(XXStruct_Yvvv9D)fits;
-(XXStruct_Yvvv9D)mapRectThatFitsZoomScale:(double)scale centerMapPoint:(XXStruct_gLbvpC)point;
-(XXStruct_Yvvv9D)mapRectThatFitsZoomScale:(double)scale atPivot:(CGPoint)pivot;
-(void)internalSetMapRect:(XXStruct_Yvvv9D)rect animated:(BOOL)animated;
-(void)setRegion:(XXStruct_Yvvv9D)region animated:(BOOL)animated;
-(XXStruct_Yvvv9D)convertRect:(CGRect)rect toRegionFromView:(id)view;
-(CGRect)convertRegion:(XXStruct_Yvvv9D)region toRectToView:(id)view;
-(XXStruct_gLbvpC)convertPoint:(CGPoint)point toCoordinateFromView:(id)view;
-(CGPoint)convertCoordinate:(XXStruct_gLbvpC)coordinate toPointToView:(id)view;
-(void)updateScaleViewForZoomLevel:(float)zoomLevel animated:(BOOL)animated;
-(void)hideScaleView;
-(void)internalHideScaleView;
-(void)displayScaleView;
-(void)updateScaleViewForZoomLevel:(float)zoomLevel animated:(BOOL)animated duration:(double)duration;
-(void)updateScaleViewForScaleMode:(int)scaleMode;
-(unsigned)scaleViewAutoresizingMaskForScaleMode:(int)scaleMode;
-(CGPoint)scaleViewOriginPositionForScaleMode:(int)scaleMode;
-(double)metersPerPointForZoomLevel:(float)zoomLevel;
-(double)metersPerPointForCurrentZoomLevel;
-(double)calculateDistanceInMetersForZoomLevel:(double)zoomLevel;
-(id)viewForOverlay:(id)overlay;
-(void)insertOverlay:(id)overlay belowOverlay:(id)overlay2;
-(void)insertOverlay:(id)overlay aboveOverlay:(id)overlay2;
-(void)exchangeOverlayAtIndex:(unsigned)index withOverlayAtIndex:(unsigned)index2;
-(void)insertOverlay:(id)overlay atIndex:(unsigned)index;
-(void)removeOverlays:(id)overlays;
-(void)removeOverlay:(id)overlay;
-(void)addOverlays:(id)overlays;
-(void)addOverlay:(id)overlay;
-(void)completeRegionChangeEventByZoom:(BOOL)zoom animated:(BOOL)animated;
-(void)registerRegionChangeEventByZoom:(BOOL)zoom animated:(BOOL)animated;
-(void)notifyDelegateRegionDidChangeAnimated:(BOOL)notifyDelegateRegion;
-(void)notifyDelegateRegionWillChangeAnimated:(BOOL)notifyDelegateRegion;
-(void)notifyDelegateDidFailLoadingWithError:(id)notifyDelegate;
-(void)animationContainerDidEndZooming:(id)animationContainer withView:(id)view atScale:(float)scale;
-(void)animationContainerWillBeginZooming:(id)animationContainer withView:(id)view;
-(void)animationContainerDidEndScrollingAnimation:(id)animationContainer;
-(void)animationContainerDidEndDecelerating:(id)animationContainer;
-(void)animationContainerWillBeginDecelerating:(id)animationContainer;
-(void)animationContainerDidEndDragging:(id)animationContainer willDecelerate:(BOOL)decelerate;
-(void)animationContainerWillEndDragging:(id)animationContainer withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint*)offset;
-(void)animationContainerWillBeginDragging:(id)animationContainer;
-(void)animationContainerDidZoom:(id)animationContainer;
-(void)animationContainerDidScroll:(id)animationContainer;
-(void)annotationView:(id)view calloutAccessoryControlTapped:(id)tapped;
-(void)annotationView:(id)view didChangeDragState:(unsigned)state fromOldState:(unsigned)oldState;
-(void)didDeselectAnnotationView:(id)view;
-(void)didSelectAnnotationView:(id)view;
-(XXStruct_Yvvv9D)QMapRectFromCGRect:(CGRect)cgrect;
-(CGRect)CGRectFromQMapRect:(XXStruct_Yvvv9D)qmapRect;
-(XXStruct_gLbvpC)QMapPointFromCGPoint:(CGPoint)cgpoint;
-(CGPoint)CGPointFromQMapPoint:(XXStruct_gLbvpC)qmapPoint;
-(XXStruct_Yvvv9D)regionFromRect:(CGRect)rect;
-(CGRect)rectFromRegion:(XXStruct_Yvvv9D)region;
-(CGRect)rectFromMapRect:(XXStruct_Yvvv9D)mapRect;
-(XXStruct_Yvvv9D)mapRectFromRect:(CGRect)rect;
-(CGPoint)pointFromCoordinate:(XXStruct_gLbvpC)coordinate modifyDeviationTransform:(CGAffineTransform*)transform;
-(XXStruct_gLbvpC)coordinateFromPoint:(CGPoint)point;
-(CGPoint)pointFromCoordinate:(XXStruct_gLbvpC)coordinate;
-(CGPoint)pointFromMapPoint:(XXStruct_gLbvpC)mapPoint modifyDeviationTransform:(CGAffineTransform*)transform;
-(XXStruct_gLbvpC)mapPointFromPoint:(CGPoint)point;
-(CGPoint)pointFromMapPoint:(XXStruct_gLbvpC)mapPoint;
-(CGAffineTransform)level20Transform;
-(double)ratioCurrentTo20Double;
-(float)ratio20ToCurrent;
-(double)animationDurationOfContainerBoundsProperty;
-(id)container;
-(void)setCountryCode:(id)code coordinate:(XXStruct_gLbvpC)coordinate;
-(void)takeSnapshotInRect:(CGRect)rect withCompletionBlock:(id)completionBlock;
-(id)takeSnapshotInRect:(CGRect)rect;
-(id)takeSnapshot;
-(void)fixDataSource;
@end

