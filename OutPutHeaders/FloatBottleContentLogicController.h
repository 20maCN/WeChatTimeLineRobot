/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "BaseMsgContentLogicController.h"
#import "WeChat-Structs.h"
#import "BottleMsgViewControllerDelegate.h"

@class CBottle;
@protocol FloatBottleContentLogicDelegate;

@interface FloatBottleContentLogicController : BaseMsgContentLogicController <BottleMsgViewControllerDelegate> {
	CBottle* m_bottle;
	id<FloatBottleContentLogicDelegate> m_bottleLogicDelegate;
	BOOL m_bFromOpenBottle;
}
@property(assign, nonatomic) __weak id<FloatBottleContentLogicDelegate> m_bottleLogicDelegate;
@property(retain, nonatomic) CBottle* m_bottle;
-(void).cxx_destruct;
-(BOOL)CanOpenServiceAppList;
-(BOOL)isShakeEnabled;
-(id)initWithBottle:(id)bottle andContact:(id)contact andFromOpenBottle:(BOOL)openBottle;
-(void)initViewController;
-(BOOL)needShowReturnAlert;
-(void)setBottleUnread;
-(void)dealloc;
-(void)onPopFromNavigationController;
-(id)GetUsrTitleTail;
-(id)GetUsrTitleFront;
-(id)GetUsrTitle;
-(id)GetTitleTailImage;
-(void)OpenDetailInfo;
-(BOOL)isOpenSingleInfo;
-(void)OpenContactInfo:(id)info;
-(id)GetRightBarButtonTitle;
-(id)GetRightBarButtonImageName;
-(void)switchEarpieceMode;
-(void)StateChanged;
-(BOOL)EnabledOfHeaderButtonAtIndex:(unsigned long)index;
-(void)onThrowBack:(id)back;
-(id)HighlightedImageOfHeaderButtonAtIndex:(unsigned long)index;
-(id)ImageOfHeaderButtonAtIndex:(unsigned long)index;
-(id)TitleOfHeaderButtonsAtIndex:(unsigned long)index;
-(unsigned long)NumberOfHeaderButtons;
-(void)CustomToolViewEX:(id)ex;
-(BOOL)CanShowSight;
-(BOOL)CanSelectMyFavoritesItemForSendingMsg;
-(BOOL)CanRemoteRecord;
-(BOOL)CanSend3rdMsg;
-(BOOL)CanSendVoipMsg;
-(BOOL)CanSendLocationMsg;
-(BOOL)CanSendVideoMsg;
-(BOOL)CanSendVoiceMsg;
-(BOOL)CanSendImageMsg:(id)msg;
-(BOOL)CanSendTextMsg:(id)msg;
-(void)SendEmoticonMessage:(id)message;
-(id)FormImageMsg:(id)msg withImage:(id)image withData:(id)data;
-(id)formImageMsgByMMAsset:(id)asset toUserName:(id)userName;
-(id)FormImageMsg:(id)msg withImage:(id)image withData:(id)data withImageInfo:(id)imageInfo;
-(id)FormImageMsg:(id)msg withImage:(id)image;
-(void)OnAddMsg:(id)msg MsgWrap:(id)wrap;
-(id)FormTextMsg:(id)msg withText:(id)text;
-(void)ResendMsg:(id)msg MsgWrap:(id)wrap;
-(void)ModMsg:(id)msg MsgWrap:(id)wrap;
-(void)AddMsg:(id)msg MsgWrap:(id)wrap;
-(void)DelMsg:(id)msg MsgList:(id)list DelAll:(BOOL)all;
-(void)ClearUnRead:(id)read FromID:(unsigned long)anId ToID:(unsigned long)anId3;
-(id)GetDownMsg:(id)msg FromID:(unsigned long)anId Limit:(unsigned long)limit LeftCount:(unsigned*)count LeftUnreadCount:(unsigned*)count5;
-(id)GetMsg:(id)msg FromID:(unsigned long)anId Limit:(unsigned long)limit LeftCount:(unsigned*)count LeftUnreadCount:(unsigned*)count5;
@end

