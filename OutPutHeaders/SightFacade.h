/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WeChat-Structs.h"
#import "MMService.h"
#import "MMService.h"
#import "MMovieCompressorDelegate.h"
#import "IMsgExt.h"
#import "SightTipsShakeViewControllerDelegate.h"
#import "SightMomentDraftTipsViewControllerDelegate.h"
#import "SightCaptureDelegate.h"
#import "IMMNewSessionMgrExt.h"

@class NSDictionary, NSString, SightDraftMgr, CMMotionManager, UIImage, NSMutableDictionary, NSArray, MainFrameSightViewController, NSMutableArray, MMWindowController, MMObject;
@protocol SightCaptureLogic;

@interface SightFacade : MMService <SightTipsShakeViewControllerDelegate, IMMNewSessionMgrExt, SightMomentDraftTipsViewControllerDelegate, MMService, IMsgExt, SightCaptureDelegate, MMovieCompressorDelegate> {
	BOOL m_preventCamera;
	MMWindowController* m_sightDraftTipsWindow;
	MMWindowController* m_sightTipsWindow;
	MMWindowController* m_sightWindowController;
	MainFrameSightViewController* m_sightWindowView;
	NSMutableArray* m_distributeList;
	MMObject<SightCaptureLogic>* m_logic;
	SightDraftMgr* m_draftMgr;
	unsigned long m_compressorID;
	NSMutableDictionary* m_compressorDic;
	NSMutableArray* m_invalidateCompressor;
	unsigned long m_captureCounter;
	unsigned long m_continousCaptureID;
	XXStruct_pwHToB m_lastCaptureTime;
	UIImage* m_blurImage;
	BOOL m_lightDetector;
	CMMotionManager* m_cmManager;
	BOOL _needShakeDetector;
	NSDictionary* _sightLimitationDictionary;
	NSArray* _allowableSightFPS;
	NSArray* _allowableSightFrameSize;
	float _allowableSightMaxDuration;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) float allowableSightMaxDuration;
@property(retain, nonatomic) NSArray* allowableSightFrameSize;
@property(retain, nonatomic) NSArray* allowableSightFPS;
@property(retain, nonatomic) NSDictionary* sightLimitationDictionary;
@property(assign, nonatomic) BOOL needShakeDetector;
@property(retain, nonatomic) UIImage* blurImage;
@property(readonly, assign, nonatomic) BOOL preventCamera;
-(void).cxx_destruct;
-(BOOL)isTurnOnLegalityCheckForReceivedSight;
-(unsigned)legalityTypeOfSight:(id)sight;
-(void)statDraftUse:(unsigned long)use operation:(unsigned long)operation;
-(void)statDraftSave:(unsigned long)save;
-(void)statPlay:(unsigned long)play;
-(void)statOper:(unsigned long)oper operation:(unsigned long)operation targetCount:(unsigned long)count;
-(void)statSent:(unsigned long)sent target:(unsigned long)target;
-(id)getDraftList;
-(void)removeDraft:(id)draft;
-(void)addDraft:(id)draft;
-(id)getForwardContactList;
-(void)removeUsrFromSightDistributeList:(id)sightDistributeList;
-(void)popUsrToListTop:(id)listTop;
-(id)pathOfSightOrderList;
-(void)OnReceiveSight:(id)sight;
-(void)OnSendSight:(id)sight;
-(void)OnAddMsg:(id)msg MsgWrap:(id)wrap;
-(void)onDeleteSessionOfUser:(id)user;
-(CGSize)sightViewSizeWithImgSize:(CGSize)imgSize;
-(CGRect)jumpToMomentTimelineTopAtBackgroundWithMediaItem:(id)mediaItem;
-(void)resumeMusicPlay;
-(void)moveOutSightWindowWithMomentDraftTips:(BOOL)momentDraftTips;
-(void)moveOutSightWindow;
-(void)fadeOutSightWindow;
-(void)closeSightWindowWithMomentDraftTips;
-(void)closeSightWindow;
-(void)closeSightViewController;
-(id)getSubImage:(CGRect)image inImage:(id)image2;
-(void)showSightCameraFromMomentDraft:(id)momentDraft withMaskImg:(id)maskImg;
-(void)showSightWindowForMomentWithMask:(id)mask byViewController:(id)controller scene:(int)scene;
-(void)showSightWindowWithBottomMask:(id)bottomMask andTopMask:(id)mask maskAlpha:(float)alpha iconCenter:(CGPoint)center byViewController:(id)controller;
-(void)onSightDraftTipsTouchBegin;
-(void)hideDraftTipsWindow;
-(void)showSightDraftTipsWindow;
-(void)onCloseTips;
-(void)showSightShakeTipsWindowbyViewController:(id)controller;
-(void)mMovieCompressor:(id)compressor onMovieCompressFinished:(id)finished thumbImg:(id)img ret:(unsigned long)ret;
-(void)mMovieCompressor:(id)compressor onMovieCompressFailed:(unsigned long)failed;
-(void)cancelCompress:(unsigned long)compress;
-(unsigned long)compressSightVideo:(id)video withVideoSize:(CGSize)videoSize andBitrate:(int)bitrate;
-(void)closeLightBoots;
-(void)openLightBoots;
-(BOOL)isLightBoostOn;
-(void)onRecorderFinished:(unsigned long)finished moviePath:(id)path withThumb:(id)thumb;
-(void)onRecorderFailed:(unsigned long)failed;
-(void)onCameraStop;
-(void)onCameraAudioReady;
-(void)onCameraVideoReady;
-(void)onCameraPreviewReady:(id)ready;
-(void)onCameraPreviewGap:(id)gap;
-(void)stopShakeDetector;
-(void)startShakeDector;
-(void)realStartRecording;
-(unsigned long)prepareRecording:(CGSize)recording bitrate:(float)bitrate;
-(void)cancelRecording:(unsigned long)recording;
-(void)stopRecording:(unsigned long)recording;
-(unsigned long)startRecording:(CGSize)recording bitrate:(float)bitrate;
-(void)savePreviewBlurImage:(id)image;
-(void)detactImageLight:(id)light;
-(void)processScreenCapture:(id)capture;
-(void)savePreviewCapture:(unsigned long)capture;
-(void)stopSnapShotTimer;
-(void)startSnapShotTimer;
-(void)captureImage:(id)image withBlock:(id)block;
-(void)releasePreviewView:(id)view;
-(id)genPreviewView:(CGRect)view;
-(void)zoomInCamera;
-(void)zoomCamera;
-(BOOL)isSupportZoom;
-(void)focusAtPoint:(CGPoint)point;
-(void)startQRCodeScanner;
-(BOOL)pauseCamera;
-(void)startCameraAudio;
-(void)startCamera:(BOOL)camera withAudio:(BOOL)audio;
-(void)startCamera:(BOOL)camera;
-(void)startCamera;
-(BOOL)isCameraOn;
-(void)onBecomeActive;
-(void)onResignActive;
-(float)getCameraHeight;
-(BOOL)isAuthStatusOK;
-(BOOL)checkRequestAuthAccess;
-(BOOL)needCheckRequestAuthAccess;
-(BOOL)isSupportSight;
-(void)dealloc;
-(id)init;
@end

