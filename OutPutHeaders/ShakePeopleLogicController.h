/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "LocationRetrieveDelegate.h"
#import "MMObject.h"
#import "PBMessageObserverDelegate.h"

@class ShakeGetResponse, NSMutableArray, LocationRetriever, CLLocation, NSString, ShakeReportResponse;
@protocol ShakeLogicProxyDelegate;

@interface ShakePeopleLogicController : MMObject <PBMessageObserverDelegate, LocationRetrieveDelegate> {
	unsigned long m_uiEventID;
	unsigned long m_uiTryCount;
	double m_dbLastReportTime;
	id<ShakeLogicProxyDelegate> m_delegate;
	LocationRetriever* m_locationRetrieve;
	BOOL m_isTriggeredShakeReport;
	NSMutableArray* m_eventIDsToListen;
	ShakeReportResponse* m_reportResponse;
	ShakeGetResponse* m_getResponse;
	BOOL m_isTaskStoped;
	CLLocation* m_location;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) CLLocation* m_location;
@property(assign, nonatomic) BOOL m_isTaskStoped;
@property(retain, nonatomic) ShakeGetResponse* m_getResponse;
@property(retain, nonatomic) ShakeReportResponse* m_reportResponse;
@property(retain, nonatomic) NSMutableArray* m_eventIDsToListen;
@property(assign, nonatomic) BOOL m_isTriggeredShakeReport;
@property(retain, nonatomic) LocationRetriever* m_locationRetrieve;
-(void).cxx_destruct;
-(void)MessageReturn:(id)aReturn Event:(unsigned long)event;
-(void)SetShakeList:(id)list andScene:(unsigned long)scene;
-(void)updateShakeLocation;
-(id)getMsgForState:(unsigned long)state;
-(BOOL)isShowBannerView;
-(void)shakeTerminate;
-(void)shakeReset;
-(void)shakeStop;
-(void)shakeReport;
-(void)dealloc;
-(id)initWithDelegate:(id)delegate;
-(void)onRetrieveLocationError:(int)error;
-(void)onRetrieveLocationTimeOut:(id)anOut;
-(void)onRetrieveLocationOK:(id)ok;
-(void)processGetResponse;
-(void)processReportResponse;
-(void)doShakeGet;
-(void)createShakeGetEvent;
-(void)createShakeReportEvent;
-(BOOL)isInEventIDsToListen:(int)listen;
-(void)removeFromEventIDsToListen:(int)listen;
-(void)addToEventIDsToListen:(int)listen;
-(BOOL)isShakeStarted;
@end

