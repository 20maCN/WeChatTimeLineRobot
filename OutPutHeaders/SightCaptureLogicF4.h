/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "SightMovieWriterDelegate.h"
#import "WeChat-Structs.h"
#import "SightCaptureLogic.h"
#import "MMObject.h"
#import "MMovieCompressorDelegate.h"

@class NSMutableArray, NSString, NSMutableDictionary, NSObject, SightCameraCapture;
@protocol SightCaptureDelegate, OS_dispatch_queue;

@interface SightCaptureLogicF4 : MMObject <SightMovieWriterDelegate, SightCaptureLogic, MMovieCompressorDelegate> {
	id<SightCaptureDelegate> m_delegate;
	BOOL m_shouldStart;
	BOOL m_shouldNotifyPreviewReady;
	unsigned m_currID;
	int m_zoomState;
	BOOL m_lightBoostOn;
	SightCameraCapture* m_movieCapture;
	NSMutableDictionary* m_recorderDict;
	NSMutableArray* m_compressorAry;
	NSObject<OS_dispatch_queue>* m_logicQueue;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic) SightCameraCapture* movieCapture;
-(void).cxx_destruct;
-(void)mMovieCompressor:(id)compressor onMovieCompressFinished:(id)finished thumbImg:(id)img ret:(unsigned long)ret;
-(void)onMovieWriterInvalidate:(id)invalidate;
-(void)movieWriter:(id)writer onMovieWriteFailed:(unsigned long)failed;
-(void)movieWriter:(id)writer onMovieWriteFinished:(id)finished ret:(unsigned long)ret;
-(void)stopQRCodeWatcher;
-(void)startQRCodeWatcher;
-(void)closeLightBoost;
-(void)openLightBoost;
-(BOOL)isLightBoostOn;
-(void)setZoomState:(int)state;
-(int)zoomState;
-(BOOL)isSupportZoom;
-(void)focusAtPoint:(CGPoint)point;
-(void)capturePreviewImage:(id)image withBlock:(id)block;
-(void)unregistPreviewView:(id)view;
-(id)genPreviewView:(CGRect)view;
-(BOOL)isRecording:(unsigned long)recording;
-(void)cancelAllRecorder;
-(void)cancelRecord:(unsigned long)record;
-(void)stopRecord:(unsigned long)record;
-(unsigned long)startRecordF4:(CGSize)a4 bitRate:(int)rate needCompress:(BOOL)compress;
-(unsigned long)startHighQualityRecord:(CGSize)record;
-(unsigned long)startRecord:(CGSize)record bitRate:(int)rate;
-(void)realStartRecord;
-(unsigned long)prepareRecordF4:(CGSize)a4 bitRate:(int)rate needCompress:(BOOL)compress;
-(unsigned long)prepareHighQualityRecord:(CGSize)record;
-(unsigned long)prepareRecord:(CGSize)record bitRate:(int)rate;
-(void)pauseCameraImmediately;
-(BOOL)pauseCamera;
-(void)startDeviceAudio;
-(void)startCameraWithAudio:(BOOL)audio;
-(BOOL)isCameraOn;
-(void)setDelegate:(id)delegate;
-(id)getPreset;
-(void)dealloc;
-(id)init;
@end

