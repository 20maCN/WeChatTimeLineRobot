/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WeChat-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSNumberFormatter, NSMutableData, NSData;
@protocol PBCoding;

@interface PBCoder : XXUnknownSuperclass {
	id<PBCoding> m_obj;
	BOOL m_isTopObject;
	NSData* m_inputData;
	CodedInputData* m_inputStream;
	NSNumberFormatter* m_numberFormatter;
	NSMutableData* m_outputData;
	CodedOutputData* m_outputStream;
	vector<PBEncodeItem, std::__1::allocator<PBEncodeItem> >* m_encodeItems;
	void* m_formatBuffer;
	unsigned long m_formatBufferSize;
}
+(bool)appendDictionary:(id)dictionary toData:(id)data;
+(bool)appendSet:(id)set toData:(id)data;
+(bool)appendArray:(id)array toData:(id)data;
+(bool)appendOneDictionaryValue:(id)value forKey:(id)key toData:(id)data;
+(bool)appendOneSetValue:(id)value toData:(id)data;
+(bool)appendOneArrayValue:(id)value toData:(id)data;
+(bool)appendDictionary:(id)dictionary toFile:(id)file;
+(bool)appendSet:(id)set toFile:(id)file;
+(bool)appendArray:(id)array toFile:(id)file;
+(bool)appendOneDictionaryValue:(id)value forKey:(id)key toFile:(id)file;
+(bool)appendOneSetValue:(id)value toFile:(id)file;
+(bool)appendOneArrayValue:(id)value toFile:(id)file;
+(long long)getFiLeSize:(id)size;
+(bool)appendData:(id)data toPath:(id)path;
+(id)decodeContainerOfClass:(Class)aClass withValueClass:(Class)valueClass fromData:(id)data;
+(id)decodeContainerOfClass:(Class)aClass withValueClass:(Class)valueClass fromFile:(id)file;
+(bool)decodeObject:(id)object fromData:(id)data;
+(bool)decodeObject:(id)object fromFile:(id)file;
+(id)decodeObjectOfClass:(Class)aClass fromData:(id)data;
+(id)decodeObjectOfClass:(Class)aClass fromFile:(id)file;
+(bool)encodeObject:(id)object toFile:(id)file;
+(id)encodeDataWithSizeForObject:(id)object;
+(id)encodeDataWithObject:(id)object;
+(bool)decodeObject:(id)object fromData:(id)data withProperty:(id)property andTagIndexMap:(const map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >*)map;
+(bool)encodeObject:(id)object withPropertyTable:(id)propertyTable toFile:(id)file;
+(id)encodeObject:(id)object withPropertyTable:(id)propertyTable;
-(void).cxx_destruct;
-(id)decodeOneObject:(id)object withProperty:(id)property andTagIndexMap:(const map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >*)map;
-(id)decodeOneObject:(id)object ofClass:(Class)aClass;
-(void)decodeObject:(id)object withProperty:(id)property andTagIndexMap:(const map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >*)map;
-(void)decodeOneProperty:(id)property ofObject:(id)object;
-(void)decodeOne_C_Property:(id)property ofObject:(id)object;
-(id)decodeOneDictionaryOfValueClass:(Class)valueClass ignoreSize:(bool)size;
-(id)decodeOneSetOfValueClass:(Class)valueClass ignoreSize:(bool)size;
-(id)decodeOneArrayOfValueClass:(Class)valueClass ignoreSize:(bool)size;
-(id)getEncodeDataWithPropertyTable:(id)propertyTable;
-(id)getEncodeDataWithForceWriteSize:(bool)forceWriteSize;
-(unsigned long)prepareObjectForEncode:(id)encode;
-(unsigned long)preparePBObjectForEncode:(id)encode withPropertyTable:(id)propertyTable;
-(unsigned long)prepareUnPackedContainerForEncode:(id)encode withPropertyIndex:(int)propertyIndex;
-(unsigned long)prepareBasicObjectForEncode:(id)encode;
-(unsigned long)prepareCPropertyForEndcode:(id)endcode withTarget:(id)target;
-(void)writeRootObject;
-(void)dealloc;
-(id)initForWritingWithTarget:(id)target;
-(id)initForReadingWithData:(id)data;
@end

