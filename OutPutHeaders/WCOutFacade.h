/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MonoServiceMsgLogicDelegate.h"
#import "IVOIPUILogicMgrExt.h"
#import "IMMWebViewControllerDeepLinkExt.h"
#import "MMService.h"
#import "IWCOutCallExt.h"
#import "MMService.h"
#import "IMsgExt.h"
#import "IFriendListMgrExt.h"
#import "WCOutAddressBookLogicDelegate.h"

@class PhoneNumberFormatLogic, MMTimer, WCOutCountryCodeLogic, NSString, OrderedDictionary, WCOutDataBase, NSMutableDictionary, WCOutChargeLogic, WCOutCallLogic, NSMutableArray, WCOutAddressBookLogic, NSRecursiveLock;

@interface WCOutFacade : MMService <IFriendListMgrExt, IWCOutCallExt, IMsgExt, IMMWebViewControllerDeepLinkExt, IVOIPUILogicMgrExt, WCOutAddressBookLogicDelegate, MonoServiceMsgLogicDelegate, MMService> {
	NSMutableDictionary* m_hotCountryCodeDic;
	OrderedDictionary* m_lastCallItemOrderDic;
	NSMutableArray* m_wcoutContactItemArray;
	NSMutableDictionary* m_phoneNumToWCOutContact;
	unsigned long m_lastDownloadMFriendListTime;
	unsigned long m_lastReportContactTime;
	PhoneNumberFormatLogic* _m_phoneNumberFormatLogic;
	WCOutCountryCodeLogic* _m_countryCodeLogic;
	WCOutAddressBookLogic* _m_addressBookLogic;
	WCOutDataBase* _m_dataBase;
	NSRecursiveLock* _m_oLock;
	MMTimer* _inviteTimer;
	WCOutChargeLogic* _chargeLogic;
	WCOutCallLogic* _callLogic;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) WCOutCallLogic* callLogic;
@property(retain, nonatomic) WCOutChargeLogic* chargeLogic;
@property(retain, nonatomic) MMTimer* inviteTimer;
@property(retain, nonatomic) NSRecursiveLock* m_oLock;
@property(retain, nonatomic) WCOutDataBase* m_dataBase;
@property(retain, nonatomic) WCOutAddressBookLogic* m_addressBookLogic;
@property(retain, nonatomic) WCOutCountryCodeLogic* m_countryCodeLogic;
@property(retain, nonatomic) PhoneNumberFormatLogic* m_phoneNumberFormatLogic;
+(void)reportWCOInviteFriendOp:(id)op;
+(void)reportWCOAutoVerify:(id)verify;
+(void)reportWCOPurchaseOp:(id)op;
+(void)reportWCORechargePageOp:(id)op;
+(void)reportWCOAccountPageOp:(id)op;
+(void)reportWechatOutIdKey:(unsigned)key;
+(void)reportSearchReportType:(unsigned)type;
+(void)reportClickWithType:(unsigned)type;
+(void)reportClickStatWithType:(unsigned)type;
+(void)reportCallEntraceWithType:(unsigned)type;
+(void)reportRestrictionCountryCode:(id)code;
+(void)reportTalkingClickStatWithType:(unsigned)type;
+(void)clearReddotWCOut;
+(BOOL)showReddotWCOut;
+(BOOL)isWCOSwitchOpen;
+(BOOL)showWCOut;
+(BOOL)isOpenWCOutPlugin;
-(void).cxx_destruct;
-(void)gotoChargeViewController;
-(BOOL)isChargeRecordClosed;
-(BOOL)isInviteClosed;
-(BOOL)isChargeClosed;
-(void)onVideoVoipViewDidAppear:(id)onVideoVoipView;
-(void)accessDeepLink:(id)link Url:(id)url Webview:(id)webview;
-(void)canAccessDeepLink:(id)link Url:(id)url Webview:(id)webview Ret:(BOOL*)ret NeedCheckBitset:(BOOL*)bitset;
-(void)OnGetNewXmlMsg:(id)msg Type:(id)type MsgWrap:(id)wrap;
-(void)onFriendListUpdated:(id)updated ErrorCode:(unsigned long)code Message:(id)message;
-(void)PhoneContactLoadedFail;
-(void)PhoneContactLoadedComplete;
-(void)stopInviteRegister;
-(void)didReceiveInviteGap:(int)gap;
-(void)OnCallEndFinish;
-(BOOL)canStartPSTN;
-(void)InternalCallWCoutContact:(id)contact FromViewController:(id)viewController AndEntrance:(unsigned)entrance;
-(id)createWCOutRecentCallItemByCallItem:(id)item;
-(id)createWCOutRecentCallItemByFullPhoneNum:(id)num CountryCode:(id)code FromContact:(id)contact;
-(BOOL)updateWCOutContactsInfoWithMfriendList:(id)mfriendList;
-(BOOL)loadWCOutPhoneContactsMMInfo;
-(void)updateWCOutPhoneContactsMMInfoAsync;
-(BOOL)loadWCOutPhoneContactsFromMMPhoneContacts;
-(void)loadWCOutPhoneContactAsync;
-(void)loadAllDataAsync;
-(void)loadLastCallItemsAndHotCountryCodeDic;
-(void)loadHotCountryCode;
-(void)reportContactAndRecentContactStat;
-(id)getPhoneNumFromFullPhoneNum:(id)fullPhoneNum countryCode:(id)code;
-(id)getPhoneNumFromFullPhoneNum:(id)fullPhoneNum;
-(id)getCountryCodeFromFullPhoneNum:(id)fullPhoneNum;
-(id)getPurePhoneNum:(id)num;
-(id)getFormatedForNum:(id)num;
-(id)getFormatedForNum:(id)num countryCode:(id)code;
-(id)getFormatedForFullPhoneNum:(id)fullPhoneNum countryCode:(id)code;
-(id)GetHotCountryCodeDicLog;
-(id)countryNameForISOCountryCode:(id)isocountryCode;
-(id)countryNameForCountryCode:(id)countryCode;
-(unsigned)countOfCountryCodeStartWith:(id)with;
-(BOOL)isValidCountryCode:(id)code;
-(BOOL)isRestrictedCountryCode:(id)code;
-(id)getAllCountryCodes;
-(id)defaultCoutryCode;
-(id)getHotCountryCodeList;
-(BOOL)addressBookStatusIsDenied;
-(void)deleteLastCallWithPhoneNum:(id)phoneNum WithCountryCode:(id)countryCode;
-(BOOL)deleteRecentCallByPhoneContact:(id)contact;
-(BOOL)deleteRecentCallByPhoneNum:(id)num withCountryCode:(id)countryCode;
-(BOOL)deleteRecentCallByPhoneNum:(id)num;
-(BOOL)deleteRecentCallById:(int)anId;
-(int)insertRecentCall:(id)call;
-(id)findWCOutContactByPhoneNumInput:(id)input;
-(id)findWCOutContactByPhoneNum:(id)num;
-(id)selectRecentCallForWCOutContact:(id)wcoutContact limit:(unsigned long)limit;
-(id)selectAllRecentCallForWCOutContact:(id)wcoutContact;
-(id)getLastRecentCallItems;
-(BOOL)isCalling;
-(void)playEndingSound;
-(id)GetNeedShowLog;
-(id)GetCurPhoneContact;
-(id)GetCurCallItem;
-(BOOL)pressKeyWhileCallingWithKeyCode:(int)keyCode;
-(void)setSpeaker:(BOOL)speaker;
-(void)setMute:(BOOL)mute;
-(void)hangUpCall;
-(void)callWCOutCallItem:(id)item FromViewController:(id)viewController AndEntrance:(unsigned)entrance;
-(void)callPhoneNumber:(id)number WithCountryCode:(id)countryCode FromViewController:(id)viewController AndEntrance:(unsigned)entrance;
-(void)callFullPhoneNumber:(id)number OfContact:(id)contact FromViewController:(id)viewController AndEntrace:(unsigned)entrace;
-(BOOL)loadAllData;
-(void)onServiceInit;
-(void)dealloc;
-(BOOL)isMonoServiceCheckingServer;
-(BOOL)isMonoServiceUIWorking;
-(BOOL)isMonoServiceUIExist;
@end

