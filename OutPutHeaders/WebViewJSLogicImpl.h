/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MMObject.h"
#import "JSEventHandler.h"
#import "WebviewJSEventHandlerBaseDelegate.h"

@class NSMutableArray, WebviewJSEventHandlerFacade, NSString, NSMutableDictionary, UIWebView;
@protocol WebViewJSLogicDelegate;

@interface WebViewJSLogicImpl : MMObject <JSEventHandler, WebviewJSEventHandlerBaseDelegate> {
	NSMutableDictionary* _jsCallbackHooks;
	NSMutableDictionary* _jsUrlHooks;
	NSMutableArray* _jsEvents;
	WebviewJSEventHandlerFacade* _jsEventHandlerFacade;
	UIWebView* _webView;
	id<WebViewJSLogicDelegate> _delegate;
	NSString* _curRandomUUID;
	NSString* _curContextUUID;
	BOOL _isUseMd5ForJSAPI;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) UIWebView* webView;
@property(assign, nonatomic) __weak id<WebViewJSLogicDelegate> delegate;
-(void).cxx_destruct;
-(void)reportIDKeyForJsApiCall:(id)jsApiCall;
-(void)reportIDKeyForInjectJS;
-(id)sha1:(id)a1;
-(id)sendEventToJSBridge:(id)jsbridge params:(id)params;
-(id)sendMessageToJSBridge:(id)jsbridge;
-(void)injectPluginJS;
-(void)injectWeixinJSBridge;
-(void)sendGetA8KeyUrlEvent:(id)event;
-(void)markPageWebCached;
-(BOOL)tryInjectWeixinJSBridge:(id)bridge;
-(BOOL)isJSBridgeLoaded;
-(id)isExistJSApis:(id)apis;
-(id)webviewController;
-(id)GetCurrentWebviewViewController;
-(void)jsHandlerHandle:(id)handle;
-(id)onEndEvent:(id)event withResult:(id)result;
-(void)setJSAPIFunctionMap:(id)map;
-(id)funcDefByName:(id)name;
-(void)webviewWillAnimateRotationToInterfaceOrientation:(int)webview duration:(double)duration;
-(id)extraDataForNextJSEventCalled:(id)nextJSEventCalled;
-(void)recoverJSAPIEventDelegateWithBackup;
-(void)cleanJSAPIDelegate;
-(void)handleJSApiDispatchMessage:(id)message;
-(void)functionCall:(id)call withParams:(id)params withCallbackID:(id)callbackID;
-(id)jsEventWithFunction:(id)function params:(id)params callBackID:(id)anId;
-(void)dealloc;
-(id)init;
@end

