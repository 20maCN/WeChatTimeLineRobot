/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WeChat-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "UIWebViewDelegate.h"

@class UIWebView, NSBundle, NSMutableArray, NSString, NSMutableDictionary;
@protocol WebViewJavascriptBridgeDelegate;

@interface WebViewJavascriptBridge : XXUnknownSuperclass <UIWebViewDelegate> {
	UIWebView* _webView;
	id _webViewDelegate;
	NSMutableArray* _startupMessageQueue;
	NSMutableDictionary* _responseCallbacks;
	NSMutableDictionary* _messageHandlers;
	long _uniqueId;
	id _messageHandler;
	NSBundle* _resourceBundle;
	unsigned _numRequestsLoading;
	id<WebViewJavascriptBridgeDelegate> _delegate;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) __weak id<WebViewJavascriptBridgeDelegate> delegate;
+(id)bridgeForWebView:(id)webView webViewDelegate:(id)delegate handler:(id)handler resourceBundle:(id)bundle;
+(id)bridgeForWebView:(id)webView webViewDelegate:(id)delegate handler:(id)handler;
+(id)bridgeForWebView:(id)webView handler:(id)handler;
+(void)enableLogging;
-(void).cxx_destruct;
-(void)webViewDidStartLoad:(id)webView;
-(BOOL)webView:(id)view shouldStartLoadWithRequest:(id)request navigationType:(int)type;
-(void)webView:(id)view didFailLoadWithError:(id)error;
-(void)webViewDidFinishLoad:(id)webView;
-(void)_platformSpecificDealloc;
-(void)_platformSpecificSetup:(id)setup webViewDelegate:(id)delegate handler:(id)handler resourceBundle:(id)bundle;
-(void)_log:(id)log json:(id)json;
-(id)_deserializeMessageJSON:(id)json;
-(id)_serializeMessage:(id)message;
-(void)_flushMessageQueue;
-(void)_dispatchMessage:(NSDictionary*)message;
-(void)_queueMessage:(NSDictionary*)message;
-(id)_synDispatchMessage:(NSDictionary*)message;
-(id)_syncSendData:(id)data handlerName:(id)name;
-(void)_sendData:(id)data responseCallback:(id)callback handlerName:(id)name;
-(void)dealloc;
-(id)init;
-(void)registerHandler:(id)handler handler:(id)handler2;
-(void)callHandler:(id)handler data:(id)data responseCallback:(id)callback;
-(void)callHandler:(id)handler data:(id)data;
-(void)callHandler:(id)handler;
-(id)syncSend:(id)send handlerName:(id)name;
-(void)send:(id)send responseCallback:(id)callback;
-(void)send:(id)send;
@end

