/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MMResDownloadMgrDelegate.h"
#import "MMResBatchDownloadMgrDelegate.h"
#import "MMResBatchDownloadMgr.h"
#import "WeChat-Structs.h"
#import "MMService.h"
#import "MMService.h"
#import "PBMessageObserverDelegate.h"
#import "CNetworkStatusExt.h"
#import "MMResInfoMgr.h"
#import "IMsgExt.h"
#import "MMResourceDownloadMgr.h"

@class MMResBatchDownloadMgr, NSString, MMResourceDownloadMgr, MMResInfoMgr;

@interface MMResourceService : MMService <MMResDownloadMgrDelegate, MMResBatchDownloadMgrDelegate, IMsgExt, CNetworkStatusExt, MMService, MMResInfoMgr, MMResourceDownloadMgr, MMResBatchDownloadMgr, PBMessageObserverDelegate> {
	MMResInfoMgr* _resInfoMgr;
	MMResourceDownloadMgr* _resDownloadMgr;
	MMResBatchDownloadMgr* _batchResDownloadMgr;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
-(void).cxx_destruct;
-(void)MessageReturn:(id)aReturn Event:(unsigned long)event;
-(void)ForceUpdateErrorHandler:(id)handler ErrorType:(int)type;
-(void)ForceUpdateErrorHandler:(id)handler;
-(BOOL)isForceUpdateMessageReturn:(id)aReturn;
-(void)addBatchDownloadTask:(id)task;
-(void)cancelDownload:(id)download;
-(void)addDownloadTask:(id)task;
-(id)DBContext;
-(id)getResInfo:(unsigned long)info WithSubRestype:(unsigned long)subRestype;
-(id)getResInfo:(unsigned long)info;
-(BOOL)insertNewResInfo:(id)info;
-(void)onDownloadTaskEnd:(int)end downloadData:(id)data task:(id)task;
-(void)handleDownloadTask:(id)task downloadData:(id)data;
-(void)OnResUpdateFinishOnMainThread:(int)thread resType:(unsigned long)type subResType:(unsigned long)type3;
-(void)OnGetNewXmlMsg:(id)msg Type:(id)type MsgWrap:(id)wrap;
-(void)ReachabilityChange:(unsigned long)change;
-(id)parseCacheNode:(XmlReaderNode_t*)node;
-(id)parseDecryptNode:(XmlReaderNode_t*)node;
-(id)parseDeleteNode:(XmlReaderNode_t*)node;
-(const char*)readChildText:(const char*)text inNode:(XmlReaderNode_t*)node;
-(void)processResDeleteRequest:(id)request Scene:(int)scene;
-(void)processResDecryptRequest:(id)request Scene:(int)scene;
-(BOOL)isNeedToDownloadNonWebRes:(id)downloadNonWebRes;
-(void)createDownloadTask:(id)task;
-(void)processResCacheRequest:(id)request Scene:(int)scene;
-(void)parseNewXml:(id)xml;
-(void)reloadDownloadTask;
-(void)checkTestResUpdate:(unsigned long)update WithSubType:(unsigned long)subType;
-(void)forceUpdateRes:(unsigned long)res WithSubtype:(unsigned long)subtype ForceWithoutLogin:(BOOL)login;
-(void)forceUpdateRes:(unsigned long)res WithSubtype:(unsigned long)subtype;
-(void)checkResUpdate:(unsigned long)update;
-(void)checkAllTestResUpdate;
-(void)checkAllResUpdate;
-(void)getCheckResUpdateRequest:(id)request;
-(id)getResData:(unsigned long)data WithSubRestype:(unsigned long)subRestype ErrorCode:(int*)code;
-(id)getResPath:(unsigned long)path WithSubRestype:(unsigned long)subRestype;
-(id)getTestList;
-(void)clearABTestData:(unsigned long)data WithSubRestype:(unsigned long)subRestype;
-(void)dealloc;
-(void)checkAndReloadDownloadTask;
-(void)deleteAESKeyInKeyChain:(unsigned long)keyChain WithSubtype:(unsigned long)subtype WithKeyVersion:(unsigned long)keyVersion WithEID:(unsigned long)eid;
-(void)saveAESKeyInKeyChain:(id)keyChain WithResType:(unsigned long)resType WithSubtype:(unsigned long)subtype WithKeyVersion:(unsigned long)keyVersion WithEID:(unsigned long)eid;
-(id)getAESKeyInKeyChain:(unsigned long)keyChain WithSubtype:(unsigned long)subtype WithKeyVersion:(unsigned long)keyVersion WithEID:(unsigned long)eid;
-(void)onServiceClearData;
-(void)onServiceReloadData;
-(void)onServiceInit;
-(BOOL)isRequestInNonAuth;
-(id)init;
@end

