/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

typedef struct _NSZone NSZone;

template<>
struct __tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>;

template<>
struct __tree_node_base<void *>;

template<>
struct __tree_end_node<std::__1::__tree_node_base<void *> *> {
	__tree_node_base<void* >* __left_;
};

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > > {
	__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> > __pair3_;
};

template<>
struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > {
	__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > > __tree_;
};

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct _NSRange {
	unsigned location;
	unsigned length;
} NSRange;

template<>
struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> _field1;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> > {
	unsigned long _field1;
};

template<>
struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > > {
	__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void* >* _field1;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > > _field2;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> > _field3;
};

template<>
struct map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > > {
	__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > > _field1;
};

typedef struct __long {
	unsigned __cap_;
	unsigned __size_;
	char* __data_;
} long;

typedef struct __short {
	union {
		unsigned char __size_;
		BOOL __lx;
	};
	BOOL __data_[11];
} short;

typedef struct __raw {
	unsigned long __words[3];
} raw;

typedef struct __rep {
	union {
		long __l;
		short __s;
		raw __r;
	};
} rep;

template<>
struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > {
	rep __first_;
};

template<>
struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {
	__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > __r_;
};

template<>
struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >;

typedef struct WCDBIndexHelper {
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field1;
	vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >* _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
	bool _field5;
	bool _field6;
	bool _field7;
} WCDBIndexHelper;

typedef struct GifExtInfo {
	int _field1;
	int _field2;
	int _field3;
} GifExtInfo;

typedef struct {
	double x;
	double y;
} XXStruct_gLbvpC;

typedef struct {
	XXStruct_gLbvpC origin;
	XXStruct_gLbvpC size;
} XXStruct_Yvvv9D;

typedef struct {
	unsigned long _field1;
	id* _field2;
	unsigned long* _field3;
	unsigned long _field4[5];
} XXStruct_kFm5bA;

typedef struct UIEdgeInsets {
	float top;
	float left;
	float bottom;
	float right;
} UIEdgeInsets;

typedef struct opaqueCMSampleBuffer opaqueCMSampleBuffer;

typedef struct QBAR_POINT* QBAR_POINTRef;

template<>
struct __compressed_pair<QBAR_POINT *, std::__1::allocator<QBAR_POINT> > {
	QBAR_POINTRef _field1;
};

template<>
struct vector<QBAR_POINT, std::__1::allocator<QBAR_POINT> > {
	QBAR_POINTRef _field1;
	QBAR_POINTRef _field2;
	__compressed_pair<QBAR_POINT *, std::__1::allocator<QBAR_POINT> > _field3;
};

typedef struct XmlReaderAttr_t XmlReaderAttr_t;
typedef struct XmlReaderNode_t {
	int _field1;
	char* _field2;
	XmlReaderNode_t* _field3;
	XmlReaderNode_t* _field4;
	XmlReaderNode_t* _field5;
	XmlReaderNode_t** _field6;
	XmlReaderAttr_t* _field7;
	XmlReaderAttr_t** _field8;
	int _field9;
} XmlReaderNode_t;

struct XmlReaderAttr_t XmlReaderAttr_t;

typedef struct AutoBuffer {
	char* _field1;
	long long _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
} AutoBuffer;

template<>
struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > {
	unsigned long* __first_;
};

template<>
struct vector<unsigned long, std::__1::allocator<unsigned long> > {
	unsigned long* __begin_;
	unsigned long* __end_;
	__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > __end_cap_;
};

typedef struct {
	int _field1;
	int _field2;
	id _field3;
	id _field4;
	id _field5;
	id _field6;
	id _field7;
} XXStruct_R2OYDB;

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

typedef struct in_addr {
	unsigned _field1;
} in_addr;

typedef struct sockaddr_in {
	unsigned char _field1;
	unsigned char _field2;
	unsigned short _field3;
	in_addr _field4;
	BOOL _field5[8];
} sockaddr_in;

template<>
struct WCDBCondition<unsigned long> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

typedef struct WCDBConditionBase {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
} WCDBConditionBase;

typedef struct {
	long long value;
	int timescale;
	unsigned flags;
	long long epoch;
} XXStruct_pwHToB;

template<>
struct WCDBCondition<NSString *> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

typedef struct objc_property objc_property;

typedef struct INetCmdSendOnly {
	/*function-pointer*/ void** _field1;
} INetCmdSendOnly;

typedef struct INetCmdBase {
	/*function-pointer*/ void** _field1;
} INetCmdBase;

typedef struct CGAffineTransform {
	float a;
	float b;
	float c;
	float d;
	float tx;
	float ty;
} CGAffineTransform;

template<>
struct WCDBCondition<signed char> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

typedef struct __SecRandom SecRandom;

typedef struct FBSDKAccessTokenCacheV4 {
	Class _field1;
} FBSDKAccessTokenCacheV4;

typedef struct _POPAnimationState {
	/*function-pointer*/ void** _field1;
	id _field2;
	int _field3;
	id _field4;
	unsigned _field5;
	double _field6;
	double _field7;
	double _field8;
	id _field9;
	id _field10;
	/*function-pointer*/ void _field11;
	id _field12;
	/*function-pointer*/ void _field13;
	id _field14;
	/*function-pointer*/ void _field15;
	id _field16;
	/*function-pointer*/ void _field17;
	id _field18;
	id _field19;
	float _field20;
	int _field21;
	unsigned _field22 : 1;
	unsigned _field23 : 1;
	unsigned _field24 : 1;
	unsigned _field25 : 1;
	unsigned _field26 : 1;
	unsigned _field27 : 1;
	unsigned _field28 : 1;
	unsigned _field29 : 1;
	unsigned _field30 : 1;
	unsigned _field31 : 1;
	unsigned _field32 : 1;
	unsigned _field33 : 1;
	unsigned _field34 : 1;
	unsigned _field35 : 1;
	unsigned _field36 : 1;
} POPAnimationState;

template<>
struct Vector4<double> {
	double _field1;
	double _field2;
	double _field3;
	double _field4;
};

template<>
struct SSState<POP::Vector4<double> > {
	Vector4<double> _field1;
	Vector4<double> _field2;
};

template<>
struct SpringSolver<POP::Vector4<double> > {
	double _field1;
	double _field2;
	double _field3;
	double _field4;
	double _field5;
	double _field6;
	double _field7;
	SSState<POP::Vector4<double> > _field8;
	Vector4<double> _field9;
	bool _field10;
};

typedef struct {
	id _field1;
	id _field2;
	/*function-pointer*/ void _field3;
	id _field4;
	/*function-pointer*/ void _field5;
	float _field6;
} XXStruct_ETTcDD;

template<>
struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>;

template<>
struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
	__list_node<std::__1::shared_ptr<POPAnimatorItem>, void* >* __prev_;
	__list_node<std::__1::shared_ptr<POPAnimatorItem>, void* >* __next_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> > > {
	unsigned long __first_;
};

template<>
struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem> > > {
	__list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
	__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> > > __size_alloc_;
};

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct __CFRunLoopObserver* CFRunLoopObserverRef;

typedef struct POPAnimatorItem* POPAnimatorItemRef;

typedef struct __shared_weak_count shared_weak_count;

template<>
struct shared_ptr<POPAnimatorItem> {
	POPAnimatorItemRef _field1;
	shared_weak_count* _field2;
};

typedef struct timeval {
	int tv_sec;
	int tv_usec;
} timeval;

typedef struct CGContext* CGContextRef;

typedef struct _opaque_pthread_rwlock_t {
	long __sig;
	BOOL __opaque[124];
} opaque_pthread_rwlock_t;

typedef struct CGPath* CGPathRef;

typedef struct SpeexBits {
	char* chars;
	int nbBits;
	int charPtr;
	int bitPtr;
	int owner;
	int overflow;
	int buf_size;
	int reserved1;
	void* reserved2;
} SpeexBits;

typedef struct PCMFifoBuffer* PCMFifoBufferRef;

typedef struct _TRSpeexEncodeContex {
	void* st;
	SpeexBits bits;
	int frame_size;
	PCMFifoBufferRef pFifo;
} TRSpeexEncodeContex;

typedef struct _TRSpeexDecodeContex {
	void* st;
	SpeexBits bits;
	int frame_size;
	PCMFifoBufferRef pFifo;
} TRSpeexDecodeContex;

template<>
struct __compressed_pair<__unsafe_unretained id *, std::__1::allocator<__unsafe_unretained id> > {
	id* __first_;
};

template<>
struct vector<__unsafe_unretained id, std::__1::allocator<__unsafe_unretained id> > {
	id* __begin_;
	id* __end_;
	__compressed_pair<__unsafe_unretained id *, std::__1::allocator<__unsafe_unretained id> > __end_cap_;
};

typedef struct __CFString* CFStringRef;

typedef struct uregex uregex;

typedef struct objc_method_description {
	SEL _field1;
	char* _field2;
} objc_method_description;

typedef struct CFastStr {
	char* _field1;
	unsigned _field2;
	unsigned _field3;
	unsigned _field4;
} CFastStr;

template<>
struct __tree_node<std::__1::__value_type<unsigned int, MMDelegateProxy *>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, MMDelegateProxy *>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> _field1;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MMDelegateProxy *>, std::__1::less<unsigned int>, true> > {
	unsigned long _field1;
};

template<>
struct __tree<std::__1::__value_type<unsigned int, MMDelegateProxy *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MMDelegateProxy *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, MMDelegateProxy *> > > {
	__tree_node<std::__1::__value_type<unsigned int, MMDelegateProxy* >, void* >* _field1;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, MMDelegateProxy *>, void *> > > _field2;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MMDelegateProxy *>, std::__1::less<unsigned int>, true> > _field3;
};

template<>
struct map<unsigned int, MMDelegateProxy *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, MMDelegateProxy *> > > {
	__tree<std::__1::__value_type<unsigned int, MMDelegateProxy *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MMDelegateProxy *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, MMDelegateProxy *> > > _field1;
};

template<>
struct __tree_node<std::__1::__value_type<unsigned int, MMDicDelegates *>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, MMDicDelegates *>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MMDicDelegates *>, std::__1::less<unsigned int>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<unsigned int, MMDicDelegates *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MMDicDelegates *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, MMDicDelegates *> > > {
	__tree_node<std::__1::__value_type<unsigned int, MMDicDelegates* >, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, MMDicDelegates *>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MMDicDelegates *>, std::__1::less<unsigned int>, true> > __pair3_;
};

template<>
struct map<unsigned int, MMDicDelegates *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, MMDicDelegates *> > > {
	__tree<std::__1::__value_type<unsigned int, MMDicDelegates *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MMDicDelegates *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, MMDicDelegates *> > > __tree_;
};

template<>
struct __tree_node<std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *>, std::__1::less<unsigned int>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *> > > {
	__tree_node<std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> >* >, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *>, std::__1::less<unsigned int>, true> > __pair3_;
};

template<>
struct map<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *> > > {
	__tree<std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > *> > > __tree_;
};

typedef struct CodedOutputData {
	char* _field1;
	unsigned _field2;
	int _field3;
} CodedOutputData;

typedef struct sqlite3 sqlite3;

typedef struct sqlite3_stmt sqlite3_stmt;

template<>
struct __compressed_pair<WCDBConditionBase *, std::__1::allocator<WCDBConditionBase> > {
	WCDBConditionBase* __first_;
};

template<>
struct vector<WCDBConditionBase, std::__1::allocator<WCDBConditionBase> > {
	WCDBConditionBase* __begin_;
	WCDBConditionBase* __end_;
	__compressed_pair<WCDBConditionBase *, std::__1::allocator<WCDBConditionBase> > __end_cap_;
};

typedef struct PBClassInfo {
	unsigned _field1;
	char** _field2;
	unsigned* _field3;
	unsigned* _field4;
	map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >* _field5;
} PBClassInfo;

typedef struct CodedInputData {
	char* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
	int _field6;
	int _field7;
	int _field8;
	int _field9;
} CodedInputData;

template<>
struct __compressed_pair<objc_method_description *, std::__1::allocator<objc_method_description> > {
	objc_method_description* _field1;
};

template<>
struct vector<objc_method_description, std::__1::allocator<objc_method_description> > {
	objc_method_description* _field1;
	objc_method_description* _field2;
	__compressed_pair<objc_method_description *, std::__1::allocator<objc_method_description> > _field3;
};

typedef struct GifDecoder GifDecoder;

typedef struct _MxImage MxImage;

typedef struct GifFrameRect {
	int _field1;
	int _field2;
	int _field3;
	int _field4;
} GifFrameRect;

template<>
struct __compressed_pair<GifExtInfo *, std::__1::allocator<GifExtInfo> > {
	GifExtInfo* _field1;
};

template<>
struct vector<GifExtInfo, std::__1::allocator<GifExtInfo> > {
	GifExtInfo* _field1;
	GifExtInfo* _field2;
	__compressed_pair<GifExtInfo *, std::__1::allocator<GifExtInfo> > _field3;
};

typedef struct MxGifImage {
	GifDecoder* _field1;
	int _field2;
	MxImage* _field3;
	MxImage* _field4;
	int _field5;
	GifExtInfo _field6;
	int _field7;
	GifFrameRect _field8;
	unsigned long _field9;
	int _field10;
	vector<GifExtInfo, std::__1::allocator<GifExtInfo> > _field11;
	bool _field12;
} MxGifImage;

typedef struct PBEncodeItem* PBEncodeItemRef;

template<>
struct __compressed_pair<PBEncodeItem *, std::__1::allocator<PBEncodeItem> > {
	PBEncodeItemRef _field1;
};

template<>
struct vector<PBEncodeItem, std::__1::allocator<PBEncodeItem> > {
	PBEncodeItemRef _field1;
	PBEncodeItemRef _field2;
	__compressed_pair<PBEncodeItem *, std::__1::allocator<PBEncodeItem> > _field3;
};

typedef struct _Plcrash__CrashReport__MachineInfo Plcrash__CrashReport__MachineInfo;
typedef struct _Plcrash__CrashReport__ReportInfo Plcrash__CrashReport__ReportInfo;
typedef struct _Plcrash__CrashReport__BinaryImage Plcrash__CrashReport__BinaryImage;
typedef struct _Plcrash__CrashReport__Exception Plcrash__CrashReport__Exception;
typedef struct _Plcrash__CrashReport__SystemInfo Plcrash__CrashReport__SystemInfo;
typedef struct _Plcrash__CrashReport__Signal Plcrash__CrashReport__Signal;
typedef struct _Plcrash__CrashReport__ApplicationInfo Plcrash__CrashReport__ApplicationInfo;
typedef struct _Plcrash__CrashReport__ProcessInfo Plcrash__CrashReport__ProcessInfo;
typedef struct _Plcrash__CrashReport__Thread Plcrash__CrashReport__Thread;
typedef struct _Plcrash__CrashReport {
	ProtobufCMessage _field1;
	Plcrash__CrashReport__SystemInfo* _field2;
	Plcrash__CrashReport__ApplicationInfo* _field3;
	unsigned _field4;
	Plcrash__CrashReport__Thread** _field5;
	unsigned _field6;
	Plcrash__CrashReport__BinaryImage** _field7;
	Plcrash__CrashReport__Exception* _field8;
	Plcrash__CrashReport__Signal* _field9;
	Plcrash__CrashReport__ProcessInfo* _field10;
	Plcrash__CrashReport__MachineInfo* _field11;
	Plcrash__CrashReport__ReportInfo* _field12;
} Plcrash__CrashReport;

typedef struct _PLCrashReportDecoder {
	Plcrash__CrashReport* _field1;
} PLCrashReportDecoder;

typedef struct __CFUUID* CFUUIDRef;

typedef struct _ProtobufCMessageDescriptor ProtobufCMessageDescriptor;

typedef struct _ProtobufCMessageUnknownField ProtobufCMessageUnknownField;

typedef struct _ProtobufCMessage {
	ProtobufCMessageDescriptor* _field1;
	unsigned _field2;
	ProtobufCMessageUnknownField* _field3;
} ProtobufCMessage;

struct _Plcrash__CrashReport__SystemInfo {
	ProtobufCMessage _field1;
	int _field2;
	int _field3;
	char* _field4;
	int _field5;
	long long _field6;
	char* _field7;
};

struct _Plcrash__CrashReport__ApplicationInfo {
	ProtobufCMessage _field1;
	char* _field2;
	char* _field3;
};

struct _Plcrash__CrashReport__Thread Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__BinaryImage Plcrash__CrashReport__BinaryImage;

typedef struct _Plcrash__CrashReport__Thread__StackFrame Plcrash__CrashReport__Thread__StackFrame;
struct _Plcrash__CrashReport__Exception {
	ProtobufCMessage _field1;
	char* _field2;
	char* _field3;
	unsigned _field4;
	Plcrash__CrashReport__Thread__StackFrame** _field5;
};

typedef struct _Plcrash__CrashReport__Signal__MachException Plcrash__CrashReport__Signal__MachException;
struct _Plcrash__CrashReport__Signal {
	ProtobufCMessage _field1;
	char* _field2;
	char* _field3;
	unsigned long long _field4;
	Plcrash__CrashReport__Signal__MachException* _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
	ProtobufCMessage _field1;
	char* _field2;
	unsigned _field3;
	char* _field4;
	char* _field5;
	unsigned _field6;
	int _field7;
	int _field8;
	unsigned long long _field9;
};

typedef struct _Plcrash__CrashReport__Processor Plcrash__CrashReport__Processor;
struct _Plcrash__CrashReport__MachineInfo {
	ProtobufCMessage _field1;
	char* _field2;
	Plcrash__CrashReport__Processor* _field3;
	unsigned _field4;
	unsigned _field5;
};

struct _Plcrash__CrashReport__ReportInfo Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Processor {
	ProtobufCMessage _field1;
	int _field2;
	int _field3;
	unsigned long long _field4;
	unsigned long long _field5;
};

typedef struct _Plcrash__CrashReport__Symbol {
	ProtobufCMessage _field1;
	char* _field2;
	unsigned long long _field3;
	int _field4;
	unsigned long long _field5;
} Plcrash__CrashReport__Symbol;

struct _Plcrash__CrashReport__Thread__StackFrame {
	ProtobufCMessage _field1;
	unsigned long long _field2;
	Plcrash__CrashReport__Symbol* _field3;
};

struct _Plcrash__CrashReport__Signal__MachException {
	ProtobufCMessage _field1;
	unsigned long long _field2;
	unsigned _field3;
	unsigned long long* _field4;
};

typedef struct plcrash_mach_exception_port_set {
	unsigned count;
	unsigned masks[14];
	unsigned ports[14];
	int behaviors[14];
	int flavors[14];
} plcrash_mach_exception_port_set;

typedef struct PLCrashHostInfoVersion {
	unsigned major;
	unsigned minor;
	unsigned revision;
} PLCrashHostInfoVersion;

typedef struct _opaque_pthread_mutex_t {
	long __sig;
	BOOL __opaque[40];
} opaque_pthread_mutex_t;

typedef struct _opaque_pthread_cond_t {
	long __sig;
	BOOL __opaque[24];
} opaque_pthread_cond_t;

typedef struct plcrash_exception_server_context {
	unsigned _field1;
	unsigned _field2;
	unsigned _field3;
	unsigned _field4;
	/*function-pointer*/ void* _field5;
	void* _field6;
	opaque_pthread_mutex_t _field7;
	opaque_pthread_cond_t _field8;
	unsigned _field9;
	bool _field10;
} plcrash_exception_server_context;

typedef struct __darwin_sigaltstack {
	void* ss_sp;
	unsigned ss_size;
	int ss_flags;
} darwin_sigaltstack;

typedef struct PLCrashReporterCallbacks {
	unsigned short _field1;
	void* _field2;
	/*function-pointer*/ void* _field3;
} PLCrashReporterCallbacks;

template<>
struct WCDBCondition<long> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

typedef struct _MmBp__AuthRequest MmBp__AuthRequest;

template<>
struct WCDBCondition<unsigned long long> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

template<>
struct WCDBCondition<EnterpriseRoomData *> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

typedef struct _MmBp__BaseRequest MmBp__BaseRequest;

typedef struct _ProtobufCBinaryData {
	unsigned _field1;
	char* _field2;
} ProtobufCBinaryData;

typedef struct _MmBp__InitRequest {
	ProtobufCMessage _field1;
	MmBp__BaseRequest* _field2;
	int _field3;
	ProtobufCBinaryData _field4;
	int _field5;
	ProtobufCBinaryData _field6;
} MmBp__InitRequest;

template<>
struct __tree_node<std::__1::__value_type<unsigned long, unsigned int>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned int>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned int>, std::__1::less<unsigned long>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<unsigned long, unsigned int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned int> > > {
	__tree_node<std::__1::__value_type<unsigned long, unsigned int>, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned int>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned int>, std::__1::less<unsigned long>, true> > __pair3_;
};

template<>
struct map<unsigned long, unsigned int, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int> > > {
	__tree<std::__1::__value_type<unsigned long, unsigned int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned int> > > __tree_;
};

typedef struct _MmBp__SendDataRequest MmBp__SendDataRequest;

typedef struct AccessoryCmd {
	unsigned short _field1;
	unsigned short _field2;
	long long _field3;
	AutoBuffer _field4;
	AutoBuffer _field5;
} AccessoryCmd;

template<>
struct WCDBCondition<long long> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

template<>
struct __tree_node<std::__1::__value_type<int, WCCardChooseViewSectionType>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, WCCardChooseViewSectionType>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, WCCardChooseViewSectionType>, std::__1::less<int>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<int, WCCardChooseViewSectionType>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WCCardChooseViewSectionType>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WCCardChooseViewSectionType> > > {
	__tree_node<std::__1::__value_type<int, WCCardChooseViewSectionType>, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, WCCardChooseViewSectionType>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, WCCardChooseViewSectionType>, std::__1::less<int>, true> > __pair3_;
};

template<>
struct map<int, WCCardChooseViewSectionType, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, WCCardChooseViewSectionType> > > {
	__tree<std::__1::__value_type<int, WCCardChooseViewSectionType>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WCCardChooseViewSectionType>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WCCardChooseViewSectionType> > > __tree_;
};

typedef struct CGColor* CGColorRef;

template<>
struct __tree_node<std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, std::__1::less<int>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WCProductBuyDetailViewSectionType> > > {
	__tree_node<std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, std::__1::less<int>, true> > __pair3_;
};

template<>
struct map<int, WCProductBuyDetailViewSectionType, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, WCProductBuyDetailViewSectionType> > > {
	__tree<std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WCProductBuyDetailViewSectionType>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WCProductBuyDetailViewSectionType> > > __tree_;
};

template<>
struct WCDBCondition<double> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

template<>
struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char> > {
	char* __first_;
};

template<>
struct vector<unsigned char, std::__1::allocator<unsigned char> > {
	char* __begin_;
	char* __end_;
	__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> > __end_cap_;
};

typedef struct QBAR_IMAGE {
	int _field1;
	int _field2;
	vector<unsigned char, std::__1::allocator<unsigned char> > _field3;
} QBAR_IMAGE;

typedef struct STIDKeyInfo* STIDKeyInfoRef;

template<>
struct __compressed_pair<STIDKeyInfo *, std::__1::allocator<STIDKeyInfo> > {
	STIDKeyInfoRef __first_;
};

template<>
struct vector<STIDKeyInfo, std::__1::allocator<STIDKeyInfo> > {
	STIDKeyInfoRef __begin_;
	STIDKeyInfoRef __end_;
	__compressed_pair<STIDKeyInfo *, std::__1::allocator<STIDKeyInfo> > __end_cap_;
};

typedef struct MyRect {
	int _field1;
	int _field2;
	int _field3;
	int _field4;
} MyRect;

typedef struct MyImage {
	int _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
	MyRect _field6;
	int _field7;
	char* _field8;
	bool _field9;
} MyImage;

template<>
struct __tree_node<std::__1::__value_type<int, TimeLineSectionType>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, TimeLineSectionType>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, TimeLineSectionType>, std::__1::less<int>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<int, TimeLineSectionType>, std::__1::__map_value_compare<int, std::__1::__value_type<int, TimeLineSectionType>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, TimeLineSectionType> > > {
	__tree_node<std::__1::__value_type<int, TimeLineSectionType>, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, TimeLineSectionType>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, TimeLineSectionType>, std::__1::less<int>, true> > __pair3_;
};

template<>
struct map<int, TimeLineSectionType, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TimeLineSectionType> > > {
	__tree<std::__1::__value_type<int, TimeLineSectionType>, std::__1::__map_value_compare<int, std::__1::__value_type<int, TimeLineSectionType>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, TimeLineSectionType> > > __tree_;
};

template<>
struct WCDBCondition<NSData *> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

typedef struct tagSKBufferImpl tagSKBufferImpl;

typedef struct SKBuffer {
	tagSKBufferImpl* _field1;
} SKBuffer;

typedef struct CXmlReader {
	int _field1;
	XmlReaderNode_t* _field2;
	char* _field3;
	bool _field4;
	bool _field5;
} CXmlReader;

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct tagDialReport {
	unsigned long long llUin;
	unsigned long long llRoomKey;
	unsigned iRoomId;
	unsigned iRoomMemberId;
	unsigned iStopStatus;
	int iReqRet;
	int iReserve;
	int iUsedTime;
	unsigned char isCanConnect;
	unsigned char isGotPeerId;
	unsigned char isGotStrategy;
	unsigned char isConnected;
	unsigned char isCanTalk;
	unsigned char isGotCapInfo;
	unsigned char isTalked;
	unsigned char iDoubleLinkSwitchReqCnt;
	unsigned char iDoubleLinkSwitchSucToDirectCnt;
	unsigned char iDoubleLinkSwitchSucToRelayCnt;
} tagDialReport;

typedef struct tagRelayReport {
	unsigned long long _field1;
	unsigned _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
	unsigned _field8;
	unsigned long long _field9;
	unsigned _field10;
	unsigned _field11;
	unsigned _field12;
	unsigned _field13;
	unsigned _field14;
	unsigned _field15;
	unsigned _field16;
	unsigned _field17;
	unsigned _field18;
	unsigned _field19;
	unsigned _field20;
	unsigned short _field21;
	unsigned short _field22;
	unsigned short _field23;
	unsigned short _field24;
	unsigned short _field25;
	unsigned short _field26;
	unsigned short _field27;
	unsigned short _field28;
	unsigned short _field29;
	unsigned short _field30;
	unsigned short _field31;
	unsigned short _field32;
	unsigned short _field33;
	unsigned short _field34;
	unsigned short _field35;
	unsigned short _field36;
	unsigned short _field37;
	unsigned short _field38;
	unsigned short _field39;
	unsigned short _field40;
	unsigned _field41;
	unsigned char _field42;
	unsigned char _field43;
} tagRelayReport;

typedef struct tagDirectReport {
	unsigned long long _field1;
	unsigned _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
	unsigned _field8;
	unsigned _field9;
	unsigned _field10;
	unsigned _field11;
	unsigned _field12;
	unsigned _field13;
	unsigned _field14;
	unsigned _field15;
	unsigned _field16;
	unsigned _field17;
	unsigned _field18;
	unsigned short _field19;
	unsigned short _field20;
	unsigned short _field21;
	unsigned short _field22;
	unsigned short _field23;
	unsigned short _field24;
	unsigned short _field25;
	unsigned short _field26;
	unsigned short _field27;
	unsigned short _field28;
	unsigned short _field29;
	unsigned short _field30;
	unsigned short _field31;
	unsigned short _field32;
	unsigned short _field33;
	unsigned short _field34;
	unsigned short _field35;
	unsigned short _field36;
	unsigned short _field37;
	unsigned short _field38;
	unsigned short _field39;
	unsigned char _field40;
	unsigned char _field41;
	unsigned char _field42;
} tagDirectReport;

typedef struct tagAVQualityReportInfo {
	unsigned short _field1;
	unsigned short _field2;
	unsigned short _field3;
	unsigned short _field4;
	unsigned short _field5;
	unsigned short _field6;
	unsigned short _field7;
	unsigned short _field8;
	unsigned short _field9;
	unsigned short _field10;
	unsigned short _field11;
	unsigned short _field12;
	unsigned short _field13;
	unsigned short _field14;
	unsigned short _field15;
	unsigned short _field16;
	unsigned short _field17;
	unsigned short _field18;
	unsigned short _field19;
	unsigned short _field20;
	unsigned short _field21;
	unsigned short _field22;
	unsigned short _field23;
	unsigned short _field24;
	unsigned short _field25;
	unsigned short _field26;
	unsigned short _field27;
	unsigned short _field28;
	unsigned short _field29;
	unsigned short _field30;
	unsigned short _field31;
	unsigned short _field32;
	unsigned short _field33;
	unsigned short _field34;
	unsigned short _field35;
	unsigned short _field36;
	unsigned short _field37;
	unsigned short _field38;
	unsigned short _field39;
	unsigned short _field40;
	unsigned short _field41;
	unsigned short _field42;
	unsigned short _field43;
	unsigned short _field44;
	unsigned short _field45;
	unsigned short _field46;
	unsigned short _field47;
	unsigned short _field48;
	unsigned short _field49;
	unsigned short _field50;
	unsigned short _field51;
	unsigned short _field52;
	unsigned short _field53;
	unsigned short _field54;
	unsigned short _field55;
	unsigned short _field56;
	unsigned short _field57;
	unsigned short _field58;
	unsigned short _field59;
	unsigned short _field60;
	unsigned short _field61;
	unsigned short _field62;
	unsigned short _field63;
	unsigned short _field64;
	unsigned short _field65;
	unsigned short _field66;
	unsigned short _field67;
	unsigned short _field68;
	unsigned short _field69;
	unsigned short _field70;
	unsigned short _field71;
	unsigned short _field72;
	unsigned short _field73;
	unsigned short _field74;
	unsigned short _field75;
	unsigned short _field76;
	unsigned short _field77;
	unsigned short _field78;
	unsigned short _field79;
	unsigned short _field80;
	unsigned short _field81;
	unsigned char _field82;
	unsigned char _field83;
	unsigned char _field84;
	unsigned _field85;
	unsigned _field86;
	unsigned char _field87;
	unsigned char _field88;
	unsigned short _field89;
	unsigned char _field90;
	unsigned char _field91;
	unsigned char _field92;
	unsigned char _field93;
	unsigned char _field94;
	unsigned _field95;
	unsigned _field96;
	unsigned char _field97;
	unsigned char _field98;
	unsigned char _field99;
	int _field100;
	int _field101;
	int _field102;
	unsigned _field103;
	unsigned short _field104;
	unsigned short _field105;
	unsigned short _field106;
	unsigned char _field107;
	unsigned char _field108;
	unsigned _field109;
	unsigned _field110;
	unsigned _field111;
	unsigned _field112;
	unsigned _field113;
	unsigned char _field114;
	unsigned char _field115;
	unsigned short _field116;
	unsigned short _field117;
	unsigned short _field118;
	unsigned short _field119;
	unsigned short _field120;
	unsigned short _field121;
	unsigned short _field122;
	unsigned short _field123;
	unsigned short _field124;
	unsigned short _field125;
	unsigned short _field126;
	unsigned short _field127;
	unsigned short _field128;
	unsigned short _field129;
	unsigned char _field130;
	unsigned char _field131;
	unsigned char _field132;
	unsigned char _field133;
	unsigned char _field134;
	unsigned short _field135;
	unsigned short _field136;
	unsigned short _field137;
	unsigned short _field138;
	unsigned short _field139;
	unsigned short _field140;
	unsigned short _field141;
	unsigned short _field142;
	unsigned short _field143;
	unsigned short _field144;
	unsigned short _field145;
	unsigned short _field146;
	unsigned short _field147;
	unsigned short _field148;
	unsigned short _field149;
	unsigned short _field150;
	unsigned short _field151;
	unsigned short _field152;
	unsigned short _field153;
	unsigned short _field154;
	unsigned short _field155;
	unsigned short _field156;
	unsigned short _field157;
	unsigned short _field158;
	unsigned short _field159;
	unsigned short _field160;
	unsigned short _field161;
	unsigned short _field162;
	unsigned short _field163;
	unsigned short _field164;
	unsigned short _field165;
	unsigned short _field166;
	unsigned _field167;
	unsigned _field168;
	unsigned _field169;
	unsigned _field170;
	unsigned _field171;
	unsigned _field172;
	unsigned _field173;
	unsigned _field174;
	unsigned char _field175;
	unsigned char _field176;
	unsigned char _field177;
	unsigned char _field178;
	unsigned char _field179;
	int _field180;
	unsigned _field181;
	unsigned _field182;
	unsigned _field183;
	int _field184;
	unsigned short _field185;
	unsigned short _field186;
	unsigned short _field187;
	unsigned short _field188;
	unsigned short _field189;
	unsigned short _field190;
	unsigned short _field191;
	unsigned _field192;
	unsigned _field193;
	unsigned short _field194;
	unsigned short _field195;
	unsigned short _field196;
	unsigned short _field197;
	unsigned short _field198;
	unsigned short _field199;
	unsigned short _field200;
	unsigned short _field201;
	unsigned _field202;
	unsigned _field203;
	unsigned _field204;
	unsigned _field205;
	unsigned _field206;
	unsigned _field207;
	unsigned _field208;
	unsigned _field209;
	unsigned _field210;
	unsigned _field211;
	unsigned _field212;
	unsigned _field213;
	unsigned _field214;
	unsigned _field215;
	unsigned _field216;
	unsigned _field217;
	unsigned _field218;
	unsigned _field219;
	unsigned _field220;
	unsigned _field221;
	unsigned _field222;
	unsigned _field223;
	unsigned _field224;
	unsigned _field225;
	unsigned _field226;
	unsigned _field227;
	unsigned _field228;
	unsigned _field229;
	unsigned _field230;
	int _field231;
	int _field232;
	unsigned _field233;
	unsigned _field234;
	int _field235;
	int _field236;
	int _field237;
	int _field238;
	int _field239;
	int _field240;
	int _field241;
	int _field242;
	unsigned short _field243;
	unsigned short _field244;
	unsigned short _field245;
	unsigned short _field246;
	unsigned short _field247;
	unsigned char _field248;
	unsigned char _field249;
	unsigned char _field250;
	unsigned char _field251;
	int _field252;
	int _field253;
	int _field254;
	int _field255;
	int _field256;
	int _field257;
	int _field258;
	int _field259;
	int _field260;
	int _field261;
	unsigned _field262;
	unsigned _field263;
	unsigned _field264;
	unsigned _field265;
	unsigned _field266;
	unsigned _field267;
	unsigned _field268;
	unsigned _field269;
	unsigned _field270;
	unsigned short _field271;
	unsigned short _field272;
} tagAVQualityReportInfo;

typedef struct ExtReport_t {
	BOOL _field1[256];
	BOOL _field2[256];
	BOOL _field3[256];
	BOOL _field4[256];
	int _field5;
	int _field6;
	unsigned _field7;
	unsigned _field8;
	int _field9;
	int _field10;
} ExtReport_t;

typedef struct NewDialReport_t {
	unsigned _field1;
	unsigned _field2;
	unsigned long long _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
	unsigned _field8;
	unsigned _field9;
	unsigned _field10;
	unsigned _field11;
	unsigned _field12;
	unsigned _field13;
	int _field14;
	int _field15;
	int _field16;
	int _field17;
	unsigned _field18;
	unsigned _field19;
	unsigned _field20;
	unsigned _field21;
	unsigned _field22;
	BOOL _field23[256];
	BOOL _field24[256];
	BOOL _field25[256];
	BOOL _field26[256];
	unsigned _field27;
	unsigned _field28;
	unsigned long long _field29;
	unsigned long long _field30;
	unsigned long long _field31;
	int _field32;
	unsigned _field33;
	unsigned _field34;
	unsigned _field35;
} NewDialReport_t;

typedef struct AndroidReport_t {
	unsigned _field1;
	unsigned _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
	unsigned _field8;
} AndroidReport_t;

typedef struct NewAVExtReport_t {
	unsigned _field1;
	unsigned long long _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
} NewAVExtReport_t;

typedef struct RelayTcpReport {
	unsigned long long _field1;
	unsigned long long _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
	unsigned _field8;
	unsigned _field9;
	unsigned _field10;
	unsigned _field11;
	unsigned _field12;
	unsigned _field13;
	unsigned _field14;
	unsigned _field15;
	unsigned _field16;
	unsigned _field17;
	unsigned _field18;
	unsigned _field19;
	unsigned _field20;
	unsigned _field21;
	unsigned _field22;
	unsigned _field23;
	unsigned _field24;
	unsigned _field25;
	unsigned _field26;
	unsigned _field27;
	unsigned _field28;
	unsigned _field29;
	unsigned _field30;
	unsigned _field31;
	unsigned _field32;
	unsigned _field33;
	unsigned _field34;
	unsigned _field35;
	unsigned _field36;
	unsigned _field37;
	unsigned _field38;
} RelayTcpReport;

typedef struct NewRelayReport {
	unsigned _field1;
	unsigned _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
	unsigned _field8;
	unsigned _field9;
	unsigned _field10;
	unsigned _field11;
	unsigned _field12;
	unsigned _field13;
	unsigned _field14;
	unsigned _field15;
	unsigned _field16;
	unsigned _field17;
	unsigned _field18;
	unsigned _field19;
	unsigned _field20;
	unsigned _field21;
	unsigned _field22;
	unsigned _field23;
	unsigned _field24;
	unsigned _field25;
	unsigned _field26;
	unsigned _field27;
	unsigned _field28;
	unsigned _field29;
	unsigned _field30;
	unsigned _field31;
	unsigned _field32;
	unsigned _field33;
	unsigned _field34;
	unsigned _field35;
	unsigned _field36;
	unsigned _field37;
	unsigned _field38;
	unsigned _field39;
	unsigned _field40;
	unsigned _field41;
	unsigned _field42;
	unsigned _field43;
	unsigned _field44;
	unsigned _field45;
	unsigned _field46;
	unsigned _field47;
	unsigned _field48;
	unsigned _field49;
	unsigned _field50;
	unsigned _field51;
	unsigned _field52;
	unsigned _field53;
} NewRelayReport;

typedef struct NewDirectReport {
	unsigned _field1;
	unsigned _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
	unsigned _field8;
	unsigned _field9;
	unsigned _field10;
	unsigned _field11;
	unsigned _field12;
	unsigned _field13;
	unsigned _field14;
	unsigned _field15;
	unsigned _field16;
	unsigned _field17;
	unsigned _field18;
	unsigned _field19;
	unsigned _field20;
	unsigned _field21;
	unsigned _field22;
	unsigned _field23;
	unsigned _field24;
	unsigned _field25;
	unsigned _field26;
	unsigned _field27;
	unsigned _field28;
	unsigned _field29;
	unsigned _field30;
	unsigned _field31;
	unsigned _field32;
	unsigned _field33;
	unsigned _field34;
	unsigned _field35;
	unsigned _field36;
	unsigned _field37;
	unsigned _field38;
	unsigned _field39;
	unsigned _field40;
	unsigned _field41;
	unsigned _field42;
	unsigned _field43;
	unsigned _field44;
	unsigned _field45;
} NewDirectReport;

typedef struct ec_key_st ec_key_st;

template<>
struct __tree_node<std::__1::__value_type<float, float>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<float, float>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<float, std::__1::__value_type<float, float>, std::__1::less<float>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<float, float>, std::__1::__map_value_compare<float, std::__1::__value_type<float, float>, std::__1::less<float>, true>, std::__1::allocator<std::__1::__value_type<float, float> > > {
	__tree_node<std::__1::__value_type<float, float>, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<float, float>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<float, std::__1::__value_type<float, float>, std::__1::less<float>, true> > __pair3_;
};

template<>
struct map<float, float, std::__1::less<float>, std::__1::allocator<std::__1::pair<const float, float> > > {
	__tree<std::__1::__value_type<float, float>, std::__1::__map_value_compare<float, std::__1::__value_type<float, float>, std::__1::less<float>, true>, std::__1::allocator<std::__1::__value_type<float, float> > > __tree_;
};

template<>
struct __tree_node<std::__1::__value_type<float, NSMutableArray *>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<float, NSMutableArray *>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<float, std::__1::__value_type<float, NSMutableArray *>, std::__1::less<float>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<float, NSMutableArray *>, std::__1::__map_value_compare<float, std::__1::__value_type<float, NSMutableArray *>, std::__1::less<float>, true>, std::__1::allocator<std::__1::__value_type<float, NSMutableArray *> > > {
	__tree_node<std::__1::__value_type<float, NSMutableArray* >, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<float, NSMutableArray *>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<float, std::__1::__value_type<float, NSMutableArray *>, std::__1::less<float>, true> > __pair3_;
};

template<>
struct map<float, NSMutableArray *, std::__1::less<float>, std::__1::allocator<std::__1::pair<const float, NSMutableArray *> > > {
	__tree<std::__1::__value_type<float, NSMutableArray *>, std::__1::__map_value_compare<float, std::__1::__value_type<float, NSMutableArray *>, std::__1::less<float>, true>, std::__1::allocator<std::__1::__value_type<float, NSMutableArray *> > > __tree_;
};

typedef struct {
	short _field1;
	short _field2;
	short _field3;
	short _field4;
	short _field5;
	short _field6;
	short _field7;
	short _field8;
	short _field9;
	short _field10;
	short _field11;
	short _field12;
	short _field13;
} XXStruct_D0r$vD;

typedef struct WXTalkEngineAdapter {
	/*function-pointer*/ void** _field1;
} WXTalkEngineAdapter;

typedef struct MultiTalkMgrImpl MultiTalkMgrImpl;

typedef struct IMultiTalkMgr {
	MultiTalkMgrImpl* _field1;
} IMultiTalkMgr;

typedef struct __sbuf {
	char* _field1;
	int _field2;
} sbuf;

typedef struct __sFILEX sFILEX;

typedef struct __sFILE {
	char* _field1;
	int _field2;
	int _field3;
	short _field4;
	short _field5;
	sbuf _field6;
	int _field7;
	void* _field8;
	/*function-pointer*/ void* _field9;
	/*function-pointer*/ void* _field10;
	/*function-pointer*/ void* _field11;
	/*function-pointer*/ void* _field12;
	sbuf _field13;
	sFILEX* _field14;
	int _field15;
	unsigned char _field16[3];
	unsigned char _field17[1];
	sbuf _field18;
	int _field19;
	long long _field20;
} FILE;

template<>
struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long> > {
	unsigned long __first_;
};

template<>
struct vector<bool, std::__1::allocator<bool> > {
	unsigned long* __begin_;
	unsigned __size_;
	__compressed_pair<unsigned long, std::__1::allocator<unsigned long> > __cap_alloc_;
};

typedef struct PSTNChannelAdapter {
	/*function-pointer*/ void** _field1;
} PSTNChannelAdapter;

typedef struct PSTNNetNotifier {
	/*function-pointer*/ void** _field1;
} PSTNNetNotifier;

typedef struct CTransportChannel CTransportChannel;

typedef struct ITransportChannel {
	CTransportChannel* _field1;
} ITransportChannel;

typedef struct CMVQQEngine* CMVQQEngineRef;

typedef struct IMVQQEngine {
	CMVQQEngineRef _field1;
} IMVQQEngine;

typedef struct _VoIPRingBufferElement VoIPRingBufferElement;

typedef struct VoIPRingBuffer {
	unsigned _field1;
	unsigned _field2;
	int _field3;
	int _field4;
	VoIPRingBufferElement* _field5;
	opaque_pthread_mutex_t* _field6;
	int _field7;
} VoIPRingBuffer;

typedef struct ClearDataItem ClearDataItem;
template<>
struct shared_ptr<ClearDataItem> {
	ClearDataItem* _field1;
	shared_weak_count* _field2;
};

template<>
struct __compressed_pair<std::__1::shared_ptr<ClearDataItem> *, std::__1::allocator<std::__1::shared_ptr<ClearDataItem> > > {
	shared_ptr<ClearDataItem>* __first_;
};

template<>
struct vector<std::__1::shared_ptr<ClearDataItem>, std::__1::allocator<std::__1::shared_ptr<ClearDataItem> > > {
	shared_ptr<ClearDataItem>* __begin_;
	shared_ptr<ClearDataItem>* __end_;
	__compressed_pair<std::__1::shared_ptr<ClearDataItem> *, std::__1::allocator<std::__1::shared_ptr<ClearDataItem> > > __end_cap_;
};

typedef struct ClearSessionItem ClearSessionItem;

template<>
struct shared_ptr<ClearSessionItem> {
	ClearSessionItem* __ptr_;
	shared_weak_count* __cntrl_;
};

typedef struct CommonReport_t {
	unsigned _field1;
	unsigned long long _field2;
	unsigned long long _field3;
	unsigned _field4;
} CommonReport_t;

typedef struct ClientReport_t {
	BOOL _field1[1024];
	int _field2;
	unsigned _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	unsigned _field7;
	unsigned _field8;
	unsigned _field9;
	unsigned _field10;
	unsigned _field11;
	BOOL _field12[1024];
	unsigned _field13;
	unsigned _field14;
	BOOL _field15[10];
	unsigned _field16;
	int _field17;
} ClientReport_t;

typedef struct NSDictionary {
	Class _field1;
} NSDictionary;

template<>
struct WCDBCondition<PBCMessageWrap *> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

template<>
struct __tree_node<std::__1::__value_type<unsigned int, unsigned int>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned int> > > {
	__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true> > __pair3_;
};

template<>
struct map<unsigned int, unsigned int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > > {
	__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned int> > > __tree_;
};

typedef struct tagMMSnsUserInfo {
	unsigned _field1;
	char* _field2;
	unsigned long long _field3;
	unsigned _field4;
} tagMMSnsUserInfo;

typedef struct tagMMCustomizedInfo {
	unsigned _field1;
	char* _field2;
	char* _field3;
	char* _field4;
} tagMMCustomizedInfo;

typedef struct tagMMLbsContactInfo {
	char* _field1;
	char* _field2;
	char* _field3;
	char* _field4;
	char* _field5;
	char* _field6;
	int _field7;
	unsigned _field8;
	unsigned _field9;
	char* _field10;
	char* _field11;
	char* _field12;
	char* _field13;
	char* _field14;
	unsigned _field15;
	int _field16;
	tagMMSnsUserInfo _field17;
	char* _field18;
	char* _field19;
	char* _field20;
	char* _field21;
	tagMMCustomizedInfo _field22;
	char* _field23;
} tagMMLbsContactInfo;

@class NSMutableArray;
typedef struct _SpeedTestInfo {
	int roomId;
	unsigned long long roomKey;
	unsigned callType;
	unsigned isConnecting;
	unsigned isConnected;
	unsigned c2Clossrate;
	unsigned c2CrttCnt;
	NSMutableArray* c2Crtt;
	unsigned c2SdownLossRate;
	unsigned c2SrttCnt;
	NSMutableArray* c2Srtt;
	unsigned sendPkts;
	unsigned rcvPkts;
} SpeedTestInfo;

typedef struct CSpeedTestChannel CSpeedTestChannel;

typedef struct ISpeedTestChannel {
	CSpeedTestChannel* mSpeedTestChannel;
} ISpeedTestChannel;

typedef struct VOIPSpeedTestChannelAdapter {
	/*function-pointer*/ void** _field1;
} VOIPSpeedTestChannelAdapter;

template<>
struct __compressed_pair<__strong Class *, std::__1::allocator<Class> > {
	Class* __first_;
};

template<>
struct vector<Class, std::__1::allocator<Class> > {
	Class* __begin_;
	Class* __end_;
	__compressed_pair<__strong Class *, std::__1::allocator<Class> > __end_cap_;
};

template<>
struct __tree_node<std::__1::__value_type<unsigned long long, NSString *>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, NSString *>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, NSString *>, std::__1::less<unsigned long long>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<unsigned long long, NSString *>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, NSString *>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, NSString *> > > {
	__tree_node<std::__1::__value_type<unsigned long long, NSString* >, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, NSString *>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, NSString *>, std::__1::less<unsigned long long>, true> > __pair3_;
};

template<>
struct map<unsigned long long, NSString *, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, NSString *> > > {
	__tree<std::__1::__value_type<unsigned long long, NSString *>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, NSString *>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, NSString *> > > __tree_;
};

typedef struct WXTalkieEngineAdapter {
	/*function-pointer*/ void** _field1;
} WXTalkieEngineAdapter;

typedef struct LiveConEngine LiveConEngine;

typedef struct ILiveConEngine {
	LiveConEngine* _field1;
} ILiveConEngine;

template<>
struct WCDBCondition<MultiTalkMemberList *> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

template<>
struct __tree_node<std::__1::__value_type<NSString *, bool>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<NSString *, bool>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<NSString *, std::__1::__value_type<NSString *, bool>, CompareNSString, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<NSString *, bool>, std::__1::__map_value_compare<NSString *, std::__1::__value_type<NSString *, bool>, CompareNSString, true>, std::__1::allocator<std::__1::__value_type<NSString *, bool> > > {
	__tree_node<std::__1::__value_type<NSString* , bool>, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<NSString *, bool>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<NSString *, std::__1::__value_type<NSString *, bool>, CompareNSString, true> > __pair3_;
};

template<>
struct map<NSString *, bool, CompareNSString, std::__1::allocator<std::__1::pair<NSString *const, bool> > > {
	__tree<std::__1::__value_type<NSString *, bool>, std::__1::__map_value_compare<NSString *, std::__1::__value_type<NSString *, bool>, CompareNSString, true>, std::__1::allocator<std::__1::__value_type<NSString *, bool> > > __tree_;
};

template<>
struct __compressed_pair<std::__1::shared_ptr<ClearSessionItem> *, std::__1::allocator<std::__1::shared_ptr<ClearSessionItem> > > {
	shared_ptr<ClearSessionItem>* __first_;
};

template<>
struct vector<std::__1::shared_ptr<ClearSessionItem>, std::__1::allocator<std::__1::shared_ptr<ClearSessionItem> > > {
	shared_ptr<ClearSessionItem>* __begin_;
	shared_ptr<ClearSessionItem>* __end_;
	__compressed_pair<std::__1::shared_ptr<ClearSessionItem> *, std::__1::allocator<std::__1::shared_ptr<ClearSessionItem> > > __end_cap_;
};

template<>
struct WCDBCondition<MMResDownloadUrlInfo *> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

typedef struct VOIPChannelAdapter {
	/*function-pointer*/ void** _field1;
} VOIPChannelAdapter;

typedef struct VOIPNetNotifier {
	/*function-pointer*/ void** _field1;
} VOIPNetNotifier;

typedef struct XLoggerInfo_t {
	int _field1;
	char* _field2;
	char* _field3;
	char* _field4;
	int _field5;
	timeval _field6;
	long long _field7;
	long long _field8;
	long long _field9;
} XLoggerInfo_t;

typedef struct stWeixinEntryRow {
	int _field1;
	BOOL _field2;
	id _field3;
	Class _field4;
	id _field5;
	id _field6;
	id _field7;
	id _field8;
	id _field9;
} stWeixinEntryRow;

typedef struct QBarCore QBarCore;

typedef struct QBar {
	QBarCore* _field1;
} QBar;

typedef struct stEntryRow {
	int _field1;
	BOOL _field2;
	id _field3;
	Class _field4;
	id _field5;
	id _field6;
	id _field7;
	id _field8;
	id _field9;
} stEntryRow;

typedef struct _NSParserPosition {
	BOOL newLine;
	BOOL endOfString;
	float x;
	float y;
	float width;
} NSParserPosition;

template<>
struct __compressed_pair<int *, std::__1::allocator<int> > {
	int* _field1;
};

template<>
struct vector<int, std::__1::allocator<int> > {
	int* _field1;
	int* _field2;
	__compressed_pair<int *, std::__1::allocator<int> > _field3;
};

typedef struct BankCardInfo {
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field1;
	vector<int, std::__1::allocator<int> > _field2;
	vector<int, std::__1::allocator<int> > _field3;
	int _field4;
	int _field5;
	char* _field6;
} BankCardInfo;

typedef struct __CTFrame* CTFrameRef;

typedef struct __CTFramesetter* CTFramesetterRef;

typedef struct CGImage* CGImageRef;

typedef struct HeadImgUseSceneConfig {
	unsigned char _field1;
	Class _field2;
	id _field3;
	BOOL _field4;
	CGSize _field5;
	unsigned _field6;
	unsigned char _field7;
} HeadImgUseSceneConfig;

typedef struct tagSKBuiltinString {
	char* _field1;
} tagSKBuiltinString;

typedef struct tagSKBuiltinBuffer {
	int _field1;
	char* _field2;
} tagSKBuiltinBuffer;

typedef struct tagMMRoomInfo {
	tagSKBuiltinString _field1;
	tagSKBuiltinString _field2;
} tagMMRoomInfo;

typedef struct tagMMLinkedinContactItem {
	char* _field1;
	char* _field2;
	char* _field3;
} tagMMLinkedinContactItem;

typedef struct tagMMAdditionalContactList {
	tagMMLinkedinContactItem _field1;
	unsigned _field2;
} tagMMAdditionalContactList;

typedef struct tagMMChatRoomMemberInfo tagMMChatRoomMemberInfo;

typedef struct tagMMChatRoomMemberData {
	unsigned _field1;
	tagMMChatRoomMemberInfo* _field2;
	unsigned _field3;
} tagMMChatRoomMemberData;

typedef struct tagMMPhoneNumItem tagMMPhoneNumItem;

typedef struct tagMMPhoneNumListInfo {
	unsigned _field1;
	tagMMPhoneNumItem* _field2;
} tagMMPhoneNumListInfo;

typedef struct tagMMModContact {
	tagSKBuiltinString _field1;
	tagSKBuiltinString _field2;
	tagSKBuiltinString _field3;
	tagSKBuiltinString _field4;
	int _field5;
	tagSKBuiltinBuffer _field6;
	unsigned _field7;
	unsigned _field8;
	unsigned _field9;
	tagSKBuiltinString _field10;
	tagSKBuiltinString _field11;
	tagSKBuiltinString _field12;
	unsigned _field13;
	unsigned _field14;
	tagMMRoomInfo* _field15;
	tagSKBuiltinString _field16;
	unsigned _field17;
	unsigned _field18;
	char* _field19;
	char* _field20;
	char* _field21;
	unsigned _field22;
	unsigned _field23;
	unsigned _field24;
	char* _field25;
	int _field26;
	unsigned _field27;
	char* _field28;
	char* _field29;
	char* _field30;
	char* _field31;
	char* _field32;
	unsigned _field33;
	int _field34;
	int _field35;
	char* _field36;
	tagMMSnsUserInfo _field37;
	char* _field38;
	char* _field39;
	char* _field40;
	char* _field41;
	tagMMCustomizedInfo _field42;
	char* _field43;
	char* _field44;
	char* _field45;
	char* _field46;
	char* _field47;
	char* _field48;
	char* _field49;
	tagMMAdditionalContactList _field50;
	unsigned _field51;
	char* _field52;
	unsigned _field53;
	unsigned _field54;
	tagMMChatRoomMemberData _field55;
	int _field56;
	char* _field57;
	char* _field58;
	char* _field59;
	tagMMPhoneNumListInfo _field60;
	char* _field61;
	unsigned _field62;
} tagMMModContact;

typedef struct tagMMModChatRoomMember {
	tagSKBuiltinString _field1;
	tagSKBuiltinString _field2;
	tagSKBuiltinString _field3;
	tagSKBuiltinString _field4;
	int _field5;
	tagSKBuiltinBuffer _field6;
	unsigned _field7;
	tagSKBuiltinString _field8;
	tagSKBuiltinString _field9;
	tagSKBuiltinString _field10;
	unsigned _field11;
	char* _field12;
	char* _field13;
	char* _field14;
	unsigned _field15;
	unsigned _field16;
	char* _field17;
	char* _field18;
	char* _field19;
	char* _field20;
	unsigned _field21;
	int _field22;
	int _field23;
	char* _field24;
	char* _field25;
	tagMMSnsUserInfo _field26;
	char* _field27;
	char* _field28;
	char* _field29;
	char* _field30;
	tagMMCustomizedInfo _field31;
} tagMMModChatRoomMember;

template<>
struct WCDBCondition<MMSessionInfoExt *> {
	bool _field1;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field2;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > _field3;
	int _field4;
};

typedef struct tagMMModUserImg {
	unsigned _field1;
	unsigned _field2;
	char* _field3;
	char* _field4;
	char* _field5;
	char* _field6;
} tagMMModUserImg;

typedef struct CDNTransportComponent* CDNTransportComponentRef;

typedef struct CdnUploadCallback {
	/*function-pointer*/ void** _field1;
	id _field2;
} CdnUploadCallback;

typedef struct CdnDownloadCallback {
	/*function-pointer*/ void** _field1;
	id _field2;
} CdnDownloadCallback;

typedef struct WXConfig {
	int _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
	int _field6;
	int _field7;
	int _field8;
	int _field9;
	int _field10;
	int _field11;
	bool _field12;
	bool _field13;
} WXConfig;

typedef struct AudioStreamBasicDescription {
	double mSampleRate;
	unsigned mFormatID;
	unsigned mFormatFlags;
	unsigned mBytesPerPacket;
	unsigned mFramesPerPacket;
	unsigned mBytesPerFrame;
	unsigned mChannelsPerFrame;
	unsigned mBitsPerChannel;
	unsigned mReserved;
} AudioStreamBasicDescription;

typedef struct OpaqueAudioFileID OpaqueAudioFileID;

struct ClearDataItem {
	int _field1;
	unsigned _field2;
	id _field3;
	unsigned _field4;
	id _field5;
	id _field6;
	unsigned _field7;
};

typedef struct OpaqueAudioComponentInstance OpaqueAudioComponentInstance;

typedef union sigval {
	int _field1;
	void* _field2;
} sigval;

typedef struct __siginfo {
	int _field1;
	int _field2;
	int _field3;
	int _field4;
	unsigned _field5;
	int _field6;
	void* _field7;
	sigval _field8;
	long _field9;
	unsigned long _field10[7];
} siginfo_t;

typedef struct __CFReadStream* CFReadStreamRef;

typedef struct __CFWriteStream* CFWriteStreamRef;

typedef struct {
	unsigned char _field1;
	unsigned char _field2;
	unsigned char _field3;
	unsigned char _field4;
	unsigned char _field5;
	unsigned char _field6;
	unsigned char _field7;
	unsigned char _field8;
	unsigned char _field9;
	unsigned char _field10;
	unsigned char _field11;
	unsigned char _field12;
	unsigned char _field13;
	unsigned char _field14;
	unsigned char _field15;
	unsigned char _field16;
} XXStruct_eX1N7A;

typedef struct OpaqueAudioQueue OpaqueAudioQueue;

typedef struct OpaqueAudioFileStreamID OpaqueAudioFileStreamID;

typedef struct AudioStreamPacketDescription AudioStreamPacketDescription;
typedef struct AudioQueueBuffer {
	unsigned _field1;
	void* _field2;
	unsigned _field3;
	void* _field4;
	unsigned _field5;
	AudioStreamPacketDescription* _field6;
	unsigned _field7;
} AudioQueueBuffer;

struct AudioStreamPacketDescription {
	long long mStartOffset;
	unsigned mVariableFramesInPacket;
	unsigned mDataByteSize;
};

typedef struct MMBizMatchInfo {
	int _field1;
	int _field2;
} MMBizMatchInfo;

typedef struct MMDiskUsageBizRule {
	int _field1;
	int _field2;
	id _field3;
	int _field4;
	int _field5;
	int _field6;
} MMDiskUsageBizRule;

typedef struct AMRDecodeFloat* AMRDecodeFloatRef;

typedef struct AudioDecoder AudioDecoder;

typedef struct PlayerState {
	id _field1;
	unsigned _field2;
	AudioStreamBasicDescription _field3;
	OpaqueAudioQueue* _field4;
	AudioQueueBuffer* _field5[3];
	unsigned _field6;
	long long _field7;
	unsigned _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	bool _field12;
	bool _field13;
	unsigned _field14;
	id _field15;
	unsigned _field16;
	id _field17;
	id _field18;
	AMRDecodeFloatRef _field19;
	id _field20;
	id _field21;
	id _field22;
	id _field23;
	unsigned _field24;
	AudioStreamPacketDescription* _field25;
	OpaqueAudioFileID* _field26;
	id _field27;
	id _field28;
	AudioDecoder* _field29;
} PlayerState;

typedef struct __CFHost* CFHostRef;

typedef struct __CFSocket* CFSocketRef;

typedef struct IPHeader {
	unsigned char _field1;
	unsigned char _field2;
	unsigned short _field3;
	unsigned short _field4;
	unsigned short _field5;
	unsigned char _field6;
	unsigned char _field7;
	unsigned short _field8;
	unsigned char _field9[4];
	unsigned char _field10[4];
} IPHeader;

typedef struct MMSMUploadFileObserver {
	/*function-pointer*/ void** _field1;
} MMSMUploadFileObserver;

typedef struct sockaddr {
	unsigned char sa_len;
	unsigned char sa_family;
	BOOL sa_data[14];
} sockaddr;

typedef struct _BBHostInfoValidity {
	sockaddr addr;
	int isValid;
} BBHostInfoValidity;

typedef struct AMREncodeFloat* AMREncodeFloatRef;

typedef struct AudioCoder AudioCoder;

typedef struct RecorderState {
	id _field1;
	AudioStreamBasicDescription _field2;
	OpaqueAudioQueue* _field3;
	AudioQueueBuffer* _field4[3];
	unsigned _field5;
	long long _field6;
	long long _field7;
	OpaqueAudioFileID* _field8;
	bool _field9;
	long _field10;
	unsigned _field11;
	bool _field12;
	bool _field13;
	id _field14;
	id _field15;
	id _field16;
	AMREncodeFloatRef _field17;
	bool _field18;
	id _field19;
	id _field20;
	id _field21;
	id _field22;
	OpaqueAudioFileID* _field23;
	id _field24;
	float _field25;
	id _field26;
	unsigned _field27;
	id _field28;
	unsigned char _field29[1280];
	int _field30;
	BOOL _field31;
	AudioCoder* _field32;
	BOOL _field33;
} RecorderState;

@class NSString;
typedef struct MMDBRAssistInfo {
	Class assistClass;
	unsigned dbID;
	NSString* dbName;
	unsigned scene;
	NSString* localDBNameKey;
	unsigned keyUICancel;
	unsigned keyUIConfirm;
	unsigned keyRecoverSucc;
	unsigned keyRecoverFail;
} MMDBRAssistInfo;

typedef struct tagMMBaseResponse {
	int _field1;
	tagSKBuiltinString _field2;
} tagMMBaseResponse;

typedef struct tagMMCmdItem tagMMCmdItem;

template<>
struct SKSmartPickleStruct<MMMicroMsgPickle, tagMMNewInitResponse> {
	tagMMBaseResponse _field1;
	tagSKBuiltinBuffer _field2;
	tagSKBuiltinBuffer _field3;
	unsigned _field4;
	unsigned _field5;
	unsigned _field6;
	tagMMCmdItem* _field7;
	unsigned _field8;
};

typedef struct __CFRunLoopSource* CFRunLoopSourceRef;

typedef struct in6_addr {
	union {
		unsigned char _field1[16];
		unsigned short _field2[8];
		unsigned _field3[4];
	} _field1;
} in6_addr;

typedef struct sockaddr_in6 {
	unsigned char _field1;
	unsigned char _field2;
	unsigned short _field3;
	unsigned _field4;
	in6_addr _field5;
	unsigned _field6;
} sockaddr_in6;

template<>
struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > {
	unsigned* __first_;
};

template<>
struct vector<unsigned int, std::__1::allocator<unsigned int> > {
	unsigned* __begin_;
	unsigned* __end_;
	__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > __end_cap_;
};

typedef struct {
	XXStruct_eX1N7A _field1;
	XXStruct_eX1N7A _field2;
} XXStruct_giUMfD;

typedef struct CGVector {
	float _field1;
	float _field2;
} CGVector;

typedef struct stFileHeader {
	unsigned m_uiVersion;
	long long m_i64FileSize;
	long long m_i64DownloadSize;
} stFileHeader;

template<>
struct __tree_node<std::__1::__value_type<unsigned long long, tagEmojiItem *>, void *>;

template<>
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, tagEmojiItem *>, void *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
};

template<>
struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, tagEmojiItem *>, std::__1::less<unsigned long long>, true> > {
	unsigned long __first_;
};

template<>
struct __tree<std::__1::__value_type<unsigned long long, tagEmojiItem *>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, tagEmojiItem *>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, tagEmojiItem *> > > {
	__tree_node<std::__1::__value_type<unsigned long long, tagEmojiItem* >, void* >* __begin_node_;
	__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, tagEmojiItem *>, void *> > > __pair1_;
	__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, tagEmojiItem *>, std::__1::less<unsigned long long>, true> > __pair3_;
};

template<>
struct map<unsigned long long, tagEmojiItem *, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, tagEmojiItem *> > > {
	__tree<std::__1::__value_type<unsigned long long, tagEmojiItem *>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, tagEmojiItem *>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, tagEmojiItem *> > > __tree_;
};

typedef struct {
	id _field1;
	unsigned short _field2;
} XXStruct_c19r_A;

typedef union BCPoint {
	double _field1[2];
	XXStruct_gLbvpC _field2;
} BCPoint;

typedef union BCTrapezoid {
	BCPoint _field1[4];
	struct {
		BCPoint _field1;
		BCPoint _field2;
		BCPoint _field3;
		BCPoint _field4;
	} _field2;
} BCTrapezoid;

typedef struct BCSegment {
	BCPoint _field1;
	BCPoint _field2;
} BCSegment;


