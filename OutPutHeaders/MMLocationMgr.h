/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MMService.h"
#import "WeChat-Structs.h"
#import "CLLocationManagerDelegate.h"
#import "QMapViewDelegate.h"
#import "MMService.h"
#import "PBMessageObserverDelegate.h"

@class NSMutableArray, NSString, QMapView, MMLocationDB, CLLocationManager, MMLocationCacheStorage;

@interface MMLocationMgr : MMService <PBMessageObserverDelegate, QMapViewDelegate, MMService, CLLocationManagerDelegate> {
	NSMutableArray* m_loactionMgrList;
	NSMutableArray* m_unusedLocationMgr;
	MMLocationDB* m_locationDB;
	NSMutableArray* m_reversGeolocators;
	int mapViewTagMark;
	NSMutableArray* mapViewList;
	MMLocationCacheStorage* _locationCacheStorage;
	CLLocationManager* _locationMgrForAuthorization;
	QMapView* _mapView;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic) MMLocationCacheStorage* locationCacheStorage;
@property(retain, nonatomic) NSMutableArray* unusedLocationMgr;
@property(retain, nonatomic) NSMutableArray* loactionMgrList;
-(void).cxx_destruct;
-(void)mapView:(id)view didFailToLocateUserWithError:(id)error;
-(void)mapView:(id)view didUpdateUserLocation:(id)location;
-(void)MessageReturn:(id)aReturn Event:(unsigned long)event;
-(void)requestWXGeocodeWithParam:(id)param;
-(void)connectionDidFinishLoading:(id)connection;
-(void)connection:(id)connection didReceiveData:(id)data;
-(void)connection:(id)connection didReceiveResponse:(id)response;
-(void)requestReverseGeoWithParam:(id)param;
-(BOOL)isCoordinateInChina:(XXStruct_gLbvpC)china;
-(id)countryCodeFromAddressDic:(id)addressDic;
-(id)countryFromAddressDic:(id)addressDic;
-(id)routeFromAddressDic:(id)addressDic;
-(id)subLocalityFromAddressDic:(id)addressDic;
-(id)evolvedCityFromAddressDic:(id)addressDic;
-(id)cityFromAddressDic:(id)addressDic;
-(id)provinceFromAddressDic:(id)addressDic;
-(id)roughAddressFromAddressDic:(id)addressDic;
-(id)shortAddressFromAddressDic:(id)addressDic;
-(id)findDictionaryByKey:(id)key;
-(id)findDictionaryByGeo:(id)geo;
-(void)stopUpdateAddressByTag:(unsigned long)tag;
-(void)stopGeoAddress:(id)address;
-(unsigned long)updateAddressByLocation:(XXStruct_gLbvpC)location;
-(id)getAddressByLocation:(XXStruct_gLbvpC)location;
-(id)keyForLocation:(XXStruct_gLbvpC)location;
-(void)locationManager:(id)manager didUpdateHeading:(id)heading;
-(void)locationManager:(id)manager didFailWithError:(id)error;
-(void)locationManager:(id)manager didUpdateToLocation:(id)location fromLocation:(id)location3;
-(void)onUpdateLocationFromLocationManager:(id)locationManager;
-(void)dealloc;
-(id)init;
-(id)getLastLocationCache;
-(void)updateLocationCache:(id)cache isMarsLocation:(BOOL)location;
-(void)saveLocationCacheStorage;
-(void)loadLocationCacheStorage;
-(id)getLocationCacheStorage;
-(BOOL)isUpdatingHeading:(unsigned long)heading;
-(void)stopUpdateHeading:(unsigned long)heading;
-(unsigned long)startUpdateHeading;
-(BOOL)isUpdatingMapLocation:(int)location;
-(void)stopUpdateMapLocation:(int)location;
-(int)startUpdateMapLocation;
-(BOOL)isUpdatingGPSLocation:(unsigned long)location;
-(void)stopUpdateGPSLocation:(unsigned long)location;
-(unsigned long)startUpdateGPSLocation;
-(void)requestForAuthorization;
-(void)cleanUpUnusedLocationMgr;
-(void)addToUnusedLocationMgr:(id)unusedLocationMgr;
-(BOOL)isAccurateLocation:(id)location;
-(double)locationAccuracy:(id)accuracy;
-(void)onServiceClearData;
-(void)onServiceReloadData;
-(void)onServiceInit;
-(id)getExtraInfoFromAddressDic:(id)addressDic;
@end

