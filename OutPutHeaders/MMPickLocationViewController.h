/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "tableViewDelegate.h"
#import "QMapViewDelegate.h"
#import "UIAlertViewDelegate.h"
#import "ILocationMgrExt.h"
#import "UITableViewDelegate.h"
#import "UITableViewDataSource.h"
#import "WeChat-Structs.h"
#import "MMSearchBarDisplayController.h"
#import "MMSearchBarDelegate.h"
#import "WCActionSheetDelegate.h"
#import "IGetPOIListMgrExt.h"
#import "LocationRetrieveDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "MMRefreshTableFooterDelegate.h"
#import "MMLocationAttributeBannerDelegate.h"
#import "MMAutoSearchLogicDelegate.h"
#import "MMLocationPinViewDelegate.h"

@class QMapView, LocationRetriever, MMTableView, NSString, UIAlertView, MMSearchBar, WCTimeLineFooterView, UILabel, UIButton, MMLocationPinView, CLLocation, MMAutoSearchLogic, MMLocationAttributeBanner, UIPinchGestureRecognizer, NSMutableArray;
@protocol MMPickLocationViewControllerDelegate;

@interface MMPickLocationViewController : MMSearchBarDisplayController <UITableViewDelegate, tableViewDelegate, UITableViewDataSource, IGetPOIListMgrExt, ILocationMgrExt, UIGestureRecognizerDelegate, MMRefreshTableFooterDelegate, MMSearchBarDelegate, MMLocationAttributeBannerDelegate, LocationRetrieveDelegate, MMAutoSearchLogicDelegate, QMapViewDelegate, MMLocationPinViewDelegate, UIAlertViewDelegate, WCActionSheetDelegate> {
	id<MMPickLocationViewControllerDelegate> _delegate;
	UILabel* _searchErrorTips;
	NSString* _address;
	NSString* _searchKeyword;
	NSString* _openID;
	MMSearchBar* _searchBar;
	MMLocationPinView* _pinView;
	QMapView* _mapView;
	MMTableView* _tableView;
	WCTimeLineFooterView* _nearTableFooterView;
	WCTimeLineFooterView* _searchTableFooterView;
	UIAlertView* _errorAlertView;
	MMLocationAttributeBanner* _attributeBanner;
	BOOL _isLoadFinish;
	BOOL _shouldUpdateList;
	BOOL _isOnlyUseUserLocation;
	BOOL _isMapAnimating;
	BOOL _useWXPOI;
	BOOL _useApplePOI;
	BOOL _isShowUp;
	unsigned long _geoTag;
	unsigned _scene;
	XXStruct_gLbvpC _lastSelectedLocation;
	XXStruct_gLbvpC _firstGetNearLocation;
	XXStruct_gLbvpC _lastDragLocation;
	UIButton* _showMyLocationButton;
	NSMutableArray* _poiAnnotationList;
	NSMutableArray* _searchPOIResultList;
	unsigned _selectedPoiIndex;
	timeval _startLocateTime;
	CGSize _beginTouchDeltaRatio;
	XXStruct_gLbvpC _beginTouchRegion;
	UIPinchGestureRecognizer* _pinchGestureRecognizer;
	NSMutableArray* _sysGestureRecognizers;
	LocationRetriever* _locationRetriever;
	CLLocation* _userCurrentLocation;
	MMAutoSearchLogic* _autoSearchLogic;
	float _keyboardHeight;
	unsigned long long _entryTime;
	unsigned long long _startGetListTime;
	unsigned long long _endGetListTime;
	unsigned long long _firstGetTime;
	unsigned _getPageCount;
	unsigned long long _startSearchListTime;
	unsigned long long _endSearchListTime;
	unsigned long long _firstSearchTime;
	unsigned long long _searchPageCount;
	NSString* _currentSearchId;
	BOOL _lastSelectFromSearch;
	unsigned _lastSelectRow;
	unsigned long long _lastSelectTime;
	NSString* _lastSelectPOIId;
	BOOL _dismissWithCancel;
	BOOL _isSubViewAnimating;
	BOOL _didShowLocationCloseAlert;
	NSString* _roughAddress;
	float _mapViewFullHeight;
	float _mapViewCurrentHeight;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) BOOL didShowLocationCloseAlert;
@property(assign, nonatomic) BOOL isSubViewAnimating;
@property(assign, nonatomic) float mapViewCurrentHeight;
@property(assign, nonatomic) float mapViewFullHeight;
@property(retain, nonatomic) NSString* roughAddress;
@property(retain, nonatomic) NSString* searchKeyword;
@property(retain, nonatomic) NSString* address;
@property(assign, nonatomic) __weak id<MMPickLocationViewControllerDelegate> delegate;
-(void).cxx_destruct;
-(void)keyboardDidShow:(id)keyboard;
-(void)onRetrieveLocationError:(int)error;
-(void)onRetrieveLocationTimeOut:(id)anOut;
-(void)onRetrieveLocationOK:(id)ok;
-(void)startUpdateLocation;
-(void)OnGetAutoSearchPOIList:(id)list Error:(int)error;
-(void)OnGetSearchPOIList:(id)list Error:(int)error;
-(void)OnGetNearPOIList:(id)list Error:(int)error;
-(id)getAddressFromPlaceMark:(id)placeMark;
-(void)OnSearchMKLocalSearchResponse:(id)response Error:(id)error;
-(void)updataSearchListWithCoordinate:(XXStruct_gLbvpC)coordinate Keyword:(id)keyword StartFromFirst:(BOOL)first;
-(void)updatePOIListWithCoordinate:(XXStruct_gLbvpC)coordinate StartFromFirst:(BOOL)first;
-(void)onDidFindAddress:(id)on forTag:(unsigned long)tag;
-(void)stopGeocoder;
-(void)getAddressByLocation:(XXStruct_gLbvpC)location;
-(void)autoSearchShouldBeginWithKey:(id)autoSearch StartFromFirst:(BOOL)first;
-(void)setSearchTableResultText:(id)text;
-(void)mmSearchDisplayControllerWillEndSearch;
-(void)mmSearchDisplayControllerWillBeginSearch;
-(void)relayoutSubviews;
-(void)mmsearchBarSearchButtonClicked:(id)clicked;
-(void)mmSearchBarTextDidChange:(id)mmSearchBarText;
-(void)didSearchViewTableSelect:(id)select;
-(void)mmsearchBarTextDidBeginEditing:(id)mmsearchBarText;
-(void)setSearchBar:(id)bar CancelButtonText:(id)text;
-(void)adjustSearchTable:(BOOL)table;
-(float)heightForSearchViewTable:(id)searchViewTable;
-(id)cellForSearchViewTable:(id)searchViewTable index:(id)index;
-(void)MMRefreshTableFooterDidTriggerRefresh:(id)mmrefreshTableFooter;
-(void)didScrollViewScroll:(id)scroll;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view willSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(id)makeCell:(id)cell forPOIItem:(id)poiitem withWidth:(float)width atIndexPath:(id)indexPath;
-(float)tableView:(id)view heightForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(int)numberOfSectionsInTableView:(id)tableView;
-(void)resetSearchList;
-(id)getSearchItemAtIndex:(int)index;
-(void)updateUserPOIItem;
-(id)getUserPOIItem;
-(BOOL)isUserPOIItem:(id)item;
-(unsigned)getUserPOIItemIndex;
-(id)getSelectedPOIItem;
-(id)getPOIItemAtIndex:(unsigned)index;
-(id)getPOIAnnotationAtIndex:(unsigned)index;
-(void)scrollPOIItemToVisible:(unsigned)visible Animated:(BOOL)animated;
-(void)selectPOIAnnotation:(id)annotation;
-(void)selectPOIAtIndex:(unsigned)index Animated:(BOOL)animated;
-(void)onUpdatePOITableCell:(id)cell;
-(void)addUserPOIItem;
-(void)addNotCheckInPOIItem;
-(void)resetPOIList;
-(void)removePOIAtIndex:(unsigned)index UpdateTable:(BOOL)table Animated:(BOOL)animated;
-(void)addPOIItem:(id)item UpdateTable:(BOOL)table Animated:(BOOL)animated;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)showPinViewCallout;
-(void)addUserLocationAnnotation;
-(id)mapView:(id)view viewForAnnotation:(id)annotation;
-(void)mapViewDidFailLoadingMap:(id)mapView withError:(id)error;
-(void)mapViewDidFinishLoadingMap:(id)mapView;
-(void)mapView:(id)view didFailToLocateUserWithError:(id)error;
-(void)mapView:(id)view didUpdateUserLocation:(id)location;
-(void)delayAddUserPOIItem;
-(void)mapView:(id)view regionDidChangeAnimated:(BOOL)region;
-(void)mapView:(id)view regionWillChangeAnimated:(BOOL)region;
-(void)onClickAttributeBanner;
-(void)unFoldMapView;
-(void)foldMapView;
-(double)getDistanceBetween:(XXStruct_gLbvpC)between AndTarget:(XXStruct_gLbvpC)target;
-(void)onCancelSelectLocation;
-(void)onLoadMapError:(id)error;
-(void)onTimerCheckUserLocation;
-(void)onTimeOut;
-(void)pinUserLocation:(id)location;
-(void)onShowMyLocation;
-(BOOL)isOnUserLocation:(XXStruct_gLbvpC)location;
-(id)getUserLocation;
-(id)getCurrentPOIInfo;
-(void)stopPicking;
-(void)onPinGestureUpdated:(id)updated;
-(BOOL)gestureRecognizer:(id)recognizer shouldBeRequiredToFailByGestureRecognizer:(id)failByGestureRecognizer;
-(BOOL)gestureRecognizer:(id)recognizer shouldRequireFailureOfGestureRecognizer:(id)gestureRecognizer;
-(BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;
-(BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(void)enableSysGestureRecognizers:(BOOL)recognizers;
-(void)initMapViewGestureRecognizer:(id)recognizer;
-(void)initGesture;
-(void)adjustSubviewRects;
-(void)willDisshow;
-(void)viewDidBeDismissed:(BOOL)view;
-(void)viewDidBePresented:(BOOL)view;
-(void)viewDidBePoped:(BOOL)view;
-(void)viewDidBePushed:(BOOL)view;
-(void)viewWillBePresented:(BOOL)view;
-(void)viewWillBePushed:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewDidAppear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)viewDidLayoutSubviews;
-(void)viewDidLoad;
-(void)initView;
-(void)showAttributeBannerTitle:(id)title LogoUrl:(id)url Link:(id)link;
-(void)showSearchTableLoadMore;
-(void)initHeaderView;
-(void)initMapPinView:(BOOL)view;
-(void)updateSearchBarTips;
-(void)initSearchBar;
-(void)initShowMyLocationButton;
-(void)initTableView;
-(float)getTableViewHeight;
-(void)reportOnDone;
-(void)dealloc;
-(id)initWithScene:(unsigned)scene OnlyUseUserLocation:(BOOL)location;
@end

