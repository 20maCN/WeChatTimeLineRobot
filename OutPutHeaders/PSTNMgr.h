/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WeChat-Structs.h"
#import "MMService.h"
#import "MMService.h"
#import "PBMessageObserverDelegate.h"
#import "IAUAudioDeviceExt.h"
#import "AUAudioDataSource.h"
#import "INetworkStatusMgrExt.h"
#import "IPSTNSyncExt.h"
#import "ISysCallCheckExt.h"

@class PSTNComponent, MMTimer, NSString, AUAudioDevice, NSRecursiveLock, PSTNDialData;

@interface PSTNMgr : MMService <AUAudioDataSource, IAUAudioDeviceExt, PBMessageObserverDelegate, ISysCallCheckExt, IPSTNSyncExt, INetworkStatusMgrExt, MMService> {
	int mStatus;
	BOOL mIsInterrupted;
	BOOL mIsCanConnect;
	BOOL mIsConnected;
	BOOL mIsCanTalk;
	BOOL mIsTalked;
	BOOL mIsEngineStarted;
	BOOL mIsCanSendData;
	BOOL mIsAudioStarted;
	BOOL mIsRecordStarted;
	BOOL mIsPreConnectFail;
	BOOL mIsPSTNAnswer;
	BOOL mIsPSTNAccepted;
	unsigned mLastNetworkStatus;
	int mAudioCodecType;
	int mShutDownStatus;
	int mErrCode;
	PSTNDialData* mDialData;
	PSTNComponent* mComponent;
	AUAudioDevice* mAudioDevice;
	NSRecursiveLock* mAudioEncLock;
	NSRecursiveLock* mAudioDecLock;
	NSRecursiveLock* mStartAudioLock;
	NSRecursiveLock* mStartRecordLock;
	NSRecursiveLock* inputVideoRenderLock;
	MMTimer* mPSTNHeartbeatTimer;
	MMTimer* mPSTNDialStatusTimer;
	int mCntTryStartAudioDev;
	unsigned long mInviteId;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) unsigned long mInviteId;
@property(assign, nonatomic) int mCntTryStartAudioDev;
@property(retain, nonatomic) MMTimer* mPSTNDialStatusTimer;
@property(retain, nonatomic) MMTimer* mPSTNHeartbeatTimer;
@property(retain, nonatomic) NSRecursiveLock* mStartRecordLock;
@property(retain, nonatomic) NSRecursiveLock* mStartAudioLock;
@property(retain, nonatomic) NSRecursiveLock* mAudioDecLock;
@property(retain, nonatomic) NSRecursiveLock* mAudioEncLock;
@property(retain, nonatomic) AUAudioDevice* mAudioDevice;
@property(retain, nonatomic) PSTNComponent* mComponent;
@property(retain, nonatomic) PSTNDialData* mDialData;
@property(assign, nonatomic) int mErrCode;
@property(assign, nonatomic) int mStatus;
@property(retain, nonatomic) NSRecursiveLock* inputVideoRenderLock;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
-(void).cxx_destruct;
-(void)onNetworkStatusChange:(unsigned long)change;
-(unsigned)getIsConnected;
-(BOOL)getIsTalked;
-(int)getRoomId;
-(long long)getRoomKey;
-(void)SetAudioCodecType:(int)type;
-(void)SetCountryCode:(id)code;
-(void)SetIsCanConnect:(BOOL)connect;
-(void)SetSpeakerPhone:(BOOL)phone;
-(void)SetMicroPhoneMute:(BOOL)mute;
-(void)PressButton:(int)button;
-(void)Hangup;
-(void)BeRejected;
-(void)CancelCall;
-(void)PSTNCall:(id)call phoneNum:(id)num withCallType:(int)callType;
-(void)dealloc;
-(id)init;
-(int)OnTransportChannelEvent:(unsigned short)event ErrNo:(int)no;
-(int)OnTransportChannelCmd:(void*)cmd len:(int)len;
-(void)ConnectFail:(id)fail;
-(void)NetworkErr:(id)err;
-(void)StopConnect;
-(void)StartConnect;
-(void)tryStartConnect;
-(void)TalkBroken:(id)broken;
-(void)StopTalk;
-(void)StartAudioData;
-(void)StartAudioDataInNewThread;
-(void)StartRecordAndPlayAudioForVoip;
-(void)StartTalk;
-(void)tryStartTalk;
-(int)AudioDevGetData:(char*)data length:(unsigned long)length;
-(int)AudioDevPutData:(char*)data length:(unsigned long)length;
-(int)OnTransportChannelRttAndLR:(unsigned)lr lostRate:(unsigned)rate type:(unsigned)type;
-(int)OnTransportChannelData:(int)data pData:(void*)data2 len:(int)len;
-(void)DataNotify_Arq:(char*)arq len:(int)len type:(unsigned char)type;
-(void)DataNotify_pp:(char*)pp len:(int)len param:(short)param;
-(void)DataNotify:(char*)notify len:(int)len;
-(void)EventNotify:(long)notify param:(int)param type:(int)type;
-(void)audioDeviceStartedFail:(id)fail;
-(void)audioDeviceUnPluginHeadset:(id)headset;
-(void)audioDevicePluginHeadset:(id)headset;
-(void)audioDeviceFarawayEar:(id)ear;
-(void)audioDeviceNearEar:(id)ear;
-(void)SetMVEInfo:(XXStruct_D0r$vD*)info;
-(int)GetCPUCapacity;
-(unsigned long)GetNetType;
-(void)SendRedirectRequest;
-(void)SendStatReportRequest;
-(void)SendHeartbeatRequest;
-(void)SendShutdownRequest;
-(void)SendCancelInviteRequest;
-(void)SendInviteRequestBy:(id)by phoneNum:(id)num withCallType:(int)callType;
-(void)SetReportData:(id*)data channelReport:(id*)report engineReport:(id*)report3;
-(void)HandlePSTNRedirectResp:(id)resp Event:(unsigned long)event;
-(void)HandlePSTNStatReportResp:(id)resp Event:(unsigned long)event;
-(void)HandlePSTNHeartbeatResp:(id)resp Event:(unsigned long)event;
-(void)HandlePSTNShutdownResp:(id)resp Event:(unsigned long)event;
-(void)HandlePSTNCancelInviteResp:(id)resp Event:(unsigned long)event;
-(void)HandlePSTNInviteResp:(id)resp Event:(unsigned long)event;
-(void)MessageReturn:(id)aReturn Event:(unsigned long)event;
-(void)StopSessionWithProtocolErr:(int)protocolErr;
-(void)StopSession;
-(void)StartSession;
-(int)SetServerAddr;
-(void)handleEnterForeground;
-(void)handleEnterBackground;
-(void)BeginInterruption;
-(void)DialStatusTimerCheck;
-(void)HeartbeatTimerCheck;
-(void)UnInitAll;
-(void)InitAll;
-(void)OnGotRemoteStatus:(unsigned long)status ErrNo:(int)no ErrLevel:(int)level ErrMsg:(id)msg ErrTitle:(id)title;
-(void)OnGotDTMFPayloadType:(unsigned long)type;
-(void)OnSyncError:(int)error;
@end

