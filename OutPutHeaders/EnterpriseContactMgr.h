/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "IContactMgrExt.h"
#import "IMsgExt.h"
#import "MMService.h"
#import "MMService.h"
#import "PBMessageObserverDelegate.h"
#import "IEnterpriseMsgExt.h"

@class NSMutableArray, NSString, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface EnterpriseContactMgr : MMService <MMService, PBMessageObserverDelegate, IContactMgrExt, IEnterpriseMsgExt, IMsgExt> {
	NSMutableDictionary* _dicContactDB;
	NSMutableDictionary* _contactCache;
	NSMutableDictionary* _myContactCache;
	NSMutableDictionary* _dicUserId2BrandName;
	NSMutableArray* _aryGetUserContactRunningQueue;
	NSMutableArray* _aryGetUserContactWatingQueue;
	NSMutableArray* _aryGetBizChatInfoRunningQueue;
	NSMutableArray* _aryGetBizChatInfoWatingQueue;
	NSMutableArray* _deleteQueue;
	BOOL _isDeletingContact;
	NSObject<OS_dispatch_queue>* m_deleteDispatchQueue;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
-(void).cxx_destruct;
-(void)OnGetNewXmlMsg:(id)msg Type:(id)type MsgWrap:(id)wrap;
-(void)MessageReturn:(id)aReturn Event:(unsigned long)event;
-(void)OnGetNewEnterpriseMsg:(id)msg Brand:(id)brand;
-(void)onModifyContact:(id)contact;
-(void)handleUpdateBizhChatInfo:(id)info;
-(void)handleChatRoomContact:(id)contact needUpdateDB:(BOOL)db;
-(void)internalBatchUpdateContactDB:(id)db;
-(void)internalUpdateMyContactWithSvrResp:(id)svrResp userName:(id)name chatUser:(id)user;
-(void)handleGetFavBizChatListFromSvr:(id)svr;
-(void)getFavBizChatListFromSvr:(id)svr;
-(void)handleGetBizChatUserInfoListFromSvr:(id)svr;
-(void)getBizChatUserInfoListFromSvr:(id)svr;
-(void)handleGetBizChatInfoListFromSvr:(id)svr;
-(void)getBizChatInfoListFromSvr:(id)svr;
-(void)handleGetBizChatMyUserInfoFromSvr:(id)svr;
-(void)getBizChatMyUserInfoFromSvr:(id)svr;
-(void)handleSetBrandFlagToSvr:(id)svr;
-(void)setBrandFlagToSvr:(id)svr bitMask:(unsigned long)mask bitValue:(unsigned long)value;
-(void)clearGetUserContactInfoRunningQueue;
-(void)batchAddGetUserInfoQueue:(id)queue brandName:(id)name;
-(void)checkGetUserContactInfoWaitingQueue;
-(BOOL)hasInGetUserContactWaitingQueue:(id)getUserContactWaitingQueue;
-(BOOL)hasInGetUserContactRunningQueue:(id)getUserContactRunningQueue;
-(void)clearGetChatInfoRunningQueue;
-(void)addGetChatInfoQueue:(id)queue brandUserName:(id)name;
-(void)addGetChatInfoQueueWithoutCheck:(id)check brandUserName:(id)name;
-(void)checkGetBizChatInfoWaitingQueue;
-(BOOL)hasInGetBizChatInfoWaitingQueue:(id)getBizChatInfoWaitingQueue;
-(BOOL)hasInGetBizChatInfoRunningQueue:(id)getBizChatInfoRunningQueue;
-(void)doDeleteAllContactsForBrand:(id)brand;
-(void)checkDeleteQueue;
-(void)addDeleteTask:(id)task;
-(void)restoreDeleteQueue;
-(void)saveDeleteQueue;
-(void)onCallModifyContactDraftExtension:(id)extension;
-(void)onCallModifyBatchContactExtension:(id)extension;
-(void)onCallModifyContactExtension:(id)extension;
-(BOOL)addContact:(id)contact AtUser:(id)user;
-(BOOL)deleteAtUserList:(id)userList;
-(void)deleteContact:(id)contact brand:(id)brand;
-(void)deleteAllContactsForBrand:(id)brand;
-(void)updateFavBizChatListFromSvr:(id)svr;
-(void)batchUpdateUserInfoFromSvr:(id)svr;
-(void)batchUpdateChatInfoFromSvr:(id)svr;
-(void)updateMyContactFromSvr:(id)svr;
-(void)updateMyContactUserFlagToSvr:(id)svr bitMask:(unsigned long)mask bitValue:(unsigned long)value;
-(void)updateMyContactFromSvrIfNotExist:(id)svrIfNotExist;
-(BOOL)updateEnterpriseContactFromSvrIfNeed:(id)svrIfNeed brand:(id)brand contactVer:(unsigned long)ver;
-(BOOL)updateEnterpriseContactFromSvr:(id)svr;
-(id)getFavContactListByBrand:(id)brand;
-(id)getMyContact:(id)contact;
-(id)getContactByUserName:(id)name;
-(id)getContactByUserName:(id)name brand:(id)brand;
-(id)getContactByUserName:(id)name displayName:(id)name2 brand:(id)brand;
-(void)modifyEnterpriseHeadImageUpdateFlag:(id)flag isNeedUpdate:(BOOL)update;
-(void)updateContactDisplayNameToDB:(id)db brand:(id)brand displayName:(id)name;
-(void)updateContactUserFlagToDB:(id)db brand:(id)brand userFlag:(unsigned long)flag;
-(void)updateContactUserFlagToCache:(id)cache brand:(id)brand userFlag:(unsigned long)flag;
-(void)updateContactToDB:(id)db;
-(void)batchUpdateContactToDB:(id)db;
-(BOOL)updateFavContactList:(id)list brand:(id)brand;
-(BOOL)setContact:(id)contact draft:(id)draft;
-(id)getEnterpriseDBWithBrandUserName:(id)brandUserName;
-(id)dbPathForBrandUserName:(id)brandUserName;
-(void)onServiceInit;
-(void)dealloc;
-(id)init;
@end

