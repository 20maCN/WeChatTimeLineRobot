/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MMService.h"
#import "MMKernelExt.h"
#import "MMService.h"
#import "EmoticonBackupDeleteNotifyExt.h"
#import "CNetworkStatusExt.h"
#import "EmoticonBackupLogicObjectDelegate.h"
#import "EmoticonRecoverLogicObjectDelegate.h"
#import "EmoticonDeleteFromServerLogicObjectDelegate.h"
#import "EmoticonAddFromServerLogicObjectDelegate.h"
#import "IMsgExt.h"
#import "EmoticonRestartBackupWhenDeleteTaskDelegate.h"

@class EmoticonBackupLogicObject, NSString, EmoticonRecoverLogicObject, NSMutableArray;

@interface EmoticonBackUpMgr : MMService <EmoticonBackupLogicObjectDelegate, EmoticonRecoverLogicObjectDelegate, MMKernelExt, CNetworkStatusExt, IMsgExt, EmoticonDeleteFromServerLogicObjectDelegate, EmoticonAddFromServerLogicObjectDelegate, EmoticonRestartBackupWhenDeleteTaskDelegate, EmoticonBackupDeleteNotifyExt, MMService> {
	BOOL m_hasOnceStartRecover;
	EmoticonBackupLogicObject* m_backupLogicObject;
	EmoticonRecoverLogicObject* m_recoverLogicObject;
	NSMutableArray* m_notifyTaskList;
	unsigned long m_userActionStatus;
	unsigned long m_lastManageViewUploadTime;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) unsigned long m_lastManageViewUploadTime;
@property(assign, nonatomic) BOOL m_hasOnceStartRecover;
@property(retain, nonatomic) NSMutableArray* m_notifyTaskList;
@property(retain, nonatomic) EmoticonRecoverLogicObject* m_recoverLogicObject;
@property(retain, nonatomic) EmoticonBackupLogicObject* m_backupLogicObject;
@property(assign, nonatomic) unsigned long m_userActionStatus;
+(unsigned long)ActionStatusRecoverForbiden;
+(unsigned long)ActionStatusAllowRecover;
+(unsigned long)ActionStatusNoAction;
-(void).cxx_destruct;
-(void)onEmoticonRestartBackupWhenDeleteTaskExecute;
-(void)checkIfServerOverLimitAndBackup;
-(void)onEmoticonBackupDeleteNotify;
-(void)runNotifyTask;
-(void)onAddSyncLogicBeginWithFullMd5List:(id)fullMd5List;
-(BOOL)canResumeAddSyncLogic;
-(void)onDeleteSyncLogicComplete;
-(BOOL)canResumeDeleteSyncLogic;
-(void)OnGetNewXmlMsg:(id)msg Type:(id)type MsgWrap:(id)wrap;
-(id)filterMsgType;
-(void)ReachabilityChange:(unsigned long)change;
-(void)onAuthOK;
-(BOOL)shouldSpeedUpRecoverDonwload;
-(BOOL)isUserAllowOnRecover;
-(BOOL)isUserPauseOnRecover;
-(BOOL)isUserNoActionOnRecover;
-(void)onEmoticonRecoverLogicAutoPauseOnWWan;
-(void)onEmoticonRecoverLogicDownloadOneEmoticonOK;
-(void)onEmoticonRecoverLogicFailed;
-(void)onEmoticonRecoverLogicOk;
-(void)onEmoticonBackupLogicFailed;
-(void)onEmoticonBackupLogicOk;
-(void)internalGoonRecover;
-(void)goonRecover;
-(void)pauseRecover;
-(BOOL)isRecoverEmoticonBeenPause;
-(BOOL)isRecoveringEmoticonFromServer;
-(BOOL)isRecoveringEmoticonComplete;
-(BOOL)isRecoveringEmoticonPause;
-(BOOL)isRecoveringEmoticon;
-(void)recoverEmoticonFromServer;
-(void)backupLocalEmoticonToServerFromManageView;
-(void)backupLocalEmoticonToServer;
-(void)backupLocalEmoticonToServerAndIgnoreOnceLimit:(BOOL)serverAndIgnoreOnceLimit;
-(BOOL)canStartCgiNow;
-(id)init;
-(void)dealloc;
@end

