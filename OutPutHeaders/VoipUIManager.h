/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WeChat-Structs.h"
#import "MMService.h"
#import "VideoVoipViewDelegate.h"
#import "VoipMinimizeWindowDelegate.h"
#import "MMKernelExt.h"
#import "VoipAlertViewDelegate.h"
#import "MMService.h"
#import "IVOIPExt.h"
#import "MMConfigMgrExt.h"
#import "MultiTalkMainWindowDelegate.h"

@class MMVoipToastWindow, MultiTalkMainWindow, VoipAlertView, NSString, CContact, VideoVoipCallerView, VideoVoipReceiverView, VoipMinimizeWindow;

@interface VoipUIManager : MMService <MMKernelExt, MultiTalkMainWindowDelegate, VideoVoipViewDelegate, VoipMinimizeWindowDelegate, MMService, IVOIPExt, VoipAlertViewDelegate, MMConfigMgrExt> {
	CContact* m_tempContact;
	VoipAlertView* m_voipAlertView;
	VideoVoipCallerView* m_videoVoipCallerViewController;
	VideoVoipReceiverView* m_videoVoipReceiverViewController;
	VoipMinimizeWindow* m_voipMinimizeWindow;
	MMVoipToastWindow* m_voipToastWindow;
	MultiTalkMainWindow* m_mainWindow;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) MultiTalkMainWindow* m_mainWindow;
@property(retain, nonatomic) VideoVoipReceiverView* m_videoVoipReceiverViewController;
@property(retain, nonatomic) VideoVoipCallerView* m_videoVoipCallerViewController;
@property(retain, nonatomic) MMVoipToastWindow* m_voipToastWindow;
@property(retain, nonatomic) VoipMinimizeWindow* m_voipMinimizeWindow;
@property(retain, nonatomic) CContact* m_tempContact;
@property(retain, nonatomic) VoipAlertView* m_voipAlertView;
+(BOOL)canForceStartVoiceWithContact:(id)contact;
+(BOOL)canStartVoiceWithContact:(id)contact;
+(BOOL)canStartVideoWithContact:(id)contact;
-(void).cxx_destruct;
-(void)onPreQuit;
-(void)onMMDynamicConfigUpdated;
-(void)OnTellMeViewIsExist:(BOOL*)exist;
-(void)SendInvite:(int)invite;
-(void)Cancel;
-(CGRect)onMultiTalkMainWindowRequestMinimizeFrame;
-(void)onMultiTalkMainWindowExtendFromCollapseAnimationDidEnd;
-(void)onMultiTalkMainWindowExtendFromCollapseAnimationWillStart;
-(void)onMultiTalkMainWindowCollapseAnimationWillStart;
-(void)onMultiTalkMainWindowCollapseAnimationDidEnd;
-(void)onMultiTalkMainWindowQuitAnimationDidEnd;
-(void)onMultiTalkMainWindowQuitAnimationWillStart;
-(void)onMultiTalkMainWindowExtendAnimationDidEnd;
-(BOOL)onVideoVoipViewRequestMinimizeStatus;
-(void)onVideoVoipViewChangeToMinimizeMode;
-(void)onVideoVoipViewClose;
-(void)onVoipMinimizeWindowClicked;
-(void)switchToSpeakPhoneMode:(BOOL)speakPhoneMode;
-(void)clearCurrentString;
-(BOOL)isUsingEarDevice;
-(void)changeToMinimizeToast;
-(void)changeToAudioToast;
-(void)changeToVideoToast;
-(void)addScrollingString:(id)string withDisplayTime:(float)displayTime;
-(BOOL)isMinimizeMode;
-(void)showCannotStartVoipTwice;
-(id)getConflictWording;
-(void)showConflictWording;
-(void)recoverVoipAudioMode;
-(BOOL)isVoipSpeakerMode;
-(BOOL)isVideoVoipWorking;
-(BOOL)isVoipWorking;
-(BOOL)isViewEnding;
-(BOOL)showVideoEntranceInMainFrame;
-(BOOL)closeViewWith:(id)with;
-(void)openVoipViewWithContact:(id)contact isCaller:(BOOL)caller andMsgWrap:(id)wrap;
-(void)hangupForNotSupportVoiceVoip;
-(BOOL)isTheSameContactWithCurrentVoip:(id)currentVoip;
-(void)openVideoVoipViewWithContact:(id)contact isCaller:(BOOL)caller andMsgWrap:(id)wrap isEarMode:(BOOL)mode;
-(BOOL)canStartVoip;
-(BOOL)canOpenVoipByTimeLogic:(id)logic;
-(void)onServiceReloadData;
-(void)dealloc;
-(id)init;
@end

