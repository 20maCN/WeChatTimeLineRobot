/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WCCommitViewResultDelegate.h"
#import "SessionSelectControllerDelegate.h"
#import "UIAlertViewDelegate.h"
#import "ShareMessageConfirmLogicHelperDelegate.h"
#import "IStoreEmotionRewardExt.h"
#import "WCActionSheetDelegate.h"
#import "WeChat-Structs.h"
#import "IEmoticonPackageStateMgrExt.h"
#import "MMUIViewController.h"
#import "EmoticonButtonDescExt.h"
#import "StoreEmotionDeleteCgiDelegate.h"
#import "EmotionStoreDetailRewardEntranceDelegate.h"

@class EmoticonStoreGridView, UIImageView, UILabel, EmoticonStoreItem, EmoticonStoreDetailRewardEntranceView, UIButton, EmotionRewardResponseInfo, EmoticonStoreDetailCoverImageView, ShareMessageConfirmLogicHelper, StoreEmotionDeleteCgi, EmotionStoreDetailDesignerContainerView, NSString, EmotionProgressView, NSMutableArray, MMLoadingView, MMUIScrollView, UIView;

@interface MMStoreEmotionDetailViewController : MMUIViewController <EmoticonButtonDescExt, StoreEmotionDeleteCgiDelegate, IStoreEmotionRewardExt, EmotionStoreDetailRewardEntranceDelegate, IEmoticonPackageStateMgrExt, UIAlertViewDelegate, WCActionSheetDelegate, ShareMessageConfirmLogicHelperDelegate, SessionSelectControllerDelegate, WCCommitViewResultDelegate> {
	int _type;
	int _scene;
	BOOL _needScrollToBottom;
	BOOL _m_isGettingRewardInfo;
	NSString* m_storeSession;
	EmoticonStoreItem* m_storeItem;
	NSMutableArray* m_arrEmoticon;
	MMUIScrollView* m_tableView;
	UIButton* m_button;
	EmotionProgressView* m_progressView;
	UIView* m_downLoadStateView;
	UIButton* m_cancelButton;
	unsigned long m_extrance;
	UILabel* m_priceLabel;
	EmoticonStoreDetailCoverImageView* m_coverImageView;
	UILabel* m_nameLabel;
	UILabel* m_timeLabel;
	UILabel* m_copyrightLabel;
	UIButton* m_statementButton;
	EmoticonStoreGridView* m_thumbGridView;
	UIView* m_previewTipsLabel;
	UILabel* m_descLabel;
	UIImageView* m_animationImageView;
	UIImageView* m_animationView;
	UIView* m_packDescContainView;
	UIButton* m_useButton;
	ShareMessageConfirmLogicHelper* m_shareToFriendHelper;
	MMLoadingView* m_shareLoadingView;
	NSString* m_clickRegionDesc;
	UILabel* m_serverDescLabel;
	UILabel* m_previewDescLabel;
	unsigned long m_scence;
	unsigned long m_clickFlag;
	UIButton* _m_complainButton;
	UILabel* _m_animationLabel;
	StoreEmotionDeleteCgi* _m_deleteCgi;
	EmoticonStoreDetailRewardEntranceView* _rewardView;
	EmotionRewardResponseInfo* _m_rewardInfo;
	EmotionStoreDetailDesignerContainerView* _designerContainerView;
	UIView* _statementContainerView;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) UIView* statementContainerView;
@property(retain, nonatomic) EmotionStoreDetailDesignerContainerView* designerContainerView;
@property(assign, nonatomic) BOOL m_isGettingRewardInfo;
@property(retain, nonatomic) EmotionRewardResponseInfo* m_rewardInfo;
@property(retain, nonatomic) EmoticonStoreDetailRewardEntranceView* rewardView;
@property(retain, nonatomic) StoreEmotionDeleteCgi* m_deleteCgi;
@property(assign, nonatomic) unsigned long m_clickFlag;
@property(assign, nonatomic) unsigned long m_scence;
@property(retain, nonatomic) UILabel* m_previewDescLabel;
@property(retain, nonatomic) UILabel* m_serverDescLabel;
@property(retain, nonatomic) NSString* m_clickRegionDesc;
@property(retain, nonatomic) MMLoadingView* m_shareLoadingView;
@property(retain, nonatomic) ShareMessageConfirmLogicHelper* m_shareToFriendHelper;
@property(retain, nonatomic) UIButton* m_useButton;
@property(retain, nonatomic) UIView* m_packDescContainView;
@property(retain, nonatomic) UIImageView* m_animationView;
@property(retain, nonatomic) UILabel* m_animationLabel;
@property(retain, nonatomic) UIImageView* m_animationImageView;
@property(retain, nonatomic) UILabel* m_descLabel;
@property(retain, nonatomic) UIView* m_previewTipsLabel;
@property(retain, nonatomic) EmoticonStoreGridView* m_thumbGridView;
@property(retain, nonatomic) UIButton* m_statementButton;
@property(retain, nonatomic) UIButton* m_complainButton;
@property(retain, nonatomic) UILabel* m_copyrightLabel;
@property(retain, nonatomic) UILabel* m_timeLabel;
@property(retain, nonatomic) UILabel* m_nameLabel;
@property(retain, nonatomic) EmoticonStoreDetailCoverImageView* m_coverImageView;
@property(retain, nonatomic) UILabel* m_priceLabel;
@property(retain, nonatomic) UIView* m_downLoadStateView;
@property(retain, nonatomic) EmotionProgressView* m_progressView;
@property(retain, nonatomic) UIButton* m_cancelButton;
@property(retain, nonatomic) UIButton* m_button;
@property(retain, nonatomic) MMUIScrollView* m_tableView;
@property(retain, nonatomic) NSMutableArray* m_arrEmoticon;
@property(retain, nonatomic) EmoticonStoreItem* m_storeItem;
@property(retain, nonatomic) NSString* m_storeSession;
@property(assign, nonatomic) BOOL needScrollToBottom;
@property(assign, nonatomic) unsigned long m_extrance;
+(id)genProductIdFromTimelineUserData:(id)timelineUserData;
-(void).cxx_destruct;
-(void)onStoreEmotionRewardCompleteOkWithPid:(id)pid RewardInfo:(id)info;
-(void)onGetEmotionRewardFinishedWithPid:(id)pid RewardInfo:(id)info;
-(void)onShowAllDonorsButtonClick;
-(void)onRewardButtonClick;
-(void)onStoreEmotionDeleteCgiFailed:(id)failed;
-(void)onStoreEmotionDeleteCgiOK:(id)ok;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)viewDidLayoutSubviews;
-(void)onGetEmoticonDownloadFlag:(unsigned long)flag andButtonDesc:(id)desc;
-(BOOL)needJudgeClickFlag;
-(void)setRightBtnGreenBackground;
-(void)setRightBtnGrayBackground;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)onState:(int)state;
-(BOOL)showServerDescLabel;
-(void)updateSubViewsMarginWithContainViewHeight:(float)containViewHeight;
-(BOOL)showExpiredButton;
-(void)OnDownloadProgressChanged:(id)changed CurrLength:(unsigned)length TotalLength:(unsigned)length3;
-(void)OnUpdateEmoticonPackageState:(id)state toState:(int)state2;
-(void)viewWillBePoped:(BOOL)view;
-(void)OnBuyItemCancel:(id)cancel;
-(void)OnBuyItemFailed:(id)failed;
-(void)OnBuyItemSuccess:(id)success;
-(void)onLawBtnClick;
-(void)onCancelDownloadBtnClick;
-(void)checkEmoticonBuyRet:(int)ret;
-(void)onPurchaseBtnClick;
-(void)reportDownload;
-(void)onClickComplainButton;
-(void)OnCancelModalView:(id)view;
-(CGPoint)makeStatementCell:(id)cell marginPoint:(CGPoint)point;
-(CGPoint)makeCopyRightCell:(id)cell marginPoint:(CGPoint)point;
-(void)clickDesignerCell;
-(CGPoint)updateDesignerView:(CGPoint)view;
-(CGPoint)makeDesignerCell:(id)cell marginPoint:(CGPoint)point;
-(void)tryGetRewardInfo;
-(CGPoint)updateRewardViewWithMarginPoint:(CGPoint)marginPoint;
-(CGPoint)makeRewardCell:(id)cell marginPoint:(CGPoint)point;
-(CGPoint)makeEmoticonsCell:(id)cell rowEmoticons:(id)emoticons Previews:(id)previews marginPoint:(CGPoint)point;
-(CGPoint)updateGridView:(id)view WithEmoticons:(id)emoticons Previews:(id)previews;
-(CGPoint)updateStatementMarginPoint:(CGPoint)point;
-(CGPoint)updateCopyRight:(id)right marginPoint:(CGPoint)point;
-(CGPoint)updatePreviewTipCell:(CGPoint)cell;
-(CGPoint)makePreviewTipCell:(id)cell marginPoint:(CGPoint)point;
-(CGPoint)updateDescCell:(id)cell marginPoint:(CGPoint)point;
-(CGPoint)makeDescCell:(id)cell marginPoint:(CGPoint)point;
-(void)makeBuyButton:(id)button item:(id)item;
-(void)openSessionOfContact:(id)contact;
-(void)doReset;
-(void)useThisEmoticon;
-(void)makeUseButton:(id)button item:(id)item;
-(CGPoint)updateCoverImageView:(CGPoint)view;
-(CGPoint)makeCoverImageCell:(id)cell;
-(void)updatePackTypeView:(CGPoint)view;
-(void)makePackTypeLabel:(id)label item:(id)item;
-(CGPoint)updatePackTimeLabel:(id)label item:(id)item marginPoint:(CGPoint)point;
-(void)makeServerDescLabel:(id)label item:(id)item;
-(void)makePackTimeLabel:(id)label item:(id)item;
-(CGPoint)updatePackNameLabel:(id)label item:(id)item marginPoint:(CGPoint)point;
-(void)makePackNameLabel:(id)label item:(id)item;
-(void)refreshPriceLabelString;
-(void)makePackPriceLabel:(id)label item:(id)item;
-(CGPoint)makeContainerView:(id)view item:(id)item;
-(CGPoint)updateUseButton:(CGPoint)button;
-(CGPoint)updateServerDescLabel:(CGPoint)label;
-(CGPoint)updateBuyButton:(CGPoint)button;
-(CGPoint)updateTypeLabel:(CGPoint)label;
-(CGPoint)updateTimeLabel:(CGPoint)label;
-(CGPoint)updateNameLabel:(CGPoint)label;
-(CGPoint)updatePriceLabel:(CGPoint)label;
-(CGPoint)updateContainerView:(CGPoint)view;
-(CGPoint)updateDescView:(CGPoint)view;
-(CGPoint)updatePreviewTipsView:(CGPoint)view;
-(CGPoint)updatePreviewGridView:(CGPoint)view;
-(CGPoint)makeCoverImage:(id)image item:(id)item;
-(void)updateScrollView;
-(void)onDoneForwardForForwardView:(id)forwardView;
-(void)onCancelForwardForForwardView:(id)forwardView;
-(void)OnStayAtWeChat:(id)weChat;
-(void)OnBackTo3rdApp:(id)a3rdApp;
-(void)OnSendMessageCancel:(id)cancel;
-(void)OnSendMessageFail:(id)fail WithError:(int)error;
-(void)OnSendMessageOK:(id)ok;
-(BOOL)recurisiveCheckMsgControllerToRootFrom:(id)from;
-(BOOL)checkMsgControllerFrom:(id)from;
-(void)OnSelectSessionCancel:(id)cancel;
-(void)OnSelectSession:(id)session SessionSelectController:(id)controller;
-(id)genShareFriendMessage:(id)message;
-(id)genTimelineUserData;
-(id)genUploadTask;
-(void)shareToTimeline;
-(void)shareToFriend;
-(BOOL)hasNecessaryShareInfo;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
-(void)onOperate:(id)operate;
-(void)updateReportButton;
-(void)updateRightBarButton;
-(void)initScrollView;
-(void)initView;
-(void)initData;
-(void)viewDidLoad;
-(void)setScene:(int)scene andType:(int)type;
-(id)initWithPid:(id)pid Scence:(unsigned long)scence;
-(id)initWithStoreSession:(id)storeSession StoreItem:(id)item Scence:(unsigned long)scence;
-(void)dealloc;
@end

